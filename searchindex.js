Search.setIndex({"docnames": ["auto_examples/basics/demo_custom_prior", "auto_examples/basics/demo_dataset", "auto_examples/basics/demo_dip", "auto_examples/basics/demo_lidar", "auto_examples/basics/demo_loading", "auto_examples/basics/demo_pansharpening", "auto_examples/basics/demo_physics", "auto_examples/basics/demo_physics_tour", "auto_examples/basics/demo_train_inpainting", "auto_examples/basics/sg_execution_times", "auto_examples/index", "auto_examples/optimization/demo_3D_wavelets", "auto_examples/optimization/demo_TV_minimisation", "auto_examples/optimization/demo_wavelet_prior", "auto_examples/optimization/sg_execution_times", "auto_examples/patch-priors/demo_epll", "auto_examples/patch-priors/demo_patch_priors_CT", "auto_examples/patch-priors/sg_execution_times", "auto_examples/plug-and-play/demo_PnP_DPIR_deblur", "auto_examples/plug-and-play/demo_PnP_custom_optim", "auto_examples/plug-and-play/demo_RED_GSPnP_SR", "auto_examples/plug-and-play/demo_vanilla_PnP", "auto_examples/plug-and-play/sg_execution_times", "auto_examples/sampling/demo_custom_kernel", "auto_examples/sampling/demo_ddrm", "auto_examples/sampling/demo_diffpir", "auto_examples/sampling/demo_dps", "auto_examples/sampling/demo_sampling", "auto_examples/sampling/sg_execution_times", "auto_examples/self-supervised-learning/demo_equivariant_imaging", "auto_examples/self-supervised-learning/demo_multioperator_imaging", "auto_examples/self-supervised-learning/demo_n2n_denoising", "auto_examples/self-supervised-learning/demo_sure_denoising", "auto_examples/self-supervised-learning/sg_execution_times", "auto_examples/sg_execution_times", "auto_examples/unfolded/demo_DEQ", "auto_examples/unfolded/demo_LISTA", "auto_examples/unfolded/demo_custom_prior_unfolded", "auto_examples/unfolded/demo_learned_primal_dual", "auto_examples/unfolded/demo_unfolded_constrained_LISTA", "auto_examples/unfolded/demo_vanilla_unfolded", "auto_examples/unfolded/sg_execution_times", "deepinv.contributing", "deepinv.datasets", "deepinv.loss", "deepinv.models", "deepinv.multigpu", "deepinv.notation", "deepinv.optim", "deepinv.physics", "deepinv.pnp", "deepinv.sampling", "deepinv.unfolded", "deepinv.utils", "index", "sg_execution_times", "stubs/deepinv.datasets.HDF5Dataset", "stubs/deepinv.datasets.PatchDataset", "stubs/deepinv.datasets.generate_dataset", "stubs/deepinv.loss.CharbonnierLoss", "stubs/deepinv.loss.EILoss", "stubs/deepinv.loss.FNEJacobianSpectralNorm", "stubs/deepinv.loss.JacobianSpectralNorm", "stubs/deepinv.loss.LpNorm", "stubs/deepinv.loss.MCLoss", "stubs/deepinv.loss.MOILoss", "stubs/deepinv.loss.Neighbor2Neighbor", "stubs/deepinv.loss.R2RLoss", "stubs/deepinv.loss.SplittingLoss", "stubs/deepinv.loss.SupLoss", "stubs/deepinv.loss.SureGaussianLoss", "stubs/deepinv.loss.SurePGLoss", "stubs/deepinv.loss.SurePoissonLoss", "stubs/deepinv.loss.TVLoss", "stubs/deepinv.models.ArtifactRemoval", "stubs/deepinv.models.AutoEncoder", "stubs/deepinv.models.BM3D", "stubs/deepinv.models.ConvDecoder", "stubs/deepinv.models.DRUNet", "stubs/deepinv.models.DeepImagePrior", "stubs/deepinv.models.DiffUNet", "stubs/deepinv.models.DnCNN", "stubs/deepinv.models.EPLL", "stubs/deepinv.models.EquivariantDenoiser", "stubs/deepinv.models.GSDRUNet", "stubs/deepinv.models.MedianFilter", "stubs/deepinv.models.PDNet_DualBlock", "stubs/deepinv.models.PDNet_PrimalBlock", "stubs/deepinv.models.PatchNR", "stubs/deepinv.models.SCUNet", "stubs/deepinv.models.SwinIR", "stubs/deepinv.models.TGVDenoiser", "stubs/deepinv.models.TVDenoiser", "stubs/deepinv.models.UNet", "stubs/deepinv.models.WaveletDenoiser", "stubs/deepinv.models.WaveletDictDenoiser", "stubs/deepinv.models.epll.GaussianMixtureModel", "stubs/deepinv.optim.BaseOptim", "stubs/deepinv.optim.DataFidelity", "stubs/deepinv.optim.FixedPoint", "stubs/deepinv.optim.IndicatorL2", "stubs/deepinv.optim.L1", "stubs/deepinv.optim.L1Prior", "stubs/deepinv.optim.L2", "stubs/deepinv.optim.LogPoissonLikelihood", "stubs/deepinv.optim.OptimIterator", "stubs/deepinv.optim.PatchPrior", "stubs/deepinv.optim.PnP", "stubs/deepinv.optim.PoissonLikelihood", "stubs/deepinv.optim.Prior", "stubs/deepinv.optim.RED", "stubs/deepinv.optim.ScorePrior", "stubs/deepinv.optim.TVPrior", "stubs/deepinv.optim.Tikhonov", "stubs/deepinv.optim.WaveletPrior", "stubs/deepinv.optim.optim_builder", "stubs/deepinv.optim.optim_iterators.ADMMIteration", "stubs/deepinv.optim.optim_iterators.CPIteration", "stubs/deepinv.optim.optim_iterators.DRSIteration", "stubs/deepinv.optim.optim_iterators.GDIteration", "stubs/deepinv.optim.optim_iterators.HQSIteration", "stubs/deepinv.optim.optim_iterators.PGDIteration", "stubs/deepinv.optim.utils.conjugate_gradient", "stubs/deepinv.optim.utils.gradient_descent", "stubs/deepinv.physics.BlindBlur", "stubs/deepinv.physics.Blur", "stubs/deepinv.physics.BlurFFT", "stubs/deepinv.physics.CompressedSensing", "stubs/deepinv.physics.Decolorize", "stubs/deepinv.physics.DecomposablePhysics", "stubs/deepinv.physics.Denoising", "stubs/deepinv.physics.Downsampling", "stubs/deepinv.physics.GaussianNoise", "stubs/deepinv.physics.Haze", "stubs/deepinv.physics.Inpainting", "stubs/deepinv.physics.LinearPhysics", "stubs/deepinv.physics.LogPoissonNoise", "stubs/deepinv.physics.MRI", "stubs/deepinv.physics.Pansharpen", "stubs/deepinv.physics.Physics", "stubs/deepinv.physics.PoissonGaussianNoise", "stubs/deepinv.physics.PoissonNoise", "stubs/deepinv.physics.SinglePhotonLidar", "stubs/deepinv.physics.SinglePixelCamera", "stubs/deepinv.physics.Tomography", "stubs/deepinv.physics.UniformGaussianNoise", "stubs/deepinv.physics.UniformNoise", "stubs/deepinv.physics.adjoint_function", "stubs/deepinv.physics.blur.gaussian_blur", "stubs/deepinv.physics.forward.adjoint_function", "stubs/deepinv.sampling.DDRM", "stubs/deepinv.sampling.DPS", "stubs/deepinv.sampling.DiffPIR", "stubs/deepinv.sampling.DiffusionSampler", "stubs/deepinv.sampling.MonteCarlo", "stubs/deepinv.sampling.SKRock", "stubs/deepinv.sampling.ULA", "stubs/deepinv.test", "stubs/deepinv.train", "stubs/deepinv.training_utils.train_normalizing_flow", "stubs/deepinv.transform.Rotate", "stubs/deepinv.transform.Scale", "stubs/deepinv.transform.Shift", "stubs/deepinv.unfolded.BaseDEQ", "stubs/deepinv.unfolded.BaseUnfold", "stubs/deepinv.unfolded.DEQ_builder", "stubs/deepinv.unfolded.unfolded_builder", "stubs/deepinv.utils.TensorList", "stubs/deepinv.utils.cal_psnr", "stubs/deepinv.utils.get_freer_gpu", "stubs/deepinv.utils.load_url_image", "stubs/deepinv.utils.ones_like", "stubs/deepinv.utils.plot", "stubs/deepinv.utils.plot_curves", "stubs/deepinv.utils.plot_parameters", "stubs/deepinv.utils.rand_like", "stubs/deepinv.utils.randn_like", "stubs/deepinv.utils.zeros_like"], "filenames": ["auto_examples/basics/demo_custom_prior.rst", "auto_examples/basics/demo_dataset.rst", "auto_examples/basics/demo_dip.rst", "auto_examples/basics/demo_lidar.rst", "auto_examples/basics/demo_loading.rst", "auto_examples/basics/demo_pansharpening.rst", "auto_examples/basics/demo_physics.rst", "auto_examples/basics/demo_physics_tour.rst", "auto_examples/basics/demo_train_inpainting.rst", "auto_examples/basics/sg_execution_times.rst", "auto_examples/index.rst", "auto_examples/optimization/demo_3D_wavelets.rst", "auto_examples/optimization/demo_TV_minimisation.rst", "auto_examples/optimization/demo_wavelet_prior.rst", "auto_examples/optimization/sg_execution_times.rst", "auto_examples/patch-priors/demo_epll.rst", "auto_examples/patch-priors/demo_patch_priors_CT.rst", "auto_examples/patch-priors/sg_execution_times.rst", "auto_examples/plug-and-play/demo_PnP_DPIR_deblur.rst", "auto_examples/plug-and-play/demo_PnP_custom_optim.rst", "auto_examples/plug-and-play/demo_RED_GSPnP_SR.rst", "auto_examples/plug-and-play/demo_vanilla_PnP.rst", "auto_examples/plug-and-play/sg_execution_times.rst", "auto_examples/sampling/demo_custom_kernel.rst", "auto_examples/sampling/demo_ddrm.rst", "auto_examples/sampling/demo_diffpir.rst", "auto_examples/sampling/demo_dps.rst", "auto_examples/sampling/demo_sampling.rst", "auto_examples/sampling/sg_execution_times.rst", "auto_examples/self-supervised-learning/demo_equivariant_imaging.rst", "auto_examples/self-supervised-learning/demo_multioperator_imaging.rst", "auto_examples/self-supervised-learning/demo_n2n_denoising.rst", "auto_examples/self-supervised-learning/demo_sure_denoising.rst", "auto_examples/self-supervised-learning/sg_execution_times.rst", "auto_examples/sg_execution_times.rst", "auto_examples/unfolded/demo_DEQ.rst", "auto_examples/unfolded/demo_LISTA.rst", "auto_examples/unfolded/demo_custom_prior_unfolded.rst", "auto_examples/unfolded/demo_learned_primal_dual.rst", "auto_examples/unfolded/demo_unfolded_constrained_LISTA.rst", "auto_examples/unfolded/demo_vanilla_unfolded.rst", "auto_examples/unfolded/sg_execution_times.rst", "deepinv.contributing.rst", "deepinv.datasets.rst", "deepinv.loss.rst", "deepinv.models.rst", "deepinv.multigpu.rst", "deepinv.notation.rst", "deepinv.optim.rst", "deepinv.physics.rst", "deepinv.pnp.rst", "deepinv.sampling.rst", "deepinv.unfolded.rst", "deepinv.utils.rst", "index.rst", "sg_execution_times.rst", "stubs/deepinv.datasets.HDF5Dataset.rst", "stubs/deepinv.datasets.PatchDataset.rst", "stubs/deepinv.datasets.generate_dataset.rst", "stubs/deepinv.loss.CharbonnierLoss.rst", "stubs/deepinv.loss.EILoss.rst", "stubs/deepinv.loss.FNEJacobianSpectralNorm.rst", "stubs/deepinv.loss.JacobianSpectralNorm.rst", "stubs/deepinv.loss.LpNorm.rst", "stubs/deepinv.loss.MCLoss.rst", "stubs/deepinv.loss.MOILoss.rst", "stubs/deepinv.loss.Neighbor2Neighbor.rst", "stubs/deepinv.loss.R2RLoss.rst", "stubs/deepinv.loss.SplittingLoss.rst", "stubs/deepinv.loss.SupLoss.rst", "stubs/deepinv.loss.SureGaussianLoss.rst", "stubs/deepinv.loss.SurePGLoss.rst", "stubs/deepinv.loss.SurePoissonLoss.rst", "stubs/deepinv.loss.TVLoss.rst", "stubs/deepinv.models.ArtifactRemoval.rst", "stubs/deepinv.models.AutoEncoder.rst", "stubs/deepinv.models.BM3D.rst", "stubs/deepinv.models.ConvDecoder.rst", "stubs/deepinv.models.DRUNet.rst", "stubs/deepinv.models.DeepImagePrior.rst", "stubs/deepinv.models.DiffUNet.rst", "stubs/deepinv.models.DnCNN.rst", "stubs/deepinv.models.EPLL.rst", "stubs/deepinv.models.EquivariantDenoiser.rst", "stubs/deepinv.models.GSDRUNet.rst", "stubs/deepinv.models.MedianFilter.rst", "stubs/deepinv.models.PDNet_DualBlock.rst", "stubs/deepinv.models.PDNet_PrimalBlock.rst", "stubs/deepinv.models.PatchNR.rst", "stubs/deepinv.models.SCUNet.rst", "stubs/deepinv.models.SwinIR.rst", "stubs/deepinv.models.TGVDenoiser.rst", "stubs/deepinv.models.TVDenoiser.rst", "stubs/deepinv.models.UNet.rst", "stubs/deepinv.models.WaveletDenoiser.rst", "stubs/deepinv.models.WaveletDictDenoiser.rst", "stubs/deepinv.models.epll.GaussianMixtureModel.rst", "stubs/deepinv.optim.BaseOptim.rst", "stubs/deepinv.optim.DataFidelity.rst", "stubs/deepinv.optim.FixedPoint.rst", "stubs/deepinv.optim.IndicatorL2.rst", "stubs/deepinv.optim.L1.rst", "stubs/deepinv.optim.L1Prior.rst", "stubs/deepinv.optim.L2.rst", "stubs/deepinv.optim.LogPoissonLikelihood.rst", "stubs/deepinv.optim.OptimIterator.rst", "stubs/deepinv.optim.PatchPrior.rst", "stubs/deepinv.optim.PnP.rst", "stubs/deepinv.optim.PoissonLikelihood.rst", "stubs/deepinv.optim.Prior.rst", "stubs/deepinv.optim.RED.rst", "stubs/deepinv.optim.ScorePrior.rst", "stubs/deepinv.optim.TVPrior.rst", "stubs/deepinv.optim.Tikhonov.rst", "stubs/deepinv.optim.WaveletPrior.rst", "stubs/deepinv.optim.optim_builder.rst", "stubs/deepinv.optim.optim_iterators.ADMMIteration.rst", "stubs/deepinv.optim.optim_iterators.CPIteration.rst", "stubs/deepinv.optim.optim_iterators.DRSIteration.rst", "stubs/deepinv.optim.optim_iterators.GDIteration.rst", "stubs/deepinv.optim.optim_iterators.HQSIteration.rst", "stubs/deepinv.optim.optim_iterators.PGDIteration.rst", "stubs/deepinv.optim.utils.conjugate_gradient.rst", "stubs/deepinv.optim.utils.gradient_descent.rst", "stubs/deepinv.physics.BlindBlur.rst", "stubs/deepinv.physics.Blur.rst", "stubs/deepinv.physics.BlurFFT.rst", "stubs/deepinv.physics.CompressedSensing.rst", "stubs/deepinv.physics.Decolorize.rst", "stubs/deepinv.physics.DecomposablePhysics.rst", "stubs/deepinv.physics.Denoising.rst", "stubs/deepinv.physics.Downsampling.rst", "stubs/deepinv.physics.GaussianNoise.rst", "stubs/deepinv.physics.Haze.rst", "stubs/deepinv.physics.Inpainting.rst", "stubs/deepinv.physics.LinearPhysics.rst", "stubs/deepinv.physics.LogPoissonNoise.rst", "stubs/deepinv.physics.MRI.rst", "stubs/deepinv.physics.Pansharpen.rst", "stubs/deepinv.physics.Physics.rst", "stubs/deepinv.physics.PoissonGaussianNoise.rst", "stubs/deepinv.physics.PoissonNoise.rst", "stubs/deepinv.physics.SinglePhotonLidar.rst", "stubs/deepinv.physics.SinglePixelCamera.rst", "stubs/deepinv.physics.Tomography.rst", "stubs/deepinv.physics.UniformGaussianNoise.rst", "stubs/deepinv.physics.UniformNoise.rst", "stubs/deepinv.physics.adjoint_function.rst", "stubs/deepinv.physics.blur.gaussian_blur.rst", "stubs/deepinv.physics.forward.adjoint_function.rst", "stubs/deepinv.sampling.DDRM.rst", "stubs/deepinv.sampling.DPS.rst", "stubs/deepinv.sampling.DiffPIR.rst", "stubs/deepinv.sampling.DiffusionSampler.rst", "stubs/deepinv.sampling.MonteCarlo.rst", "stubs/deepinv.sampling.SKRock.rst", "stubs/deepinv.sampling.ULA.rst", "stubs/deepinv.test.rst", "stubs/deepinv.train.rst", "stubs/deepinv.training_utils.train_normalizing_flow.rst", "stubs/deepinv.transform.Rotate.rst", "stubs/deepinv.transform.Scale.rst", "stubs/deepinv.transform.Shift.rst", "stubs/deepinv.unfolded.BaseDEQ.rst", "stubs/deepinv.unfolded.BaseUnfold.rst", "stubs/deepinv.unfolded.DEQ_builder.rst", "stubs/deepinv.unfolded.unfolded_builder.rst", "stubs/deepinv.utils.TensorList.rst", "stubs/deepinv.utils.cal_psnr.rst", "stubs/deepinv.utils.get_freer_gpu.rst", "stubs/deepinv.utils.load_url_image.rst", "stubs/deepinv.utils.ones_like.rst", "stubs/deepinv.utils.plot.rst", "stubs/deepinv.utils.plot_curves.rst", "stubs/deepinv.utils.plot_parameters.rst", "stubs/deepinv.utils.rand_like.rst", "stubs/deepinv.utils.randn_like.rst", "stubs/deepinv.utils.zeros_like.rst"], "titles": ["Image deblurring with custom deep explicit prior.", "Creating your own dataset", "Reconstructing an image using the deep image prior.", "Single photon lidar operator for depth ranging.", "Saving and loading models", "Stacking and concatenating forward operators.", "Creating a forward operator.", "A tour of forward sensing operators", "Training a reconstruction network.", "Computation times", "Examples", "3D wavelet denoising", "Image deblurring with Total-Variation (TV) prior", "Image inpainting with wavelet prior", "Computation times", "Expected Patch Log Likelihood (EPLL) for Denoising and Inpainting", "Patch priors for limited-angle computed tomography", "Computation times", "DPIR method for PnP image deblurring.", "PnP with custom optimization algorithm (Condat-Vu Primal-Dual)", "Regularization by Denoising (RED) for Super-Resolution.", "Vanilla PnP for computed tomography (CT).", "Computation times", "Building your custom sampling algorithm.", "Image reconstruction with a diffusion model", "Implementing DiffPIR", "Implementing DPS", "Uncertainty quantification with PnP-ULA.", "Computation times", "Self-supervised learning with Equivariant Imaging for MRI.", "Self-supervised learning from incomplete measurements of multiple operators.", "Self-supervised denoising with the Neighbor2Neighbor loss.", "Self-supervised denoising with the SURE loss.", "Computation times", "Computation times", "Deep Equilibrium (DEQ) algorithms for image deblurring", "Learned Iterative Soft-Thresholding Algorithm (LISTA) for compressed sensing", "Learned iterative custom prior", "Learned Primal-Dual algorithm for CT scan.", "Unfolded Chambolle-Pock for constrained image inpainting", "Vanilla Unfolded algorithm for super-resolution", "Computation times", "How to Contribute", "Datasets", "Loss", "Models", "Using multiple GPUs", "Math Notation", "Optim", "Physics", "PnP and RED algorithms", "Diffusion algorithms", "Unfolded algorithms", "Utils", "DeepInverse: a Pytorch library for imaging with deep learning", "Computation times", "HDF5Dataset", "PatchDataset", "generate_dataset", "CharbonnierLoss", "EILoss", "FNEJacobianSpectralNorm", "JacobianSpectralNorm", "LpNorm", "MCLoss", "MOILoss", "Neighbor2Neighbor", "R2RLoss", "SplittingLoss", "SupLoss", "SureGaussianLoss", "SurePGLoss", "SurePoissonLoss", "TVLoss", "ArtifactRemoval", "AutoEncoder", "BM3D", "ConvDecoder", "DRUNet", "DeepImagePrior", "DiffUNet", "DnCNN", "EPLL", "EquivariantDenoiser", "GSDRUNet", "MedianFilter", "PDNet_DualBlock", "PDNet_PrimalBlock", "PatchNR", "SCUNet", "SwinIR", "TGVDenoiser", "TVDenoiser", "UNet", "WaveletDenoiser", "WaveletDictDenoiser", "GaussianMixtureModel", "BaseOptim", "DataFidelity", "FixedPoint", "IndicatorL2", "L1", "L1Prior", "L2", "LogPoissonLikelihood", "OptimIterator", "PatchPrior", "PnP", "PoissonLikelihood", "Prior", "RED", "ScorePrior", "TVPrior", "Tikhonov", "WaveletPrior", "optim_builder", "ADMMIteration", "CPIteration", "DRSIteration", "GDIteration", "HQSIteration", "PGDIteration", "conjugate_gradient", "gradient_descent", "BlindBlur", "Blur", "BlurFFT", "CompressedSensing", "Decolorize", "DecomposablePhysics", "Denoising", "Downsampling", "GaussianNoise", "Haze", "Inpainting", "LinearPhysics", "LogPoissonNoise", "MRI", "Pansharpen", "Physics", "PoissonGaussianNoise", "PoissonNoise", "SinglePhotonLidar", "SinglePixelCamera", "Tomography", "UniformGaussianNoise", "UniformNoise", "adjoint_function", "gaussian_blur", "adjoint_function", "DDRM", "DPS", "DiffPIR", "DiffusionSampler", "MonteCarlo", "SKRock", "ULA", "test", "train", "train_normalizing_flow", "Rotate", "Scale", "Shift", "BaseDEQ", "BaseUnfold", "DEQ_builder", "unfolded_builder", "TensorList", "cal_psnr", "get_freer_gpu", "load_url_image", "ones_like", "plot", "plot_curves", "plot_parameters", "rand_like", "randn_like", "zeros_like"], "terms": {"go": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "end": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 48, 50, 52, 82, 97, 100, 116, 117, 118, 119, 120, 121, 135, 139, 151, 152, 163, 164], "download": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 45, 78, 80, 81, 82, 84, 89, 90, 150, 152], "full": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 54, 60, 65], "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 48, 49, 54, 55, 62, 99, 145, 146, 147, 149], "code": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 45, 46, 66, 80, 90, 91, 92], "In": [0, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 50, 52, 58, 80, 92, 101, 117, 135, 143], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 58, 59, 61, 62, 63, 64, 65, 67, 70, 71, 72, 75, 76, 77, 79, 80, 81, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 106, 108, 109, 111, 116, 120, 124, 125, 127, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 150, 151, 152, 154, 157, 158, 159, 163, 164, 174], "we": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 48, 50, 51, 53, 61, 79, 80, 94, 99, 100, 101, 105, 135, 136, 147, 149], "show": [0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 13, 18, 19, 21, 23, 24, 25, 27, 29, 30, 31, 32, 35, 36, 37, 40, 97, 99, 172, 173, 174], "how": [0, 1, 2, 3, 4, 5, 6, 8, 11, 12, 13, 15, 18, 19, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 40, 50, 97, 99], "us": [0, 1, 3, 4, 5, 7, 8, 9, 10, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 67, 68, 75, 76, 89, 90, 92, 96, 99, 101, 124, 155, 161], "an": [0, 1, 4, 6, 7, 8, 9, 10, 15, 16, 19, 20, 23, 24, 26, 27, 29, 30, 32, 36, 37, 39, 42, 45, 48, 49, 50, 52, 54, 55, 61, 70, 71, 72, 77, 78, 79, 80, 81, 83, 84, 88, 89, 91, 92, 94, 95, 96, 97, 103, 105, 108, 109, 114, 115, 117, 124, 127, 129, 132, 134, 135, 139, 143, 151, 152, 154, 155, 156, 157, 158, 161, 163, 164, 165, 166, 168, 169, 170, 172], "here": [0, 1, 2, 4, 5, 7, 10, 15, 16, 19, 23, 24, 25, 26, 27, 29, 30, 35, 36, 39, 40, 43, 95, 136], "simpl": [0, 1, 4, 6, 7, 8, 19, 23, 24, 27, 30, 31, 32, 38, 40, 49, 75, 137, 157], "l2": [0, 12, 13, 18, 19, 20, 21, 23, 25, 26, 27, 29, 35, 36, 37, 40, 97, 98, 99, 108, 109, 152, 165], "penal": [0, 48, 97], "squar": [0, 8, 25, 39, 64, 65, 66, 68, 69, 70, 71, 72, 122, 144], "norm": [0, 5, 6, 11, 12, 23, 26, 39, 61, 62, 73, 91, 92, 93, 94, 95, 97, 98, 101, 103, 112, 114, 127, 135, 158, 168], "admm": [0, 48, 54, 99, 115, 116, 165, 166], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 46, 49, 62, 98, 103, 130, 132, 135, 136, 140, 141, 145, 146, 147, 149, 150, 152, 172], "deepinv": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "dinv": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 46, 49, 97, 98, 99, 103, 150, 152], "from": [0, 1, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 45, 46, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 62, 64, 65, 66, 74, 76, 78, 79, 80, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 105, 127, 129, 130, 132, 134, 135, 136, 139, 140, 141, 143, 145, 146, 147, 149, 150, 151, 152, 156, 157, 158, 163, 169, 170, 172], "pathlib": [0, 1, 4, 8, 11, 12, 13, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "torch": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 45, 46, 49, 53, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 81, 82, 83, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 170, 171, 172, 174, 175, 176, 177], "util": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 96, 122, 123, 124, 127, 133, 135, 138, 139, 144, 150, 152, 157, 158, 159, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "dataload": [0, 8, 16, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 96, 157, 158, 159], "data_fidel": [0, 4, 12, 13, 16, 18, 19, 20, 21, 23, 25, 26, 27, 29, 35, 36, 37, 38, 39, 40, 97, 98, 99, 103, 105, 115, 116, 117, 118, 119, 151, 152, 154, 155, 156, 165, 166], "optim_build": [0, 12, 13, 18, 19, 20, 21, 48, 97], "training_util": [0, 8, 16, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 159], "test": [0, 6, 18, 20, 42, 56, 58, 67, 78, 79, 81, 84, 89, 95, 135, 172], "torchvis": [0, 1, 8, 12, 13, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 60], "transform": [0, 1, 7, 8, 11, 12, 13, 16, 18, 19, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 45, 57, 60, 76, 83, 90, 94, 95, 114, 127, 129, 137, 143, 144, 160, 161, 162], "demo": [0, 1, 4, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 39, 40, 45], "load_dataset": [0, 1, 8, 12, 13, 18, 20, 29, 35, 39, 40], "checkpoint": [0, 4, 15, 16, 20, 21, 26, 27, 29, 30, 31, 32, 90, 158], "base_dir": [0, 1, 4, 8, 11, 12, 13, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "original_data_dir": [0, 1, 4, 8, 11, 12, 13, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "data_dir": [0, 1, 4, 8, 11, 12, 13, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "measur": [0, 1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 18, 19, 20, 21, 25, 26, 29, 31, 32, 33, 35, 38, 39, 40, 44, 47, 49, 51, 53, 55, 56, 58, 60, 64, 65, 66, 67, 68, 70, 71, 72, 74, 79, 86, 93, 97, 98, 99, 100, 101, 103, 108, 124, 125, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 152, 154, 157, 158, 159, 169], "results_dir": [0, 4, 8, 11, 12, 13, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "deg_dir": [0, 4, 8, 11, 12, 13, 18, 20, 29, 30, 31, 32, 39], "global": [0, 1, 2, 7, 8, 11, 12, 13, 18, 19, 20, 21, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "random": [0, 1, 2, 5, 7, 8, 11, 12, 13, 18, 19, 20, 21, 26, 27, 29, 30, 31, 32, 35, 36, 37, 39, 40, 45, 49, 50, 53, 60, 65, 68, 71, 72, 78, 79, 80, 81, 83, 84, 88, 89, 90, 127, 128, 129, 130, 134, 135, 137, 138, 143, 144, 145, 150, 151, 152, 154, 160, 161, 162, 175], "seed": [0, 1, 2, 7, 8, 11, 12, 13, 18, 19, 20, 21, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 127, 128, 129, 130, 134, 137, 138, 143, 144, 150, 151, 152, 154], "pytorch": [0, 1, 2, 4, 7, 8, 11, 12, 13, 18, 19, 20, 21, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 46, 78, 80, 81, 84, 85, 89, 90], "ensur": [0, 1, 2, 7, 8, 11, 12, 13, 18, 19, 20, 21, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 96], "reproduc": [0, 1, 2, 7, 8, 11, 12, 13, 18, 19, 20, 21, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 127, 128, 129, 130, 134, 137, 138, 143, 144, 150, 152], "manual_se": [0, 1, 2, 7, 8, 11, 12, 13, 18, 19, 20, 21, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 127, 128, 129, 130, 134, 137, 138, 143, 144, 150, 152], "0": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 48, 51, 55, 58, 60, 61, 62, 63, 65, 66, 67, 68, 70, 71, 72, 73, 79, 80, 84, 85, 89, 90, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 163, 165, 166, 168, 172, 175], "devic": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 46, 58, 74, 78, 81, 82, 84, 88, 89, 94, 95, 96, 114, 125, 126, 127, 131, 134, 137, 138, 142, 143, 144, 147, 149, 150, 151, 152, 157, 158, 159, 164, 169, 170], "get_freer_gpu": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 150, 152], "cuda": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 46, 82, 125, 126, 150, 152], "is_avail": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 150, 152], "els": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 97, 100, 150, 152, 163], "cpu": [0, 1, 2, 3, 4, 5, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 58, 74, 78, 81, 82, 84, 88, 89, 94, 95, 96, 114, 125, 126, 127, 131, 134, 137, 138, 142, 143, 144, 147, 149, 150, 151, 152, 157, 158, 159, 164, 170], "cbsd68": [0, 7, 8, 39], "paper": [0, 2, 3, 16, 18, 24, 27, 78, 79, 81, 116, 136, 152, 161], "zhang": [0, 18, 81], "et": [0, 2, 12, 13, 18, 20, 25, 26, 45, 76, 79, 80, 81, 91, 93], "al": [0, 2, 12, 13, 18, 20, 25, 26, 45, 76, 79, 80, 81, 91, 93], "2017": [0, 18], "motion": [0, 12, 13, 18, 20], "kernel": [0, 3, 7, 12, 13, 18, 20, 23, 25, 51, 85, 111, 124, 154], "levin": [0, 12, 13, 18, 20], "2009": [0, 11, 12, 13, 18, 20, 92], "variabl": [0, 1, 4, 12, 13, 18, 19, 20, 21, 27, 32, 38, 39, 48, 50, 71, 72, 86, 87, 91, 92, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 117], "fetch": [0, 1, 12, 13, 18, 19, 21], "method": [0, 2, 6, 8, 10, 12, 13, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 35, 36, 37, 38, 39, 40, 45, 48, 49, 50, 51, 54, 55, 56, 58, 61, 62, 78, 79, 81, 82, 88, 91, 92, 96, 97, 98, 100, 103, 107, 109, 115, 116, 126, 127, 129, 132, 135, 139, 142, 144, 150, 153, 155, 157, 158, 159, 169], "l2_prior": 0, "dataset_nam": [0, 1, 12, 13, 18, 19, 20], "set3c": [0, 1, 8, 12, 13, 18, 19, 20, 35, 38, 39, 40], "img_siz": [0, 1, 2, 4, 5, 7, 8, 12, 13, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 35, 36, 37, 38, 39, 40, 90, 126, 131, 135, 138, 170], "256": [0, 1, 7, 8, 12, 13, 18, 20, 30, 45, 77, 78, 80, 84, 88, 89, 172], "dataset_path": [0, 20], "val_transform": [0, 1, 12, 13, 18, 20], "compos": [0, 1, 8, 12, 13, 18, 20, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 81, 95, 101, 135], "centercrop": [0, 1, 8, 12, 13, 18, 20, 35, 39, 40], "totensor": [0, 1, 8, 12, 13, 18, 20, 30, 31, 32, 35, 36, 37, 39, 40, 43], "blurfft": [0, 12, 18, 23, 25, 35], "modul": [0, 6, 11, 12, 13, 18, 21, 23, 24, 35, 36, 37, 38, 40, 45, 46, 49, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 105, 109, 127, 130, 132, 134, 135, 136, 138, 139, 140, 141, 143, 145, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 174], "The": [0, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 16, 18, 19, 20, 21, 23, 24, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 45, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 105, 108, 109, 119, 120, 121, 124, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 147, 149, 150, 151, 152, 154, 155, 156, 158, 163, 167, 172, 174], "class": [0, 1, 6, 7, 8, 11, 12, 13, 18, 19, 21, 24, 25, 26, 27, 35, 36, 37, 38, 39, 40, 45, 48, 49, 50, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167], "perform": [0, 2, 8, 11, 12, 13, 18, 21, 25, 26, 38, 39, 40, 45, 48, 50, 52, 59, 63, 67, 75, 77, 79, 80, 85, 86, 87, 89, 96, 97, 99, 105, 109, 115, 124, 125, 126, 152, 158, 161, 163, 164, 165, 166], "convolut": [0, 2, 3, 12, 27, 51, 77, 78, 79, 81, 84, 86, 87, 90, 93, 111, 124, 125, 126], "via": [0, 11, 15, 19, 23, 25, 26, 27, 31, 32, 43, 46, 49, 51, 52, 54, 58, 65, 78, 80, 81, 82, 88, 89, 93, 111, 126, 127, 129, 134, 135, 139, 143, 144], "fourier": [0, 7, 137], "choos": [0, 4, 7, 8, 16, 25, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 46, 52, 66, 80, 97, 99, 114], "gaussian": [0, 1, 2, 3, 5, 7, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 32, 35, 36, 37, 40, 45, 47, 50, 51, 67, 70, 71, 82, 96, 103, 111, 127, 130, 131, 132, 135, 138, 140, 142, 145, 148, 152, 156, 176], "standard": [0, 3, 5, 7, 11, 12, 13, 15, 16, 18, 19, 21, 24, 25, 26, 27, 39, 43, 45, 47, 48, 50, 67, 69, 70, 71, 80, 82, 97, 103, 122, 123, 130, 132, 133, 138, 140, 142, 145, 148, 155, 156, 165, 166, 176], "deviat": [0, 3, 7, 11, 12, 13, 15, 18, 19, 20, 21, 24, 25, 26, 45, 47, 48, 50, 67, 70, 71, 97, 103, 115, 130, 132, 138, 140, 142, 145, 148, 165, 166], "3": [0, 1, 3, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 62, 78, 80, 81, 82, 84, 86, 87, 89, 90, 91, 93, 94, 95, 98, 103, 114, 124, 126, 127, 128, 129, 130, 134, 135, 137, 138, 142, 143, 144, 147, 149, 150, 152, 172], "add": [0, 1, 11, 12, 13, 18, 20, 90, 132, 135, 136, 139, 140, 141, 145, 146, 159, 167], "nois": [0, 1, 3, 7, 11, 12, 13, 15, 18, 19, 20, 21, 25, 26, 31, 32, 40, 45, 47, 48, 50, 51, 60, 65, 67, 70, 71, 72, 76, 78, 79, 80, 81, 82, 83, 90, 93, 95, 103, 107, 111, 125, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 150, 151, 152, 154, 155, 156, 158, 159, 168], "03": [0, 6, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 29, 35, 36, 37, 39, 40, 41, 55], "filter": [0, 2, 5, 7, 12, 16, 18, 20, 23, 25, 35, 76, 85, 124, 125, 126, 131, 135, 138, 142, 144, 148], "filter_torch": 0, "gaussian_blur": [0, 7, 35, 125, 126], "sigma": [0, 2, 3, 4, 6, 7, 11, 12, 13, 15, 18, 19, 20, 21, 23, 24, 25, 26, 27, 35, 38, 39, 40, 43, 47, 48, 49, 50, 51, 67, 70, 71, 75, 76, 78, 80, 81, 82, 83, 85, 89, 90, 93, 103, 107, 110, 111, 117, 120, 130, 132, 140, 142, 145, 148, 150, 151, 152, 155, 156, 164], "noise_level_img": [0, 11, 12, 13, 18, 19, 20, 21, 35, 38, 40], "n_channel": [0, 1, 4, 8, 12, 13, 18, 19, 20, 21, 29, 35, 36, 37, 38, 39, 40], "color": [0, 1, 5, 6, 7, 8, 12, 13, 18, 19, 20, 21, 35, 38, 39, 40, 45, 82], "1": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 48, 49, 50, 51, 52, 60, 62, 65, 67, 68, 70, 71, 72, 73, 77, 78, 80, 82, 83, 84, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 162, 163, 164, 165, 166, 168, 172, 175], "grai": [0, 1, 7, 8, 12, 13, 18, 19, 20, 21, 35, 38, 39, 40, 82, 150, 152, 172], "scale": [0, 1, 8, 12, 13, 18, 19, 20, 21, 30, 31, 32, 35, 38, 39, 40, 67, 90, 93, 100], "instanc": [0, 19, 25, 37, 38, 46, 48, 50, 59, 63, 75, 77, 85, 86, 87, 89, 97, 99, 105, 109, 115, 116, 117, 118, 119, 165, 166], "enabl": [0, 26, 49, 163, 164], "comput": [0, 1, 2, 5, 6, 8, 10, 11, 12, 13, 15, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 48, 49, 50, 51, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 77, 81, 82, 85, 86, 87, 88, 89, 91, 92, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 125, 127, 129, 131, 132, 134, 135, 136, 138, 139, 143, 144, 147, 149, 151, 152, 153, 154, 155, 156, 157, 159, 163, 164, 167, 168, 169, 170, 172, 173], "effic": 0, "backward": [0, 16, 35, 52, 54, 100, 101, 144, 163], "p": [0, 3, 11, 13, 18, 20, 23, 26, 27, 47, 51, 63, 71, 72, 97, 111, 114, 136, 140, 141, 142, 151, 156], "noise_model": [0, 2, 6, 7, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 27, 35, 38, 40, 43, 49, 130, 132, 135, 136, 139, 140, 141, 145, 146, 150, 152], "gaussiannois": [0, 1, 2, 6, 7, 11, 12, 13, 15, 18, 19, 20, 21, 23, 24, 25, 27, 35, 38, 40, 43, 49, 130, 138, 150, 152], "parallel": [0, 1, 8, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 39, 40, 46, 76], "gpu": [0, 1, 8, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 39, 40, 58, 74, 78, 81, 84, 89, 94, 95, 96, 134, 137, 142, 144, 157, 158, 169, 170], "fasten": [0, 1, 8, 18, 19, 20, 21, 29, 31, 32, 35, 36, 37, 39, 40], "train": [0, 1, 4, 9, 10, 18, 19, 20, 21, 25, 26, 43, 44, 45, 46, 51, 52, 54, 55, 56, 58, 67, 69, 74, 77, 78, 80, 81, 84, 89, 93, 111, 129, 134, 135, 139, 154, 155, 156, 157, 159, 164, 169, 174], "otherwis": [0, 1, 8, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 39, 40, 60, 61, 62, 63, 65, 68, 80, 83, 97, 99, 124, 125, 127, 131, 135, 138, 143, 144], "all": [0, 1, 2, 8, 10, 11, 18, 19, 20, 21, 26, 29, 30, 31, 32, 35, 36, 37, 39, 40, 42, 43, 45, 46, 48, 49, 55, 57, 59, 63, 75, 77, 78, 79, 82, 83, 85, 86, 87, 89, 94, 97, 98, 105, 106, 115, 134, 158, 165, 166], "ar": [0, 1, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 64, 65, 67, 79, 81, 86, 87, 92, 93, 94, 95, 97, 99, 105, 108, 114, 116, 117, 118, 120, 124, 125, 127, 128, 129, 131, 133, 135, 138, 139, 144, 151, 154, 155, 156, 158, 160, 164, 168, 170, 172, 174], "synchron": [0, 1, 8, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 39, 40], "num_work": [0, 1, 8, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 58], "4": [0, 1, 3, 7, 8, 11, 13, 15, 16, 18, 19, 20, 21, 22, 24, 25, 26, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 58, 77, 78, 82, 83, 85, 89, 90, 93, 97, 98, 99, 103, 125, 126, 135, 137, 138, 144, 147, 149, 163, 172], "n_images_max": [0, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 39, 40], "maxim": [0, 8, 16, 18, 20, 35, 36, 37, 39, 40, 45, 96, 98, 108, 109, 112], "number": [0, 2, 4, 6, 8, 11, 12, 13, 16, 18, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 46, 54, 58, 71, 72, 75, 77, 78, 79, 81, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 106, 108, 109, 112, 115, 122, 123, 127, 135, 136, 139, 142, 143, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 172, 175, 176], "restor": [0, 15, 16, 18, 20, 29, 35, 36, 37, 40, 45, 54, 78, 82, 90, 150, 152], "input": [0, 2, 3, 7, 11, 12, 13, 18, 19, 20, 21, 25, 26, 38, 40, 45, 48, 50, 61, 62, 75, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 96, 99, 105, 111, 115, 116, 117, 118, 119, 122, 123, 124, 126, 127, 129, 131, 133, 134, 138, 141, 142, 144, 147, 149, 158, 160, 161, 162, 163, 165, 166], "measurement_dir": [0, 1, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 39, 40], "deepinv_dataset_path": 0, "generate_dataset": [0, 1, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43], "train_dataset": [0, 1, 8, 16, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 58], "test_dataset": [0, 1, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 58], "none": [0, 1, 16, 18, 19, 20, 29, 30, 31, 32, 35, 40, 46, 57, 58, 74, 75, 78, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 105, 109, 115, 131, 137, 138, 139, 145, 150, 151, 152, 154, 155, 156, 158, 161, 163, 165, 166, 170, 172, 173, 174], "save_dir": [0, 1, 8, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 58, 172, 173, 174], "train_datapoint": [0, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 39, 40, 58], "vector": [0, 1, 8, 18, 20, 23, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 62, 70, 71, 72, 77, 79, 91, 94, 97, 129, 156, 158], "2": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 46, 48, 51, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 83, 84, 85, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 103, 105, 111, 112, 113, 114, 117, 118, 121, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 140, 141, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 172], "00": [0, 1, 2, 4, 8, 9, 12, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55], "": [0, 1, 2, 4, 8, 10, 11, 12, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 51, 67, 78, 80, 81, 84, 89, 90, 91, 92, 111, 124, 127, 129, 131, 137, 154, 157, 158], "100": [0, 1, 2, 3, 4, 8, 12, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 96, 97, 100, 101, 115, 122, 123, 127, 135, 150, 152, 153], "49": [0, 8, 13, 16, 26, 29, 36, 40], "81it": [0, 16, 29, 36, 38], "ha": [0, 1, 2, 3, 5, 6, 8, 18, 20, 24, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 66, 78, 82, 94, 97, 98, 99, 108, 109, 122, 124, 125, 126, 127, 131, 134, 137, 138, 143, 144, 150, 151, 172], "been": [0, 1, 2, 8, 18, 20, 21, 29, 30, 31, 32, 35, 36, 37, 39, 40, 66, 99], "save": [0, 1, 8, 9, 10, 12, 13, 18, 20, 21, 29, 30, 31, 32, 35, 36, 37, 38, 40, 43, 53, 55, 58, 90, 94, 98, 100, 107, 109, 127, 129, 134, 135, 139, 143, 153, 157, 158, 164, 166, 169, 172, 173, 174], "function": [0, 1, 2, 3, 6, 7, 8, 12, 13, 16, 18, 19, 20, 25, 26, 30, 35, 36, 37, 38, 39, 40, 44, 47, 48, 49, 50, 52, 53, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 75, 77, 79, 80, 81, 82, 85, 86, 87, 88, 89, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 115, 116, 117, 118, 122, 123, 125, 127, 129, 135, 139, 142, 144, 147, 149, 153, 154, 155, 156, 157, 158, 159, 163, 165, 166], "instanti": [0, 12, 13, 18, 19, 20, 21, 97], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 161, 163, 164, 168, 170, 172], "proxim": [0, 6, 11, 12, 13, 19, 20, 21, 25, 38, 48, 49, 50, 52, 91, 92, 98, 99, 100, 101, 102, 103, 107, 108, 109, 112, 113, 114, 115, 121, 129, 131, 134, 135, 155, 165, 166], "gradient": [0, 12, 13, 19, 20, 21, 26, 27, 31, 45, 48, 50, 52, 60, 66, 84, 91, 92, 98, 99, 101, 103, 108, 109, 110, 113, 115, 119, 121, 122, 123, 127, 131, 135, 139, 144, 151, 158, 163, 165, 166], "descent": [0, 12, 13, 21, 37, 50, 98, 108, 109, 115, 119, 121, 123, 139, 165, 166], "follow": [0, 11, 12, 13, 16, 18, 19, 21, 23, 25, 26, 27, 36, 39, 42, 45, 47, 48, 50, 54, 70, 71, 72, 94, 97, 114, 128, 151, 152, 156, 164], "min_": [0, 2, 11, 79], "x": [0, 1, 2, 3, 5, 6, 7, 11, 12, 13, 16, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 35, 36, 37, 38, 39, 40, 44, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 65, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 171, 175, 176, 177], "frac": [0, 11, 12, 13, 23, 25, 26, 27, 32, 36, 37, 51, 52, 61, 62, 67, 68, 70, 71, 72, 83, 91, 92, 97, 100, 101, 103, 111, 113, 127, 129, 135, 136, 140, 141, 151, 152, 155, 156, 163, 168], "y": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 19, 21, 23, 24, 25, 26, 27, 30, 31, 32, 36, 37, 38, 39, 44, 47, 48, 49, 50, 51, 52, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 79, 80, 82, 86, 91, 92, 94, 95, 97, 98, 99, 100, 101, 103, 104, 105, 108, 116, 117, 118, 119, 124, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 154, 156, 157, 158, 163, 164], "ax": [0, 12, 13, 15, 16, 27, 36, 37, 39, 48, 51, 97, 98, 99, 101, 103, 117, 122, 127, 129, 135, 139, 144], "_2": [0, 11, 12, 13, 26, 30, 32, 36, 37, 39, 48, 61, 62, 67, 70, 71, 72, 73, 91, 92, 97, 99, 100, 101, 103, 113, 155, 156], "rho": [0, 25, 26], "where": [0, 2, 3, 7, 8, 11, 12, 13, 15, 16, 18, 19, 23, 25, 26, 27, 30, 31, 32, 36, 37, 38, 39, 43, 48, 49, 50, 51, 52, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 88, 91, 92, 94, 95, 97, 98, 99, 100, 102, 105, 108, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 149, 151, 152, 156, 158, 159, 163, 164, 168, 172, 174], "A": [0, 4, 6, 8, 9, 10, 11, 12, 13, 15, 16, 19, 20, 23, 25, 26, 30, 34, 35, 36, 37, 38, 39, 44, 47, 48, 49, 50, 51, 52, 54, 55, 62, 64, 67, 70, 71, 72, 74, 78, 80, 82, 91, 92, 94, 97, 98, 99, 100, 101, 103, 105, 117, 122, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 155, 156, 157, 158, 164, 169, 170, 172], "forward": [0, 1, 9, 10, 26, 29, 35, 36, 37, 38, 43, 44, 45, 46, 48, 49, 51, 52, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 105, 109, 111, 116, 117, 118, 119, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 169, 170, 172], "regular": [0, 2, 4, 10, 11, 12, 13, 16, 19, 21, 22, 25, 27, 29, 31, 35, 36, 37, 39, 40, 47, 48, 50, 52, 54, 55, 56, 58, 66, 68, 81, 82, 84, 91, 92, 96, 97, 98, 99, 102, 103, 105, 109, 110, 111, 112, 113, 114, 115, 131, 132, 135, 139, 155, 156, 157, 163, 164, 165, 166, 169], "paramet": [0, 2, 4, 8, 11, 12, 13, 15, 18, 19, 20, 23, 25, 26, 27, 39, 45, 50, 52, 56, 57, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174], "creat": [0, 5, 9, 10, 19, 49, 53, 55, 56, 58, 62, 82, 97, 98, 99, 103, 127, 129, 130, 132, 135, 137, 139, 150, 154, 169, 172], "which": [0, 1, 4, 5, 7, 11, 12, 13, 15, 16, 18, 20, 23, 24, 25, 26, 27, 29, 31, 32, 35, 36, 37, 39, 40, 44, 45, 46, 48, 49, 51, 52, 54, 58, 61, 64, 65, 66, 68, 69, 70, 71, 72, 78, 81, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 126, 127, 131, 134, 135, 139, 143, 144, 150, 151, 154, 157, 158, 164, 170], "inherit": [0, 6, 20, 23, 38, 46, 48, 49, 50, 137], "l2prior": 0, "def": [0, 4, 6, 16, 19, 20, 23, 25, 26, 37, 38, 39, 99, 154], "__init__": [0, 6, 19, 20, 23, 38, 154], "self": [0, 3, 6, 19, 20, 23, 33, 38, 54, 55, 56, 58, 60, 64, 65, 66, 68, 70, 71, 72, 74, 81, 93, 98, 100, 103, 107, 109, 127, 129, 130, 134, 135, 137, 139, 141, 143, 150, 154, 157, 158, 160, 161, 164, 166, 169], "arg": [0, 11, 16, 20, 37, 38, 39, 48, 50, 91, 92, 94, 95, 96, 97, 98, 99, 102, 106, 107, 109, 110, 111, 112, 113, 114, 135, 163, 164], "kwarg": [0, 6, 19, 20, 38, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 90, 96, 98, 99, 102, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 143, 144, 157, 163, 164, 165, 166], "super": [0, 6, 10, 19, 22, 23, 38, 41, 55, 56, 58, 69, 81, 84, 97, 98, 103, 107, 109, 110, 115, 131, 132, 135, 139, 154, 157, 158, 161, 164, 166, 169, 174], "explicit_prior": [0, 20, 109], "true": [0, 1, 2, 4, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 46, 56, 58, 60, 61, 62, 65, 68, 74, 75, 79, 80, 81, 83, 85, 86, 87, 88, 90, 93, 96, 97, 99, 105, 108, 109, 116, 117, 118, 127, 131, 134, 135, 141, 143, 144, 147, 149, 150, 151, 152, 153, 154, 157, 158, 159, 163, 168, 172, 173, 174], "g": [0, 1, 3, 10, 11, 12, 13, 16, 19, 20, 23, 26, 30, 36, 37, 43, 44, 45, 48, 49, 52, 58, 60, 64, 65, 66, 68, 69, 82, 83, 91, 92, 97, 99, 102, 105, 106, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 125, 126, 130, 134, 141, 144, 147, 149, 151, 153, 158, 164, 165, 166, 168], "5": [0, 2, 4, 5, 6, 7, 8, 11, 15, 16, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 67, 71, 72, 80, 86, 87, 88, 90, 91, 92, 93, 97, 98, 99, 103, 126, 127, 130, 135, 145, 147, 149, 150, 152, 156, 161, 163], "view": [0, 7, 26, 27, 161], "shape": [0, 2, 7, 11, 13, 15, 16, 24, 25, 26, 27, 37, 77, 78, 82, 86, 87, 90, 91, 92, 94, 96, 100, 112, 127, 138, 143, 167, 172], "dim": [0, 3, 6, 7, 24, 26, 27, 89, 90, 135, 147, 149], "return": [0, 1, 4, 6, 12, 13, 16, 19, 20, 21, 23, 24, 25, 26, 27, 30, 37, 38, 39, 45, 48, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 80, 82, 83, 91, 92, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 147, 149, 154, 157, 158, 159, 160, 161, 162, 163, 167, 169, 170, 171, 172, 175, 176, 177], "specifi": [0, 7, 12, 13, 18, 19, 20, 21, 39, 40, 81, 109], "select": [0, 4, 12, 13, 18, 19, 20, 21, 29, 35, 36, 37, 39, 40, 97, 106], "fidel": [0, 4, 12, 13, 18, 19, 20, 21, 29, 35, 36, 37, 39, 40, 47, 50, 52, 97, 98, 99, 101, 103, 104, 105, 108, 115, 117, 151, 152, 165, 166], "term": [0, 4, 12, 13, 18, 19, 20, 21, 25, 26, 29, 35, 36, 37, 39, 40, 47, 48, 50, 52, 91, 92, 97, 98, 99, 101, 102, 103, 105, 109, 110, 113, 115, 117, 152, 165, 166], "specif": [0, 6, 18, 20, 45, 97, 99], "given": [0, 11, 15, 16, 25, 51, 61, 62, 97, 99, 106, 111, 117, 118, 119, 120, 121, 134, 135, 142, 159], "note": [0, 23, 25, 26, 35, 37, 40, 46, 98, 100, 108, 117, 120, 157, 158], "have": [0, 2, 3, 10, 15, 21, 24, 25, 26, 30, 45, 49, 54, 62, 80, 98, 135, 137, 139, 142, 143, 147, 149, 150, 164, 168], "params_algo": [0, 4, 12, 13, 18, 19, 20, 21, 29, 35, 36, 37, 38, 39, 40, 48, 97, 115, 164, 165, 166, 174], "stepsiz": [0, 4, 12, 13, 18, 19, 20, 21, 29, 35, 36, 37, 39, 40, 48, 50, 97, 98, 99, 100, 101, 102, 103, 108, 109, 112, 113, 114, 115, 116, 118, 119, 121, 164, 165, 166], "lambda": [0, 4, 11, 12, 13, 16, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 39, 40, 47, 48, 50, 94, 95, 97, 98, 99, 103, 105, 109, 115, 116, 117, 118, 119, 120, 121, 129, 135, 139, 147, 149, 152, 153, 154, 155, 156, 164, 165, 166], "log": [0, 10, 12, 13, 16, 17, 21, 23, 26, 27, 35, 36, 37, 38, 40, 45, 51, 55, 82, 88, 96, 103, 104, 106, 108, 111, 127, 129, 130, 132, 134, 135, 136, 139, 143, 151, 154, 155, 156, 159, 168, 170, 172], "verbos": [0, 2, 8, 12, 13, 16, 18, 19, 20, 21, 23, 24, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 61, 62, 79, 91, 92, 96, 97, 135, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159], "plot_metr": [0, 12, 13, 18, 20, 21, 35, 38, 40, 157, 158], "converg": [0, 5, 6, 11, 12, 13, 18, 19, 20, 21, 24, 38, 40, 48, 50, 61, 62, 91, 92, 97, 98, 99, 100, 101, 105, 108, 109, 112, 120, 135, 153, 154, 155, 156], "metric": [0, 2, 8, 12, 13, 18, 19, 20, 21, 23, 24, 27, 35, 36, 37, 38, 39, 40, 60, 63, 64, 65, 66, 67, 68, 69, 97, 99, 157, 163, 173], "along": [0, 12, 13, 19, 21, 38, 40, 87, 97, 99, 157, 160, 162], "curv": [0, 8, 12, 13, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "early_stop": [0, 12, 13, 18, 19, 20, 21, 97, 99], "stop": [0, 2, 18, 19, 20, 79, 96, 97, 99, 122, 123], "when": [0, 7, 19, 20, 23, 26, 27, 31, 42, 46, 49, 50, 65, 66, 79, 80, 88, 92, 93, 96, 98, 99, 108, 109, 135, 141, 152], "criteria": [0, 18, 20, 154], "reach": [0, 19, 20, 97, 99], "crit_conv": [0, 20, 97, 100, 101, 154, 156], "cost": [0, 12, 13, 19, 20, 97, 99, 105, 115, 116, 117, 118, 119, 135, 165, 166], "differ": [0, 2, 15, 20, 26, 30, 31, 37, 44, 50, 53, 65, 66, 73, 79, 90, 91, 92, 112, 138, 150, 151, 167], "between": [0, 2, 5, 16, 18, 20, 21, 25, 26, 47, 48, 60, 61, 68, 75, 92, 93, 97, 98, 105, 108, 109, 135, 144, 152, 154, 156, 158, 172], "consecut": [0, 20, 98, 108, 109], "iter": [0, 1, 2, 4, 5, 6, 10, 12, 13, 18, 19, 20, 21, 24, 25, 26, 27, 29, 35, 39, 40, 41, 52, 55, 56, 58, 61, 62, 69, 79, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 108, 109, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 135, 139, 151, 152, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 169, 174], "smaller": [0, 12, 13, 20, 48, 68, 80, 96, 98, 108, 109, 124, 125, 131, 138, 155, 156], "than": [0, 1, 4, 7, 20, 25, 36, 39, 48, 53, 96, 98, 108, 109, 124, 125, 127, 131, 135, 138, 143, 144, 147, 149, 155, 156, 172], "thres_conv": [0, 20, 97, 153], "1e": [0, 2, 5, 6, 8, 11, 12, 16, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 59, 62, 91, 92, 96, 97, 99, 100, 101, 112, 122, 123, 163], "backtrack": [0, 20, 97], "fals": [0, 1, 4, 7, 8, 11, 15, 16, 18, 19, 20, 21, 25, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 48, 56, 58, 61, 62, 63, 68, 74, 78, 79, 80, 81, 83, 84, 88, 89, 90, 91, 92, 93, 96, 97, 99, 105, 106, 115, 116, 117, 118, 127, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 165, 166, 168, 170, 172], "backtrak": 0, "automat": [0, 20, 21, 26, 42, 45, 49, 98, 108, 109, 110, 135], "adjust": [0, 20, 129], "max_it": [0, 4, 11, 12, 13, 16, 18, 19, 20, 21, 23, 24, 27, 29, 35, 36, 37, 38, 39, 40, 61, 62, 95, 96, 97, 99, 100, 101, 115, 122, 123, 135, 139, 151, 152, 153, 154, 155, 156], "500": 0, "maximum": [0, 16, 24, 25, 51, 61, 62, 91, 92, 96, 97, 99, 100, 101, 111, 115, 122, 123, 124, 135, 139, 145, 153, 159, 162, 163, 168, 172], "ip": [0, 18, 19, 20, 21], "model": [0, 9, 10, 11, 25, 28, 29, 30, 31, 32, 35, 36, 37, 40, 46, 47, 48, 50, 51, 52, 53, 55, 60, 61, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 109, 111, 116, 117, 118, 125, 127, 129, 131, 132, 133, 134, 135, 136, 138, 139, 142, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 166, 168, 169, 170, 172, 174], "g_first": [0, 4, 20, 37, 39, 48, 105, 115, 116, 117, 118, 165, 166], "can": [0, 1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 18, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 58, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 78, 79, 80, 81, 83, 84, 88, 89, 90, 93, 94, 95, 97, 99, 103, 111, 114, 115, 125, 127, 129, 131, 134, 135, 138, 139, 143, 144, 147, 149, 150, 151, 154, 157, 158, 163, 164, 165, 166, 174], "batch_siz": [0, 1, 8, 15, 16, 18, 20, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 58, 78, 82, 86, 87], "wandb_vi": [0, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 157, 158], "plot": [0, 1, 5, 6, 7, 8, 11, 15, 18, 20, 25, 26, 29, 30, 31, 32, 35, 38, 39, 42, 97, 157, 158, 163, 173, 174], "weight": [0, 4, 8, 11, 15, 16, 18, 20, 21, 26, 29, 30, 31, 32, 35, 36, 38, 39, 40, 60, 65, 73, 78, 80, 81, 82, 84, 88, 89, 90, 96, 157, 158, 164], "bia": [0, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 81, 86, 87, 90, 93], "plot_imag": [0, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 157, 158], "hdf5dataset": [0, 1, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43], "shuffl": [0, 1, 8, 16, 18, 20, 29, 30, 31, 32, 35, 36, 37, 39, 40, 43, 78, 84], "test_dataload": [0, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 157], "save_fold": [0, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 157], "process": [0, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 44, 58, 76, 92, 100, 114, 127, 135, 139, 152], "out": [0, 8, 18, 20, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 54, 62, 127, 154, 155, 156], "33": [0, 2, 8, 16, 20, 24, 25, 26, 29, 36, 55], "16": [0, 5, 8, 15, 16, 18, 21, 25, 26, 27, 29, 35, 36, 37, 38, 39, 40, 82, 125, 126, 131, 135, 143], "64": [0, 2, 4, 5, 6, 7, 8, 12, 13, 16, 19, 20, 25, 26, 29, 30, 31, 32, 35, 36, 37, 40, 78, 81, 84, 89], "36": [0, 8, 16, 26, 28, 29, 35, 36, 37, 55], "current": [0, 13, 19, 20, 23, 24, 25, 26, 38, 86, 87, 96, 97, 99, 105, 116, 117, 118, 119], "crit": [0, 13, 20, 24, 91, 92], "32e": [0, 24], "06": [0, 13, 16, 20, 25, 26, 29, 30, 31, 35, 36, 37, 39], "object": [0, 2, 5, 7, 11, 12, 13, 20, 24, 27, 29, 35, 36, 37, 38, 39, 40, 48, 50, 57, 96, 105, 119, 135, 139, 163, 167, 172], "00e": [0, 13, 20, 24], "05": [0, 7, 8, 12, 13, 16, 20, 25, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 49, 91, 92, 96, 97, 100, 101, 115, 122, 123, 152, 155, 156], "67": [0, 16, 20, 24, 25, 26, 29, 35, 36, 40], "18": [0, 8, 16, 20, 24, 25, 26, 29, 35, 36, 37, 38, 39, 92], "07": [0, 14, 16, 22, 26, 29, 35, 36, 37, 41, 55], "7": [0, 5, 8, 12, 15, 16, 19, 20, 24, 25, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 77, 86, 125, 126, 131, 134, 152], "74": [0, 16, 26, 29, 30, 36, 40], "45": [0, 6, 7, 16, 26, 29, 31, 35, 36, 38, 40, 144], "14e": 0, "19": [0, 2, 8, 15, 16, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39], "6": [0, 1, 5, 8, 11, 12, 15, 16, 20, 24, 25, 26, 29, 30, 35, 36, 37, 38, 39, 40, 41, 57, 82, 87, 88, 90, 106], "65": [0, 16, 26, 29, 35, 36, 38, 39, 40], "psnr": [0, 2, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 97, 157, 163, 168], "No": [0, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 82], "learn": [0, 2, 8, 15, 16, 18, 20, 31, 32, 33, 35, 39, 40, 41, 42, 45, 50, 55, 56, 58, 60, 64, 65, 69, 74, 78, 79, 81, 82, 86, 87, 93, 94, 98, 103, 105, 107, 109, 117, 121, 127, 129, 132, 134, 135, 137, 139, 144, 157, 158, 159, 160, 161, 164, 166, 169, 174], "rec": [0, 5, 6, 8, 18, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "91": [0, 16, 26, 35, 36], "29": [0, 2, 7, 16, 20, 22, 23, 24, 25, 26, 27, 29, 35, 36, 37, 39], "db": [0, 2, 8, 11, 12, 13, 18, 19, 20, 21, 23, 24, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "75": [0, 7, 16, 25, 26, 29, 35, 36, 38, 40, 161], "26": [0, 8, 16, 20, 24, 25, 26, 29, 32, 36, 38, 39], "751082102457683": 0, "2591563634345042": 0, "909195582071941": 0, "2942944269415273": 0, "total": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 54, 55, 65, 73, 75, 91, 92, 94, 97, 98, 103, 109, 112, 115, 126, 129, 132, 135, 139, 162, 168, 169, 172, 173], "run": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 18, 19, 20, 21, 25, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 59, 63, 75, 76, 77, 78, 79, 81, 85, 86, 87, 89, 90, 93, 94, 95, 97, 115, 150, 151, 152, 153, 154, 156, 165, 166], "time": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 48, 50, 67, 80, 82, 97, 127, 129, 131, 134, 142, 153, 157, 158], "script": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "minut": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "20": [0, 4, 7, 8, 9, 12, 13, 15, 16, 24, 25, 26, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 55, 81, 168], "475": [0, 9, 55], "second": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 48, 50, 97, 105, 124, 134, 135, 137, 138, 142], "jupyt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "notebook": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "demo_custom_prior": [0, 9, 55], "ipynb": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 76], "sourc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 42, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "py": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 55], "galleri": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 55], "sphinx": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "deep": [1, 9, 10, 18, 41, 42, 55, 56, 58, 69, 74, 77, 78, 79, 81, 97, 98, 103, 107, 109, 115, 126, 129, 132, 134, 135, 139, 148, 157, 158, 163, 164, 165, 168, 169, 170, 172], "invers": [1, 2, 5, 6, 7, 8, 15, 16, 20, 23, 24, 27, 29, 30, 32, 42, 44, 47, 49, 50, 52, 53, 54, 60, 64, 65, 69, 70, 71, 72, 74, 88, 96, 124, 126, 133, 134, 137, 139, 144, 150, 157, 159], "problem": [1, 2, 6, 8, 15, 16, 24, 29, 30, 35, 36, 39, 42, 44, 48, 50, 52, 53, 54, 79, 91, 92, 94, 95, 97, 99, 105, 125, 127, 129, 130, 131, 133, 135, 138, 144, 150, 152], "natur": [1, 15, 16, 31, 53, 80, 82], "contain": [1, 3, 4, 19, 29, 35, 36, 37, 39, 40, 44, 45, 48, 49, 50, 51, 52, 56, 58, 65, 83, 94, 96, 97, 99, 105, 115, 116, 117, 118, 119, 124, 125, 126, 142, 154, 155, 156, 159, 160, 162, 165, 166, 170, 174], "set3": 1, "imagefold": 1, "you": [1, 6, 10, 11, 24, 25, 26, 27, 29, 30, 31, 32, 35, 40, 42, 49, 54], "ani": [1, 6, 42, 54, 60, 64, 65, 66, 68, 69, 83, 88, 117, 135, 137, 139, 157, 158, 163, 164], "other": [1, 5, 25, 43, 46, 48, 50, 60, 64, 65, 66, 68, 69, 76, 94, 135, 139, 157, 158, 167], "long": [1, 26, 158], "set": [1, 2, 4, 7, 11, 15, 20, 23, 24, 25, 27, 35, 36, 37, 38, 40, 44, 45, 46, 49, 51, 56, 58, 60, 61, 62, 64, 65, 66, 68, 69, 78, 79, 80, 81, 84, 88, 89, 90, 94, 96, 100, 103, 111, 116, 117, 118, 132, 134, 135, 136, 139, 140, 141, 145, 146, 154, 156, 157, 158], "up": [1, 4, 6, 16, 35, 36, 38, 40, 49, 80, 92], "oper": [1, 9, 10, 15, 25, 26, 31, 32, 33, 43, 44, 45, 47, 48, 50, 51, 54, 55, 56, 58, 60, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 82, 91, 92, 93, 97, 98, 99, 100, 101, 102, 103, 107, 108, 109, 112, 113, 114, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 167, 169, 170, 172], "32": [1, 2, 4, 6, 8, 15, 16, 18, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 75, 82, 86, 87, 127, 131, 135, 138, 143, 150, 152], "batch": [1, 12, 13, 16, 18, 20, 29, 30, 36, 37, 57, 58, 76, 78, 79, 80, 81, 82, 88, 93, 96, 97, 98, 100, 103, 142, 147, 149, 157, 172], "channel": [1, 2, 3, 5, 6, 7, 11, 12, 13, 15, 18, 20, 38, 45, 57, 77, 78, 80, 81, 82, 84, 86, 87, 88, 89, 90, 93, 127, 128, 134, 137, 142, 143, 172], "dimens": [1, 12, 13, 18, 20, 75, 80, 82, 87, 90, 94, 96, 98, 100, 101, 108, 112, 114, 129, 147, 149, 160, 162], "displai": [1, 125, 126, 131, 138], "unsqueez": [1, 6, 7, 11, 12, 13, 18, 20, 24, 27, 38, 98, 103, 129], "zip": [1, 8, 10, 12, 18, 26, 39, 40], "385k": [1, 12, 18, 40], "ib": [1, 8, 12, 18, 29, 39, 40], "84mib": 1, "denois": [1, 2, 4, 10, 14, 16, 17, 18, 19, 21, 22, 23, 27, 29, 33, 35, 36, 39, 40, 47, 48, 51, 52, 54, 55, 56, 58, 66, 67, 70, 71, 72, 74, 76, 78, 80, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 97, 98, 103, 107, 109, 110, 111, 112, 114, 115, 129, 131, 132, 134, 135, 136, 139, 140, 141, 145, 146, 150, 151, 152, 154, 155, 156, 157, 158, 164, 165, 166, 168, 169, 170, 172], "ignor": [1, 45, 59, 63, 75, 77, 85, 86, 87, 89], "attribut": [1, 25, 46, 116, 117, 118, 132, 136, 140, 141, 145, 146, 174], "e": [1, 3, 6, 10, 11, 19, 23, 24, 25, 29, 30, 31, 32, 43, 44, 45, 48, 49, 50, 51, 52, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 78, 81, 82, 83, 84, 91, 92, 94, 95, 97, 98, 99, 100, 101, 103, 108, 111, 114, 115, 125, 126, 127, 128, 130, 134, 135, 137, 141, 144, 147, 149, 150, 154, 155, 156, 158, 159, 163, 164, 165, 166, 168], "label": [1, 16, 32, 36, 48, 50, 80, 97], "physic": [1, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43, 47, 48, 50, 51, 58, 60, 64, 65, 66, 67, 68, 70, 71, 72, 74, 79, 82, 97, 98, 99, 100, 101, 103, 105, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 163], "dinv_dataset_path": [1, 18, 20], "134": [1, 16, 26, 39], "64it": [1, 8, 32, 36, 37, 38, 39], "over": [1, 26, 67, 83, 85, 91, 92, 99, 144], "pair": [1, 8, 30, 39, 43, 44, 56, 58, 67, 68, 157], "signal": [1, 6, 7, 44, 45, 47, 53, 56, 58, 60, 64, 65, 69, 74, 100, 111, 114, 124, 125, 127, 128, 129, 131, 135, 138, 139, 142, 144, 168], "adapt": [1, 53, 66, 70, 71, 72, 80, 90, 91, 92, 97], "build": [1, 10, 19, 27, 28, 45, 46, 52, 54, 55, 57, 85, 98, 103, 106, 109, 111, 115, 126, 129, 132, 135, 139, 154, 156, 165, 166, 168, 169, 170, 172], "custom": [1, 4, 9, 10, 21, 22, 28, 39, 41, 54, 55, 56, 58, 69, 81, 85, 97, 98, 103, 105, 107, 109, 111, 115, 121, 126, 127, 129, 131, 132, 135, 138, 139, 143, 148, 154, 156, 157, 158, 164, 165, 166, 168, 169, 170, 172, 173, 174], "case": [1, 3, 11, 12, 19, 26, 43, 45, 46, 50, 58, 80, 100, 101, 105, 127, 135, 139, 143, 144, 151], "doesn": [1, 111], "t": [1, 3, 16, 25, 26, 36, 37, 67, 80, 85, 91, 92, 99, 108, 111, 133, 135, 142, 147, 149, 151, 152, 157, 159, 163], "meet": [1, 27], "need": [1, 4, 11, 15, 23, 25, 39, 42, 46, 48, 59, 63, 75, 77, 85, 86, 87, 89, 94, 96, 117, 141, 158], "457": [1, 9, 55], "demo_dataset": [1, 9, 55], "noisi": [2, 11, 12, 13, 15, 16, 23, 24, 25, 26, 27, 45, 49, 66, 67, 70, 71, 72, 76, 78, 80, 81, 82, 90, 91, 92, 93, 94, 95, 132, 134, 136, 138, 139, 140, 141, 145, 146], "incomplet": [2, 10, 24, 27, 33, 55, 56, 58, 60, 64, 65, 74, 93, 127, 129, 134, 135, 139, 144, 157, 158, 169], "base": [2, 15, 23, 26, 43, 48, 50, 51, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 167], "ulyanov": [2, 79], "2018": [2, 38, 79], "minim": [2, 12, 13, 16, 30, 36, 39, 48, 50, 79, 91, 97, 105, 120, 123, 151], "loss": [2, 8, 10, 16, 27, 29, 30, 33, 35, 36, 37, 38, 39, 40, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 93, 98, 103, 129, 130, 135, 139, 141, 157, 158, 159, 169], "theta": [2, 8, 16, 30, 39, 50, 79, 151, 152, 159], "af_": [2, 79], "z": [2, 19, 38, 48, 50, 51, 67, 70, 71, 72, 79, 99, 101, 104, 105, 108, 111, 116, 118, 129, 131, 132, 135, 139, 140, 145, 156], "f_": [2, 8, 79], "decod": [2, 77, 78, 79], "network": [2, 9, 10, 16, 25, 26, 27, 47, 50, 52, 55, 56, 58, 61, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 84, 88, 89, 90, 93, 125, 127, 129, 131, 134, 135, 138, 139, 144, 151, 152, 157, 158, 159, 169], "should": [2, 3, 19, 29, 35, 48, 58, 59, 63, 67, 68, 70, 71, 72, 75, 77, 79, 85, 86, 87, 89, 90, 94, 109, 115, 117, 121, 125, 127, 129, 131, 133, 135, 136, 137, 138, 143, 144, 147, 149, 150, 152, 154, 156, 157, 164, 165, 166, 172], "earli": [2, 20, 79], "avoid": [2, 23, 79, 106, 154, 159], "overfit": [2, 79, 159], "adam": [2, 8, 16, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 79, 159], "optim": [2, 4, 8, 14, 15, 16, 18, 20, 21, 22, 23, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 50, 51, 52, 55, 79, 81, 91, 92, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 127, 129, 132, 135, 139, 143, 144, 151, 152, 154, 155, 156, 158, 159, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174], "load_url_imag": [2, 7, 15, 19, 21, 23, 24, 25, 26, 27], "lionel": [2, 23, 24, 27], "messi": [2, 23, 24, 27], "wikipedia": [2, 23, 24, 27, 122], "url": [2, 4, 7, 15, 16, 19, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 90, 170], "http": [2, 4, 10, 11, 15, 16, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 36, 38, 54, 60, 61, 62, 63, 65, 66, 67, 68, 70, 71, 72, 74, 80, 81, 83, 86, 87, 90, 91, 92, 117, 122, 127, 131, 133, 142, 150, 151, 152, 155, 156, 157, 158], "upload": [2, 23, 24, 27], "wikimedia": [2, 23, 24, 27], "org": [2, 23, 24, 27, 60, 61, 62, 63, 65, 67, 70, 71, 72, 74, 81, 83, 86, 87, 122, 127, 131, 133, 142, 150, 151, 152, 155, 156], "common": [2, 23, 24, 27, 35, 40, 48, 114, 159], "b": [2, 3, 4, 15, 16, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 37, 39, 70, 71, 72, 85, 90, 98, 100, 103, 122, 137, 142, 147, 149, 154, 155, 156, 168, 172], "b4": [2, 23, 24, 27], "argentina": [2, 23, 24, 27], "2022": [2, 23, 24, 27], "fifa": [2, 23, 24, 27], "world": [2, 23, 24, 27], "cup_": [2, 23, 24, 27], "28crop": [2, 23, 24, 27], "jpg": [2, 23, 24, 27], "_c": [2, 7, 27], "0x7f179698abb0": [2, 7, 27], "inpaint": [2, 4, 8, 10, 14, 17, 24, 26, 27, 30, 41, 54, 55, 56, 58, 69, 82, 94, 97, 98, 100, 103, 107, 109, 114, 115, 129, 130, 132, 135, 139, 150, 152, 157, 158, 164, 166, 168, 169, 170, 172, 173], "level": [2, 3, 4, 7, 11, 13, 15, 19, 21, 23, 24, 25, 26, 27, 36, 39, 40, 45, 48, 51, 76, 78, 80, 81, 82, 83, 90, 93, 94, 95, 103, 107, 108, 111, 114, 136, 142, 150, 151, 152, 155, 156], "mask": [2, 4, 6, 7, 8, 13, 15, 23, 24, 26, 27, 29, 30, 31, 39, 66, 68, 129, 134, 137, 143, 150, 152], "tensor_s": [2, 7, 13, 24, 26, 27, 30, 129, 134, 150, 152], "appli": [2, 11, 12, 13, 16, 19, 23, 24, 25, 26, 27, 40, 48, 76, 80, 83, 91, 92, 93, 94, 97, 111, 112, 114, 125, 126, 129, 131, 134, 135, 137, 138, 142, 143, 160, 161, 162], "onli": [2, 6, 8, 12, 13, 16, 18, 19, 20, 23, 25, 26, 29, 30, 31, 32, 35, 38, 39, 48, 58, 78, 79, 80, 81, 84, 89, 90, 94, 95, 98, 109, 114, 134, 135, 148, 151, 154, 157, 158, 163, 172], "work": [2, 3, 4, 7, 8, 20, 24, 25, 26, 36, 39, 79], "certain": [2, 43, 79], "recommend": [2, 4, 5, 6, 7, 8, 25, 31, 32, 36, 39, 46, 48, 54, 79, 92, 114, 127, 135, 143], "convdecod": [2, 79], "rate": [2, 79, 89, 90, 158, 159], "manual": [2, 21], "obtain": [2, 5, 7, 23, 27, 51, 52, 67, 83, 150, 151, 152, 154, 155, 161], "good": [2, 8, 39, 144], "howev": [2, 11, 29, 46, 60, 64, 65, 66, 68, 69, 79, 138], "valu": [2, 5, 6, 7, 15, 23, 24, 25, 29, 32, 35, 36, 37, 48, 49, 51, 53, 70, 71, 72, 79, 80, 82, 85, 88, 90, 91, 96, 97, 99, 111, 112, 114, 115, 126, 129, 136, 137, 141, 143, 144, 150, 152, 155, 156, 158, 165, 166, 168, 172], "mai": [2, 3, 48, 50, 79, 93, 97, 105, 141], "experi": [2, 79], "small": [2, 11, 16, 32, 35, 40, 48, 71, 72, 82, 91, 114, 144], "reduc": [2, 25, 26, 29, 30, 31, 32, 82], "runtim": 2, "could": 2, "improv": [2, 74], "more": [2, 4, 11, 16, 23, 39, 45, 48, 49, 50, 52, 78, 80, 81, 82, 83, 84, 89, 90, 95, 97, 102, 115, 122, 127, 135, 136, 139, 144, 155, 156, 157, 158, 161, 163, 165, 166], "lr": [2, 8, 16, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "per": [2, 3, 24, 27, 29, 30, 45, 50, 51, 78, 80, 81, 82, 89, 94, 135, 142, 143, 160, 162], "layer": [2, 29, 38, 40, 45, 52, 75, 77, 78, 80, 81, 86, 87, 89, 90, 93], "in_siz": [2, 77], "size": [2, 3, 7, 8, 11, 16, 18, 20, 23, 25, 26, 27, 29, 35, 36, 37, 38, 39, 40, 47, 48, 49, 52, 53, 57, 58, 68, 70, 71, 72, 77, 79, 80, 82, 85, 88, 90, 96, 97, 98, 99, 100, 101, 103, 106, 114, 117, 120, 123, 124, 125, 126, 127, 129, 131, 134, 135, 136, 137, 138, 139, 142, 143, 144, 147, 149, 155, 156, 163, 167, 168, 170, 172], "backbon": [2, 8, 36, 46, 52], "img_shap": [2, 7, 19, 36, 37, 43, 49, 77, 127, 143], "f": [2, 3, 5, 6, 12, 13, 19, 21, 23, 24, 25, 27, 43, 48, 50, 52, 61, 62, 71, 85, 91, 97, 98, 99, 101, 103, 105, 109, 115, 116, 117, 118, 119, 120, 121, 123, 129, 135, 137, 152, 154, 165, 166], "deepimageprior": [2, 77], "learning_r": [2, 8, 16, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 79, 159], "input_s": [2, 79, 147, 149], "somewhat": 2, "surpris": 2, "sinc": [2, 23, 26, 27, 46, 59, 63, 75, 77, 85, 86, 87, 89, 94, 99, 100, 101, 127, 143], "mani": [2, 52, 54, 131], "potenti": [2, 20, 37], "data": [2, 16, 43, 44, 46, 47, 50, 52, 57, 58, 60, 64, 65, 66, 68, 69, 70, 71, 72, 89, 96, 97, 98, 99, 100, 101, 103, 104, 105, 108, 114, 115, 116, 117, 118, 119, 151, 152, 157, 158, 159, 165, 166], "architectur": [2, 4, 8, 25, 29, 31, 32, 35, 39, 40, 46, 52, 54, 74, 75, 77, 78, 81, 84, 89, 90, 93], "act": [2, 32, 48, 49, 82, 97, 136], "implicit": [2, 48, 50, 52, 109, 163], "provid": [2, 6, 7, 12, 13, 19, 20, 21, 23, 45, 48, 51, 52, 53, 58, 88, 94, 138, 144, 147, 149, 157], "while": [2, 6, 29, 48, 50, 59, 63, 75, 77, 85, 86, 87, 89, 96, 97], "phenomenon": 2, "yet": 2, "well": [2, 5, 6, 12, 13, 26, 54, 60, 64, 65, 66, 68, 69, 77, 99, 105, 125, 127, 129, 131, 135, 138, 144, 157, 164], "understood": 2, "some": [2, 6, 7, 12, 13, 23, 26, 45, 46, 48, 49, 53, 106, 125, 127, 129, 131, 135, 138, 139, 144], "effort": 2, "explain": [2, 54], "For": [2, 4, 8, 11, 12, 13, 16, 19, 21, 25, 26, 29, 35, 36, 37, 39, 40, 43, 46, 48, 50, 91, 92, 97, 109, 114, 122, 136, 142, 155, 156, 163], "see": [2, 3, 23, 26, 27, 32, 36, 37, 39, 47, 48, 49, 52, 65, 66, 68, 71, 72, 77, 78, 80, 81, 82, 84, 89, 90, 91, 92, 95, 97, 99, 115, 116, 122, 127, 135, 139, 142, 143, 144, 157, 158, 161, 163, 164, 165, 166], "neural": [2, 8, 16, 26, 27, 38, 50, 61, 77, 88, 93], "tangent": 2, "link": [2, 10, 25, 47, 80, 154, 155, 156], "cnn": [2, 18, 78], "non": [2, 27, 96, 125, 127, 129, 131, 133, 135, 138, 139, 144, 164], "local": [2, 31, 42], "linear": [2, 5, 7, 8, 12, 13, 16, 19, 21, 23, 24, 25, 26, 27, 36, 37, 39, 48, 73, 74, 82, 91, 92, 98, 99, 112, 122, 125, 127, 129, 130, 131, 133, 134, 135, 137, 138, 139, 143, 144, 147, 149, 157], "x_lin": [2, 12, 13, 19, 21, 23, 24, 27], "a_adjoint": [2, 4, 6, 7, 12, 13, 19, 21, 23, 24, 27, 38, 39, 49, 82, 97, 98, 99, 103, 125, 127, 129, 131, 135, 138, 144, 147, 149], "print": [2, 4, 5, 6, 8, 12, 13, 15, 16, 19, 21, 23, 24, 27, 29, 30, 31, 32, 39, 61, 62, 79, 91, 92, 97, 98, 103, 135, 150, 151, 152, 153, 154, 155, 156, 159], "cal_psnr": [2, 11, 12, 13, 15, 16, 19, 21, 23, 24, 27, 135, 150, 152], "2f": [2, 5, 6, 11, 12, 13, 15, 16, 19, 21, 23, 24, 27, 61], "titl": [2, 3, 5, 6, 7, 12, 13, 19, 21, 23, 24, 25, 26, 27, 172], "ground": [2, 8, 12, 13, 15, 16, 19, 21, 23, 24, 25, 26, 27, 36, 37, 39, 69, 97, 99, 157, 158, 163], "truth": [2, 8, 12, 13, 15, 16, 19, 21, 23, 24, 25, 26, 27, 36, 37, 39, 69, 97, 99, 157, 163], "11": [2, 5, 8, 16, 20, 25, 26, 29, 35, 36, 37, 38, 39, 92], "103": [2, 16, 26, 36], "16it": [2, 16, 26, 29, 30, 36, 37, 40], "22": [2, 8, 16, 19, 20, 23, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39], "106": [2, 16, 26, 36], "52it": [2, 23, 36, 38, 39], "20it": [2, 8, 16, 26, 30, 36, 37, 40], "44": [2, 8, 16, 20, 26, 27, 29, 35, 36, 37, 39], "92it": [2, 16, 36], "55": [2, 16, 26, 29, 30, 35, 36, 38, 40], "107": [2, 16, 26, 35], "68it": [2, 8, 16, 31, 36, 38, 39], "66": [2, 8, 16, 26, 29, 30, 36, 39, 40], "108": [2, 11, 16, 26, 36], "25it": [2, 16, 29, 36, 38], "77": [2, 3, 16, 20, 25, 26, 29, 35, 36], "63it": [2, 24, 36, 37, 38, 39], "88": [2, 8, 16, 26, 29, 30, 36, 37, 39], "18it": [2, 16, 26, 29, 36, 37], "99": [2, 16, 26, 29, 30, 35, 36, 38], "57it": [2, 8, 16, 30, 36, 38, 39], "74it": [2, 16, 25, 36, 37, 38], "8": [2, 8, 12, 13, 15, 16, 18, 20, 24, 25, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 45, 82, 83, 90, 92, 112, 125, 126, 135], "58": [2, 16, 26, 29, 35, 36, 40], "61": [2, 15, 16, 20, 26, 29, 36, 40], "181": [2, 9, 16, 26, 36, 55], "demo_dip": [2, 9, 55], "singlephotonlidar": 3, "matplotlib": [3, 11, 25, 36], "pyplot": [3, 11, 25, 36], "plt": [3, 11, 25, 36], "config": [3, 25, 89], "get": [3, 25, 26, 29, 30, 31, 32, 42, 80, 96, 97, 151, 152], "nice": [3, 25], "config_matplotlib": [3, 25], "bin": [3, 142], "pixel": [3, 4, 8, 13, 19, 24, 26, 27, 32, 36, 37, 39, 49, 75, 78, 84, 125, 126, 131, 134, 135, 138, 139, 142, 143, 144, 147, 149, 168], "impuls": [3, 142], "respons": [3, 142], "defin": [3, 5, 6, 11, 15, 16, 25, 29, 30, 31, 32, 43, 48, 49, 50, 52, 59, 60, 63, 64, 65, 67, 69, 75, 77, 82, 85, 86, 87, 88, 89, 94, 95, 97, 98, 99, 100, 101, 103, 105, 111, 116, 117, 118, 119, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 143, 144, 150, 151, 152, 154], "y_": [3, 142], "j": [3, 26, 91, 92, 97, 127, 142], "mathcal": [3, 15, 16, 25, 26, 27, 30, 39, 44, 51, 67, 70, 71, 72, 83, 100, 111, 127, 132, 136, 140, 141, 142, 145, 146, 151, 152, 156, 159], "h": [3, 11, 16, 37, 79, 90, 99, 106, 125, 126, 127, 131, 134, 137, 142, 143, 147, 149, 168, 172], "d_": [3, 39, 142, 151, 152], "r_": [3, 23, 30, 142], "b_": [3, 142], "poisson": [3, 7, 16, 31, 32, 51, 71, 72, 104, 108, 136, 140, 141, 142], "scene": [3, 133, 142], "intens": [3, 133, 142], "background": [3, 108, 142], "irf_sigma": 3, "peak": [3, 142, 168], "locat": 3, "around": [3, 53], "50th": 3, "ratio": [3, 7, 68, 90, 153, 168], "10": [3, 6, 8, 11, 15, 16, 23, 24, 25, 26, 27, 29, 30, 32, 35, 36, 37, 38, 39, 40, 55, 61, 62, 81, 95, 125, 126, 127, 131, 144, 150, 154, 155, 159, 168], "w": [3, 11, 18, 26, 37, 38, 79, 90, 108, 124, 125, 126, 127, 134, 135, 137, 142, 143, 147, 149, 157, 168, 172], "first": [3, 5, 7, 11, 12, 13, 18, 20, 25, 26, 37, 38, 48, 50, 73, 96, 97, 98, 105, 124, 137, 138, 142, 143, 147, 149, 157, 160, 162, 172], "third": [3, 142], "associ": [3, 7, 25, 43, 45, 58, 60, 64, 65, 66, 67, 68, 70, 71, 72, 91, 92, 97, 99, 103, 112, 154], "sbr": 3, "50": [3, 4, 8, 15, 16, 20, 24, 25, 26, 28, 29, 30, 31, 35, 36, 38, 39, 45, 62, 90, 98, 99, 109, 135, 139, 142, 163], "bkg_level": 3, "d": [3, 11, 23, 27, 39, 48, 51, 61, 63, 73, 80, 82, 83, 91, 92, 98, 100, 101, 103, 104, 107, 108, 110, 111, 112, 127, 133, 142], "ones": [3, 4, 6, 7, 23, 25, 26, 36, 39, 50, 53, 125, 126, 135, 137, 144, 150, 152, 171], "r": [3, 6, 19, 20, 23, 25, 26, 31, 32, 38, 39, 48, 50, 61, 62, 66, 67, 68, 70, 71, 72, 78, 84, 85, 91, 97, 100, 108, 127, 129, 134, 142, 157], "ones_lik": [3, 13], "cat": [3, 6, 7, 26, 93], "shown": [3, 38, 50], "blue": 3, "red": [3, 10, 22, 55, 56, 58, 84, 97, 98, 103, 109, 111, 115, 131, 132, 135, 139, 157, 169], "xhat": [3, 11, 24, 25, 26, 97, 150, 152], "a_dagg": [3, 5, 6, 7, 16, 38, 49, 124, 127, 129, 133, 135, 139, 142, 144], "figur": [3, 25, 172], "subplot": [3, 25], "detach": [3, 4, 7, 16, 25, 26, 36, 39], "numpi": [3, 11, 23, 24, 25, 26, 150], "stem": 3, "linefmt": 3, "markerfmt": 3, "tight_layout": [3, 25], "home": [3, 4, 7, 15, 16, 20, 21, 25, 26, 27, 29, 30, 31, 32, 36, 39], "runner": [3, 4, 7, 15, 16, 20, 21, 25, 26, 27, 29, 30, 31, 32, 36, 39], "userwarn": [3, 4, 7, 25, 36, 39], "pad": [3, 8, 29, 30, 31, 32, 35, 38, 40, 85, 93, 94, 106, 124, 125, 126, 131, 138, 160, 161, 162], "same": [3, 4, 23, 29, 30, 31, 32, 39, 45, 48, 85, 91, 92, 94, 97, 98, 100, 101, 104, 108, 112, 115, 124, 125, 127, 131, 138, 159, 165, 166, 168, 171, 172, 175, 176, 177], "even": [3, 26], "length": [3, 4, 29, 36, 37, 38, 39, 40, 97, 172], "odd": 3, "dilat": [3, 8, 30, 31, 32, 161], "requir": [3, 6, 19, 23, 24, 29, 39, 46, 48, 50, 51, 82, 97, 111, 117, 150, 152, 154, 155, 156], "zero": [3, 5, 6, 7, 23, 25, 26, 37, 53, 94, 96, 125, 126, 131, 134, 135, 160, 177], "copi": [3, 4, 7, 11, 25, 35, 36, 37, 39, 40], "trigger": 3, "intern": [3, 20, 96, 98, 108, 109], "aten": 3, "src": 3, "nativ": 3, "cpp": 3, "1040": 3, "nn": [3, 4, 7, 11, 23, 36, 37, 39, 45, 46, 49, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 79, 88, 90, 93, 125, 127, 130, 134, 138, 141, 143, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 174], "conv1d": 3, "irf": 3, "267": [3, 9, 55], "demo_lidar": [3, 9, 55], "wai": [4, 29, 30, 31, 32, 42, 54], "purpos": 4, "unfold": [4, 29, 30, 35, 38, 41, 54, 55, 56, 58, 69, 81, 86, 87, 94, 98, 100, 103, 107, 109, 129, 131, 132, 134, 135, 139, 157, 158, 163, 164, 165, 166, 169, 174], "chambol": [4, 10, 38, 41, 55, 56, 58, 69, 91, 92, 94, 98, 100, 107, 109, 115, 117, 129, 134, 135, 139, 157, 158, 164, 165, 166, 169], "pock": [4, 10, 38, 41, 55, 56, 58, 69, 91, 92, 94, 98, 100, 107, 109, 115, 117, 129, 134, 135, 139, 157, 158, 164, 165, 166, 169], "algorithm": [4, 6, 10, 22, 28, 29, 39, 41, 45, 48, 54, 55, 56, 58, 69, 81, 85, 86, 87, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 109, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 131, 132, 135, 139, 143, 144, 148, 151, 152, 153, 154, 155, 156, 157, 158, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174], "its": [4, 6, 12, 13, 19, 25, 36, 37, 38, 39, 44, 49, 88, 91, 92, 96, 97, 98, 103, 129], "describ": [4, 18, 27, 30, 88, 124, 134, 135, 136, 139, 150, 151, 152], "constrain": [4, 10, 41, 55, 56, 58, 69, 92, 94, 98, 100, 107, 109, 129, 134, 135, 139, 157, 158, 164, 166, 169], "importlib": 4, "indicatorl2": [4, 39], "prior": [4, 9, 11, 14, 15, 17, 18, 19, 21, 29, 35, 36, 39, 40, 41, 47, 51, 52, 54, 55, 56, 57, 58, 69, 77, 78, 79, 82, 88, 92, 97, 98, 99, 102, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 126, 127, 129, 132, 134, 135, 136, 139, 144, 148, 154, 155, 156, 157, 158, 159, 164, 165, 166, 168, 169, 170, 172, 173, 174], "pnp": [4, 10, 22, 28, 29, 35, 36, 39, 45, 48, 54, 55, 56, 58, 61, 78, 81, 97, 98, 103, 105, 109, 111, 115, 126, 129, 132, 134, 135, 139, 143, 144, 152, 154, 156, 157, 158, 168, 169, 170, 172, 173], "unfolded_build": [4, 29, 36, 37, 38, 39, 40, 52], "get_weights_url": [4, 29, 30, 31, 32], "dataset": [4, 7, 9, 10, 11, 15, 16, 21, 26, 44, 45, 54, 55, 56, 57, 58, 82, 129, 130, 132, 135, 136, 139, 157, 158, 169, 172], "degrad": [4, 11, 21, 31, 32, 45], "ckpt_dir": [4, 8, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "ckpt": [4, 8, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "miss": [4, 13], "rather": [4, 7, 25, 36, 39, 51, 53, 111], "complex": [4, 7, 11, 114, 127, 137, 143, 172], "consist": [4, 7, 19, 25, 26, 29, 30, 39, 45, 47, 52, 64, 65, 66, 68, 69, 97, 138], "radiu": [4, 39, 100, 101], "trainabl": [4, 8, 29, 30, 31, 32, 35, 36, 37, 39, 40, 52, 66, 67, 68, 70, 71, 72, 93, 164], "soft": [4, 10, 11, 37, 39, 41, 55, 56, 58, 69, 94, 95, 98, 101, 103, 107, 109, 121, 127, 135, 139, 157, 158, 164, 166, 169, 174], "threshold": [4, 10, 11, 37, 39, 41, 55, 56, 58, 69, 94, 95, 97, 98, 101, 102, 103, 107, 109, 112, 114, 121, 127, 135, 139, 153, 154, 156, 157, 158, 164, 166, 169, 174], "wavelet": [4, 10, 14, 36, 39, 55, 94, 95, 97, 98, 103, 109, 114, 115, 129, 132, 134, 135, 139, 168, 169, 172, 173], "basi": [4, 11, 36, 39], "If": [4, 5, 6, 16, 29, 30, 36, 37, 39, 42, 51, 54, 58, 63, 68, 70, 71, 72, 74, 78, 79, 80, 81, 83, 84, 88, 89, 90, 94, 97, 100, 105, 111, 115, 116, 117, 118, 124, 125, 127, 129, 131, 134, 135, 138, 139, 141, 143, 144, 145, 148, 154, 155, 156, 158, 163, 165, 166, 168, 170, 172], "initi": [4, 11, 16, 20, 25, 26, 29, 35, 36, 37, 39, 40, 78, 79, 80, 81, 82, 84, 88, 89, 90, 96, 97, 99, 139, 151, 152, 174], "list": [4, 5, 7, 25, 26, 29, 30, 35, 36, 37, 38, 39, 40, 46, 48, 53, 54, 58, 65, 78, 79, 82, 84, 89, 94, 95, 97, 115, 124, 125, 127, 129, 131, 133, 138, 139, 144, 150, 157, 158, 161, 164, 165, 166, 167, 172], "distinct": [4, 29, 36, 37, 38, 39, 40, 48, 97, 115, 165, 166], "each": [4, 15, 23, 25, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 48, 66, 71, 72, 76, 79, 82, 86, 87, 89, 90, 94, 95, 96, 97, 99, 105, 115, 135, 139, 157, 158, 164, 165, 166, 172], "cp": [4, 39, 48, 115, 165, 166], "fix": [4, 18, 29, 35, 36, 37, 39, 40, 48, 50, 52, 97, 99, 105, 135, 139, 163], "across": [4, 29, 36, 37, 39, 40, 58, 97, 143, 158, 163], "singl": [4, 9, 10, 11, 19, 24, 29, 31, 35, 36, 37, 38, 39, 40, 45, 48, 51, 53, 55, 58, 66, 94, 97, 105, 115, 116, 117, 118, 119, 120, 121, 125, 126, 135, 137, 139, 142, 143, 165, 166, 167, 169, 172], "30": [4, 8, 15, 16, 18, 21, 23, 24, 25, 26, 29, 35, 36, 38, 39, 55], "unrol": [4, 29, 35, 36, 37, 38, 39, 40, 45, 52, 157, 158, 163], "waveletdenois": [4, 11, 36, 39, 95, 114], "wv": [4, 11, 13, 36, 39, 94, 95, 114], "db8": [4, 11, 13, 36, 39, 94, 95, 114], "rang": [4, 6, 9, 10, 11, 13, 16, 25, 26, 29, 30, 36, 38, 39, 46, 55, 62, 80, 90, 99, 139, 142, 152, 153, 158, 159, 160, 169], "lamb": [4, 18, 19, 20, 29, 35, 36, 37, 39, 40, 98, 109], "sigma_denois": [4, 18, 20, 27, 29, 35, 36, 39, 40, 107, 110], "01": [4, 8, 9, 12, 14, 15, 16, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 55, 70, 71, 72, 79, 126], "g_param": [4, 12, 13, 18, 19, 20, 21, 23, 29, 35, 36, 37, 38, 39, 40, 48, 99, 115, 164], "k": [4, 7, 18, 19, 23, 27, 36, 37, 38, 39, 48, 50, 52, 91, 94, 95, 97, 99, 105, 116, 117, 118, 119, 120, 121, 155, 156, 164], "k_adjoint": [4, 38, 39], "trainable_param": [4, 29, 35, 36, 37, 39, 40, 164], "becaus": [4, 39], "custom_init_cp": [4, 39], "x_init": [4, 39, 82, 97, 99, 139, 151, 152, 154], "u_init": [4, 39], "est": [4, 19, 20, 38, 39, 97, 99, 105, 116, 117, 118, 119], "custom_init": [4, 38, 39, 97], "39": [4, 8, 16, 20, 26, 29, 35, 36, 39, 40], "To": [4, 7, 15, 25, 35, 36, 39, 40, 67, 109], "construct": [4, 7, 25, 36, 39, 49], "tensor": [4, 5, 6, 7, 19, 20, 25, 26, 36, 38, 39, 43, 53, 57, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 79, 80, 81, 82, 83, 85, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 160, 161, 162, 163, 167, 168, 170, 171, 172, 175, 176, 177], "sourcetensor": [4, 7, 25, 36, 39], "clone": [4, 7, 11, 15, 16, 25, 26, 36, 39], "requires_grad_": [4, 7, 16, 25, 26, 36, 39, 62], "el": [4, 36, 39], "param_valu": [4, 36, 39], "state_dict": [4, 29, 30, 31, 32, 39], "model_nontrain": 4, "pth": [4, 21, 27, 29, 30, 31, 32, 39, 127, 134, 143], "pgd": [4, 12, 13, 20, 21, 35, 36, 37, 39, 48, 50, 52, 97, 99, 105, 115, 121, 163, 165, 166], "prior_new": [4, 39], "params_algo_new": [4, 39], "model_new": [4, 39], "init": 4, "n": [4, 11, 15, 16, 20, 25, 26, 27, 30, 34, 47, 49, 51, 61, 62, 67, 70, 71, 80, 111, 127, 129, 132, 134, 135, 138, 139, 140, 143, 145, 151, 152, 156, 168], "file_nam": [4, 29, 30, 31, 32], "demo_unfolded_cp_ptwt": 4, "find_spec": 4, "ptwt": 4, "demo_unfolded_cp": 4, "model_nam": [4, 29, 30, 31, 32], "ckpt_state_dict": 4, "hub": [4, 15, 16, 20, 21, 26, 27, 29, 30, 31, 32], "load_state_dict_from_url": [4, 29, 30, 31, 32], "map_loc": [4, 29, 30, 31, 32], "storag": [4, 29, 30, 31, 32], "loc": [4, 29, 30, 31, 32], "load_state_dict": [4, 29, 30, 31, 32, 39, 96, 127, 134, 143], "after": [4, 11, 16, 23, 42, 90, 99, 154, 174], "0100": 4, "requires_grad": [4, 62], "huggingfac": [4, 11, 15, 16, 20, 21, 26, 27, 29, 30, 31, 32, 45], "co": [4, 11, 15, 16, 20, 21, 26, 27, 29, 30, 31, 32], "resolv": [4, 11, 15, 16, 20, 21, 26, 27, 29, 30, 31, 32], "main": [4, 6, 11, 15, 16, 20, 21, 26, 27, 29, 30, 31, 32, 42], "cach": [4, 15, 16, 20, 21, 26, 27, 29, 30, 31, 32], "3k": 4, "7mb": [4, 16], "0545": 4, "0512": [4, 36], "0481": [4, 36], "0484": [4, 36], "0526": [4, 36], "0535": [4, 36], "0427": [4, 36], "205": [4, 9, 40, 55], "demo_load": [4, 9, 55], "gener": [4, 7, 10, 11, 15, 16, 19, 20, 21, 26, 38, 42, 43, 45, 50, 52, 58, 60, 65, 79, 82, 88, 91, 100, 101, 105, 117, 127, 135, 139, 147, 149, 150, 151, 152, 154, 157, 158, 160, 162], "new": [5, 6, 23, 39, 49, 96, 137, 154], "particular": [5, 52, 92, 117, 144], "pan": 5, "sharpen": 5, "downsampl": [5, 7, 16, 20, 35, 40, 78, 84, 93, 135, 138], "grayscal": [5, 6, 7, 15, 19, 21, 45, 49, 128, 138, 170], "exist": [5, 52, 127, 134, 135, 139, 143, 144], "mathemat": 5, "equival": [5, 26, 67], "begin": [5, 11, 12, 13, 16, 19, 25, 26, 39, 48, 50, 52, 97, 100, 116, 117, 118, 119, 120, 121, 135, 139, 151, 152, 163, 164], "bmatrix": [5, 135, 139], "y_1": [5, 68], "y_2": [5, 68], "a_1": [5, 31, 66, 68, 135, 139], "a_2": [5, 31, 66, 68, 135, 139], "two": [5, 15, 16, 25, 26, 29, 30, 31, 48, 50, 66, 68, 98, 103, 105, 108, 109, 124, 135, 139, 144, 167], "one": [5, 11, 26, 30, 42, 46, 48, 50, 54, 56, 59, 61, 62, 63, 75, 77, 85, 86, 87, 89, 94, 96, 125, 126, 127, 129, 131, 133, 135, 138, 144, 147, 149, 154, 155, 156], "anoth": 5, "convert": [5, 6, 24, 51, 80, 128, 129, 170], "pansharpen": [5, 7], "factor": [5, 7, 15, 20, 36, 37, 40, 67, 90, 100, 103, 131, 135, 137, 138, 153, 158, 161], "physics1": [5, 135], "physics2": [5, 6, 135], "decolor": [5, 6], "physics_stack": 5, "tensorlist": [5, 135, 138, 139, 171, 175, 176, 177], "ad": [5, 10, 25, 47, 53, 67, 132, 135, 136, 140, 141, 145, 146], "multipli": [5, 40, 48, 53, 116, 135, 158, 167], "etc": [5, 6, 23, 48, 50, 51, 52, 53, 54, 58, 60, 99, 167], "It": [5, 12, 13, 16, 29, 47, 50, 52, 53, 58, 60, 73, 80, 81, 85, 88, 103, 122, 126, 127, 131, 135, 136, 138, 139, 143, 150, 167], "also": [5, 6, 7, 24, 26, 32, 36, 37, 42, 45, 48, 49, 50, 51, 53, 54, 58, 78, 80, 81, 84, 89, 90, 94, 101, 109, 111, 135], "possibl": [5, 35, 42, 46, 80, 81, 97, 138, 163, 168], "fill": [5, 171, 175, 176, 177], "line": [5, 10, 134, 137, 144], "similarli": [5, 39, 48, 109], "48": [5, 8, 16, 23, 26, 29, 35, 36, 37, 39, 143], "xlin": [5, 6], "pseudo": [5, 6, 49, 74, 126, 134, 137, 144], "high": [5, 7, 138], "re": [5, 7, 79, 137], "low": [5, 7, 19, 51, 111, 131, 136, 138], "transpos": [5, 6, 74, 78, 84, 97, 98, 99, 103, 125, 127, 129, 131, 135, 138, 144], "linearphys": [5, 6, 49, 82, 97, 98, 99, 103, 125, 127, 129, 131, 138, 144, 151, 152], "adjointness_test": [5, 6, 135], "unit": [5, 6, 25, 127, 135], "compute_norm": [5, 6, 135, 156], "power": [5, 6, 25, 61, 62, 80, 135, 143], "23": [5, 8, 16, 25, 26, 29, 30, 31, 35, 36, 37, 38, 39, 40], "68": [5, 16, 26, 29, 35, 36, 37], "physics_concat": 5, "818": [5, 9, 35, 55], "demo_pansharpen": [5, 9, 55], "offer": 6, "larg": [6, 49, 54, 79, 80, 82, 91, 114, 127], "might": [6, 82, 152], "want": [6, 12, 13, 20, 61, 62], "your": [6, 9, 10, 19, 28, 42, 54, 55, 56, 58, 85, 98, 103, 109, 111, 126, 129, 130, 132, 135, 139, 154, 156, 168, 169, 170, 172], "own": [6, 9, 10, 19, 38, 55, 56, 58, 78, 80, 81, 84, 89, 90, 129, 130, 132, 135, 139, 169, 172], "walk": 6, "through": [6, 26, 60, 61, 62], "creation": 6, "rgb": [6, 7, 82, 128, 133, 138], "averag": [6, 11, 24, 27, 45, 78, 83, 84, 104, 125, 126, 135, 136], "exploit": [6, 23, 31, 32], "singular": [6, 23, 24, 49, 126, 129, 137, 143, 150], "decomposit": [6, 23, 24, 49, 94, 95, 114, 126, 129, 134, 137, 143, 150], "speed": [6, 58, 92], "evalu": [6, 24, 26, 35, 36, 37, 45, 62, 82, 88, 92, 96, 99, 106, 158], "remain": [6, 25], "structur": [6, 49, 78, 137], "onc": [6, 8, 26, 39, 82, 97], "adjoint": [6, 12, 13, 21, 39, 47, 49, 91, 92, 98, 103, 112, 135, 144, 147, 149], "must": [6, 7, 12, 13, 19, 21, 62, 78, 128, 150, 152, 167], "colour": [6, 128], "2989": 6, "5870": 6, "1140": 6, "96": [6, 8, 16, 18, 20, 26, 29, 30, 35, 36, 37], "128": [6, 8, 16, 26, 29, 30, 31, 32, 38, 39, 45, 78, 80, 84, 90], "mea": 6, "close": [6, 11, 23, 24, 49, 67, 94, 95, 100, 101, 104, 127, 131, 135, 139, 144], "form": [6, 8, 11, 24, 37, 42, 48, 49, 50, 52, 94, 95, 97, 99, 100, 101, 104, 105, 126, 127, 135, 137, 139, 144, 164], "svd": [6, 129, 134], "implement": [6, 7, 10, 11, 19, 28, 36, 37, 38, 48, 50, 54, 55, 80, 81, 82, 90, 92, 96, 98, 99, 103, 105, 108, 109, 117, 126, 129, 132, 134, 135, 139, 150, 151, 152, 169, 170, 172], "decomposablephys": [6, 23, 24, 49, 126, 128, 130, 134, 137, 143, 150], "so": [6, 26, 40, 137], "decolorizesvd": 6, "447": [6, 35], "v_adjoint": [6, 23, 129], "6687": 6, "3132": 6, "2550": 6, "v": [6, 19, 23, 52, 97, 98, 99, 103, 105, 129, 163], "y2": [6, 49], "xlin2": 6, "solut": [6, 11, 12, 13, 48, 50, 52, 92, 94, 95, 97, 99, 105, 127, 135, 144, 163], "moreov": [6, 16, 26, 97], "sampl": [6, 20, 26, 28, 30, 36, 37, 45, 51, 54, 55, 60, 65, 83, 85, 89, 98, 103, 109, 111, 126, 127, 129, 132, 134, 135, 137, 139, 144, 145, 150, 151, 152, 153, 154, 155, 156, 158, 161, 168, 169, 170, 172], "ddrm": [6, 24], "start": [6, 29, 30, 31, 32, 105], "xprox": 6, "prox_l2": [6, 49, 129, 131, 135], "elaps": [6, 23, 24, 27], "xprox2": 6, "2e": [6, 13], "15": [6, 8, 12, 16, 23, 25, 26, 29, 30, 35, 36, 37, 38, 39, 40, 45, 90], "22e": [6, 29], "283": [6, 9, 55], "demo_phys": [6, 9, 55], "deepinvers": [7, 42, 56], "restrict": [7, 50, 144, 151], "ourselv": 7, "2d": [7, 94, 137, 143, 160, 161, 162], "found": [7, 24, 95], "get_image_url": [7, 15, 19, 21, 25, 26], "cbsd_0010": [7, 15], "png": [7, 15, 21, 25, 26, 172], "dtype": [7, 25, 26, 37, 97, 99, 127, 135, 143, 144], "float": [7, 37, 48, 60, 61, 62, 65, 66, 67, 68, 70, 71, 72, 73, 76, 78, 79, 81, 82, 83, 84, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 122, 123, 129, 132, 133, 134, 135, 136, 139, 140, 141, 142, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 165, 166, 168], "interpol": [7, 20, 26, 61, 144, 161], "basic": [7, 9, 53, 54, 55, 125, 126, 135], "demo_physics_tour": [7, 9, 55], "ident": [7, 15, 19, 61, 97, 99, 129, 130, 135, 139, 154, 155, 156], "poissonnois": [7, 31, 32], "result": [7, 16, 25, 26, 52, 53, 135, 139, 152, 153, 155, 156, 157, 158], "unless": 7, "explicit": [7, 9, 10, 20, 37, 45, 54, 55, 56, 58, 97, 98, 103, 109, 115, 126, 129, 132, 135, 139, 148, 155, 157, 169], "consid": [7, 15, 16, 26, 82, 88], "compressedsens": [7, 36, 37, 43, 49], "matrix": [7, 23, 36, 37, 62, 125, 127, 129, 131, 134, 135, 138, 143, 144], "take": [7, 16, 23, 25, 26, 32, 44, 45, 48, 50, 59, 63, 71, 72, 75, 77, 78, 80, 82, 85, 86, 87, 88, 89, 99, 105, 106, 144, 158, 159], "2048": 7, "64x64": [7, 25, 26], "correspond": [7, 16, 20, 25, 26, 36, 37, 45, 48, 97, 104, 105, 117, 135, 136, 137, 139], "m": [7, 19, 32, 36, 37, 42, 43, 47, 49, 68, 70, 71, 72, 92, 127, 129, 134, 135, 139, 143, 155], "fast": [7, 36, 37, 75, 92, 126, 127, 134, 137, 143, 162], "channelwis": [7, 127], "spars": [7, 76], "radon": [7, 16, 144], "mix": [7, 32], "img_width": [7, 16, 21, 38, 144], "angl": [7, 10, 15, 17, 21, 38, 45, 55, 57, 82, 88, 98, 104, 106, 109, 135, 136, 139, 144, 148, 159, 160, 168, 172], "poissongaussiannois": 7, "gain": [7, 32, 71, 72, 108, 140, 141], "min": [7, 12, 13, 16, 26, 39, 48, 50, 91, 92, 94, 95, 97, 117, 135, 145, 172], "max": [7, 11, 24, 26, 27, 63, 78, 84, 102, 145, 172], "sinogram": 7, "backproject": [7, 16, 87], "subsampl": [7, 127, 131, 137, 143], "indic": [7, 39, 58, 94, 99, 100, 154, 159], "coeffici": [7, 94, 95, 114], "cartesian": 7, "approxim": [7, 16, 23, 27, 37, 45, 51, 70, 71, 72, 82, 83, 94, 111, 114, 144, 151, 155], "real": [7, 29, 137], "part": [7, 29, 52, 78, 137], "imaginari": [7, 29, 137], "rand": [7, 49, 132, 136, 140, 141, 145, 146, 172], "int": [7, 8, 23, 25, 27, 29, 30, 31, 32, 35, 38, 39, 40, 57, 58, 61, 62, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 106, 108, 109, 112, 114, 115, 122, 123, 124, 127, 131, 135, 137, 138, 139, 142, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 170, 172], "x2": [7, 91, 92], "zeros_lik": [7, 11, 37, 38, 135], "space": [7, 16, 29, 38, 45, 75, 82, 106, 144], "singlepixelcamera": [7, 19], "binari": [7, 30, 129, 134, 137, 143], "pattern": [7, 18, 42, 143], "hadamard": [7, 19, 143], "degre": [7, 16, 29, 45, 83, 144, 148, 160], "723": [7, 9, 35, 55], "32x32": [8, 39, 131, 135, 138, 143, 150, 152], "avail": [8, 11, 39, 45, 78, 80, 81, 84, 89, 90, 94, 95, 100, 101, 114], "128x128": [8, 29, 39], "train_dataset_nam": [8, 29, 31, 32, 35, 36, 37, 38, 39, 40], "test_dataset_nam": [8, 35, 39, 40], "test_transform": [8, 35, 39, 40], "train_transform": [8, 35, 39, 40], "randomcrop": [8, 35, 39, 40], "8m": [8, 29, 30, 39], "08m": 8, "8mib": [8, 29, 40], "9": [8, 9, 13, 16, 20, 24, 25, 26, 27, 29, 30, 31, 35, 36, 37, 38, 39, 40, 68, 85, 97], "69m": [8, 39], "53": [8, 15, 16, 25, 26, 29, 31, 35, 36, 39, 41, 55], "3mib": [8, 29, 39, 40], "17": [8, 16, 17, 20, 21, 23, 25, 26, 29, 35, 36, 37, 38, 39, 40, 55, 172], "3m": [8, 26, 29], "63": [8, 16, 25, 26, 29, 35, 36, 40], "9mib": [8, 29, 40], "59": [8, 16, 26, 29, 36, 37, 38, 39, 41, 55], "randomli": [8, 26, 39, 83, 106, 160, 162], "probabl": [8, 16, 32, 39, 71, 72, 127, 134, 143], "probability_mask": [8, 39], "1000": [8, 25, 26, 35, 36, 37, 38, 40, 75, 80, 91, 92, 112, 151, 152, 154, 155, 156], "my_dataset_nam": [8, 29, 30, 31, 35, 36, 37, 39, 40], "demo_training_inpaint": [8, 39], "deepinv_datasets_path": [8, 29, 30, 31, 32, 39], "dataset_filenam": [8, 29, 30, 31, 32, 35, 36, 37, 39, 40, 58], "str": [8, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 56, 58, 78, 80, 81, 82, 83, 84, 88, 89, 90, 93, 94, 95, 96, 97, 114, 115, 124, 125, 126, 127, 131, 138, 142, 143, 144, 147, 149, 151, 152, 157, 158, 159, 161, 165, 166, 170, 172, 173, 174], "train_batch_s": [8, 35, 36, 37, 38, 39, 40], "test_batch_s": [8, 35, 36, 37, 38, 39, 40], "train_dataload": [8, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 158], "30it": [8, 16, 29, 36], "29it": [8, 29, 30, 36], "133": [8, 16, 26, 36, 40], "21it": [8, 16, 26, 29, 36, 37, 40], "phi_": [8, 30], "top": [8, 10, 19, 23, 30, 32, 38, 39, 47, 52, 70, 71, 72, 74, 94, 95, 97, 104, 108, 117, 125, 127, 129, 131, 135, 138, 144, 147, 149], "post": [8, 24, 27], "u": [8, 19, 23, 25, 26, 30, 31, 32, 38, 47, 52, 67, 70, 71, 72, 78, 86, 93, 98, 100, 101, 103, 104, 105, 108, 129, 135, 145, 146, 163], "net": [8, 25, 30, 31, 32, 78, 93], "unet": [8, 30, 31, 32, 80, 89], "in_channel": [8, 19, 21, 29, 30, 31, 32, 35, 46, 78, 80, 81, 84, 86, 87, 93], "out_channel": [8, 19, 21, 29, 30, 31, 32, 35, 46, 78, 80, 81, 84, 86, 87, 93], "batch_norm": [8, 93], "artifactremov": [8, 30, 31, 32, 46, 125, 127, 129, 131, 135, 138, 144, 157, 158], "supervis": [8, 33, 35, 36, 37, 38, 39, 40, 54, 55, 56, 58, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 81, 93, 98, 103, 107, 109, 129, 130, 134, 135, 137, 139, 141, 157, 158, 160, 161, 164, 166, 169], "mean": [8, 11, 23, 24, 25, 26, 27, 39, 47, 48, 51, 64, 65, 66, 68, 69, 70, 71, 72, 153, 154, 155, 156], "error": [8, 24, 25, 27, 39, 60, 63, 64, 65, 66, 68, 69, 109, 144], "easili": [8, 25, 26, 39, 42, 43, 58], "done": [8, 12, 13, 24, 25, 26, 35, 36, 37, 38, 39, 40, 42, 43, 94, 138], "suploss": [8, 35, 36, 37, 38, 39, 40], "few": [8, 16, 39, 135], "epoch": [8, 16, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 158, 159], "keep": [8, 26, 35, 39, 94, 127, 134, 135, 139, 143, 154, 155, 156], "short": [8, 39], "qualiti": [8, 39], "least": [8, 39], "5e": [8, 29, 30, 31, 32, 35, 40], "inform": [8, 29, 30, 31, 32, 39, 44, 45, 96, 97, 135, 157, 158], "mse": [8, 35, 36, 37, 38, 39, 40, 60, 64, 65, 66, 68, 69], "schedul": [8, 24, 25, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 152, 158], "weight_decai": [8, 29, 30, 31, 32, 35, 36, 37, 39, 40], "lr_schedul": [8, 29, 30, 31, 32, 35, 38, 39, 40], "steplr": [8, 29, 30, 31, 32, 35, 38, 39, 40], "step_siz": [8, 23, 27, 29, 30, 31, 32, 35, 39, 40, 123, 154, 155, 156], "eval_dataload": [8, 29, 30, 31, 32, 35, 36, 37, 38, 40, 158], "save_path": [8, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 127, 134, 143, 158], "2067779": 8, "eval_psnr": [8, 29, 30, 31, 32, 35, 36, 37, 38, 40], "total_loss": [8, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "114": [8, 16, 26, 35, 36], "train_psnr": [8, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "43": [8, 11, 12, 14, 16, 20, 25, 26, 29, 35, 36, 55], "0828": [8, 39], "0921": 8, "27": [8, 16, 20, 24, 25, 26, 29, 35, 36, 38, 40, 41, 55], "98it": [8, 16, 30, 36, 40], "0865": 8, "074": [8, 38, 41, 55], "0713": 8, "12": [8, 11, 16, 20, 25, 26, 29, 30, 35, 36, 37, 38, 39], "0625": 8, "13": [8, 16, 20, 22, 25, 26, 29, 30, 35, 36, 37, 38, 39, 40, 55], "14": [8, 13, 16, 25, 26, 29, 36, 37, 38, 39, 40], "06it": [8, 16, 29, 35, 36, 37, 39], "0856": [8, 138], "0786": [8, 37], "0747": 8, "0698": [8, 36], "67it": [8, 36, 38, 39], "0718": [8, 36], "0681": [8, 36], "0697": [8, 36], "0673": [8, 36], "31": [8, 12, 16, 26, 29, 35, 36, 40, 41], "03it": [8, 16, 30, 36, 37], "064": 8, "0643": 8, "0654": [8, 36], "0632": 8, "38": [8, 16, 20, 26, 29, 35, 36, 39, 40, 41, 55], "15it": [8, 16, 26, 29, 36, 38], "0617": 8, "071": 8, "0701": [8, 36], "0728": 8, "46": [8, 16, 26, 29, 35, 36, 40], "32it": [8, 16, 29, 36, 40], "0724": [8, 31], "0725": [8, 36], "0709": 8, "0689": [8, 36], "54": [8, 16, 20, 26, 29, 36, 40], "42it": [8, 29, 35, 36, 37, 38], "0691": [8, 36], "0688": [8, 36], "0684": [8, 36], "0683": [8, 36], "62": [8, 16, 20, 23, 26, 29, 35, 36], "37it": [8, 30, 35, 36, 38], "0675": [8, 31, 36], "066": [8, 36], "0638": 8, "70": [8, 16, 24, 25, 26, 29, 35, 36, 38, 40, 134], "35": [8, 15, 16, 26, 29, 31, 32, 35, 36, 38, 39, 40], "53it": [8, 29, 36, 37, 38, 39], "0639": 8, "0635": 8, "0644": 8, "0634": [8, 39], "78": [8, 15, 16, 20, 26, 29, 35, 36, 37], "062": 8, "0613": 8, "063": 8, "0637": 8, "86": [8, 16, 26, 29, 35, 36], "62it": [8, 31, 36, 37, 38, 39], "0629": 8, "0646": 8, "94": [8, 16, 20, 26, 29, 36, 39], "47": [8, 16, 25, 26, 29, 33, 35, 36, 39], "0112": 8, "085": [8, 37], "0621": 8, "0555": [8, 36], "01it": [8, 16, 29, 30, 36, 39], "0461": [8, 36], "0446": [8, 36], "0472": [8, 36], "0471": [8, 36], "84it": [8, 16, 32, 36, 37, 38, 40], "0449": [8, 36], "0409": 8, "0389": 8, "0429": [8, 36], "24": [8, 16, 25, 26, 29, 31, 32, 35, 36, 37, 38, 39, 40], "43it": [8, 24, 35, 37, 38, 39], "0403": 8, "0383": 8, "0388": 8, "59it": [8, 32, 36, 37, 38], "037": 8, "0366": 8, "0372": [8, 39], "0364": 8, "40": [8, 15, 16, 24, 25, 26, 29, 30, 35, 36, 37, 38, 40], "66it": [8, 16, 24, 36, 38, 39], "0363": 8, "0351": [8, 137], "0339": 8, "0329": 8, "0318": 8, "0316": 8, "0307": 8, "0301": 8, "56": [8, 16, 18, 24, 26, 29, 35, 36, 37], "28": [8, 15, 16, 20, 25, 26, 29, 30, 31, 35, 36, 37, 43, 49], "75it": [8, 16, 25, 36, 38], "0294": [8, 39], "0291": 8, "0282": 8, "028": 8, "0275": 8, "0272": 8, "0269": 8, "0264": [8, 39], "72": [8, 16, 26, 29, 35, 36, 37, 40, 91], "73it": [8, 25, 36, 38, 39], "026": 8, "0254": 8, "025": 8, "0248": 8, "80": [8, 15, 16, 24, 25, 26, 29, 30, 32, 35, 36, 37, 38, 40], "0247": 8, "0245": 8, "0241": [8, 131], "0238": 8, "49it": [8, 29, 35, 36, 38], "0234": 8, "0231": 8, "0228": 8, "0225": 8, "0223": 8, "0221": 8, "00893": 8, "0115": 8, "0104": [8, 39], "0159": [8, 39], "0164": [8, 39], "0157": [8, 39], "0149": 8, "0148": 8, "0147": 8, "0143": 8, "0138": [8, 39], "0131": [8, 39], "0129": 8, "0125": 8, "013": 8, "0128": 8, "0123": 8, "012": [8, 39], "0116": 8, "56it": [8, 36, 37, 38], "0114": [8, 39], "011": [8, 39], "0109": 8, "0108": [8, 39], "0106": [8, 39], "0119": [8, 39], "0117": [8, 39], "41it": [8, 18, 35, 36, 38], "0113": 8, "0118": 8, "54it": [8, 20, 36, 38, 40], "21": [8, 12, 16, 17, 19, 21, 25, 26, 29, 30, 35, 36, 37, 39], "0107": 8, "02it": [8, 16, 37], "14it": [8, 29, 36, 37], "0105": [8, 39], "0103": 8, "28it": [8, 16, 29, 36, 37, 38, 40], "00656": [8, 30], "00719": 8, "00797": 8, "00977": 8, "0101": 8, "00857": 8, "00851": 8, "00819": 8, "60it": [8, 16, 24, 29, 36, 38, 39], "00833": 8, "00822": 8, "00802": 8, "00752": 8, "70it": [8, 24, 25, 32, 36, 38], "00707": [8, 38], "00696": [8, 30, 38], "00668": [8, 30], "00662": [8, 30], "0071": 8, "00683": 8, "00666": 8, "00717": 8, "00754": 8, "00741": 8, "00723": 8, "71it": [8, 24, 25, 30, 36, 38], "00718": 8, "00735": 8, "00767": 8, "00761": 8, "65it": [8, 36, 38, 39], "00757": 8, "0074": 8, "00727": 8, "00759": 8, "00746": 8, "00734": 8, "00835": 8, "00823": 8, "0082": 8, "00817": 8, "0081": 8, "00798": 8, "00786": 8, "00775": 8, "00772": 8, "00766": 8, "51it": [8, 16, 35, 36, 37, 38], "00812": 8, "00815": 8, "backbone_net": [8, 30, 31, 32, 74], "maxpool": [8, 30, 31, 32, 78, 84], "maxpool2d": [8, 30, 31, 32], "kernel_s": [8, 29, 30, 31, 32, 35, 38, 40, 85, 124], "stride": [8, 29, 30, 31, 32, 35, 38, 40, 78, 84], "ceil_mod": [8, 30, 31, 32], "conv1": [8, 30, 31, 32], "sequenti": [8, 30, 31, 32, 76], "conv2d": [8, 29, 30, 31, 32, 35, 38, 40, 124, 125], "relu": [8, 29, 30, 31, 32, 35, 40, 78, 81, 84], "inplac": [8, 30, 31, 32], "conv2": [8, 30, 31, 32], "conv3": [8, 30], "up3": [8, 30], "upsampl": [8, 30, 31, 32, 78, 84, 90], "scale_factor": [8, 30, 31, 32], "mode": [8, 30, 31, 32, 40, 78, 81, 84, 89, 143, 161, 172], "nearest": [8, 30, 31, 32, 78, 80, 84, 90, 152], "up_conv3": [8, 30], "up2": [8, 30, 31, 32], "up_conv2": [8, 30, 31, 32], "conv_1x1": [8, 30, 31, 32], "now": [8, 11, 15, 16, 24, 25, 26, 35, 36, 37, 39, 163], "test_psnr": [8, 39, 157], "artifact_remov": [8, 39], "test_std_psnr": [8, 39, 157], "init_psnr": [8, 39], "init_std_psnr": [8, 39], "02": [8, 16, 17, 21, 23, 24, 25, 26, 29, 30, 33, 35, 36, 37, 38, 39, 55, 80, 104, 136, 152], "80it": [8, 30, 36], "608": [8, 9, 35, 55], "demo_train_inpaint": [8, 9, 55], "37": [9, 16, 25, 26, 29, 35, 36, 38], "017": 9, "execut": [9, 14, 17, 22, 28, 33, 34, 41, 55], "file": [9, 14, 17, 22, 28, 33, 34, 41, 42, 48, 55, 56, 82, 88, 127, 134, 143, 170], "auto_exampl": [9, 14, 17, 22, 28, 33, 34, 41], "mem": [9, 14, 17, 22, 28, 33, 34, 41, 55], "mb": [9, 14, 17, 22, 28, 33, 34, 41, 55, 80], "imag": [9, 10, 14, 22, 25, 26, 28, 33, 41, 43, 45, 47, 49, 50, 51, 55, 56, 57, 58, 60, 64, 65, 66, 67, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 100, 103, 106, 107, 109, 112, 114, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173], "deblur": [9, 10, 14, 22, 25, 41, 54, 55, 56, 58, 69, 78, 81, 92, 97, 98, 103, 107, 109, 112, 115, 126, 129, 132, 135, 139, 148, 157, 158, 161, 163, 165, 168, 169, 172, 173], "reconstruct": [9, 10, 12, 13, 15, 19, 20, 21, 23, 25, 27, 28, 38, 43, 45, 46, 47, 51, 52, 55, 56, 58, 60, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 79, 82, 90, 93, 125, 127, 129, 131, 132, 134, 135, 136, 138, 139, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 168, 169, 170, 172], "08": [9, 16, 20, 26, 28, 29, 30, 35, 36, 37, 40, 55, 112], "tour": [9, 10, 55, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 143, 144, 148, 169, 170, 172], "sens": [9, 10, 26, 37, 41, 43, 55, 56, 58, 60, 65, 69, 94, 98, 103, 107, 109, 121, 125, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 143, 144, 148, 157, 158, 164, 166, 169, 170, 172, 174], "04": [9, 16, 20, 22, 25, 26, 28, 29, 31, 32, 35, 36, 37, 39, 55], "stack": [9, 10, 55, 128, 129, 131, 135, 138, 139, 167, 169, 172], "concaten": [9, 10, 53, 55, 86, 87, 90, 128, 129, 131, 135, 138, 139, 160, 162, 167, 169, 172], "photon": [9, 10, 55, 104, 136, 139, 142, 169], "lidar": [9, 10, 55, 139, 142, 169], "depth": [9, 10, 11, 29, 35, 40, 55, 81, 86, 87, 89, 90, 133, 139, 142, 169], "load": [9, 10, 25, 43, 49, 55, 58, 94, 98, 100, 107, 109, 127, 129, 134, 135, 139, 143, 158, 164, 166, 169, 170], "googl": [10, 16], "colab": 10, "them": [10, 35, 36, 37, 45, 59, 63, 75, 77, 85, 86, 87, 89, 94, 135], "pip": [10, 54], "instal": [10, 42], "git": [10, 54], "github": [10, 38, 42, 54, 66, 80, 90, 91, 92], "com": [10, 16, 32, 36, 54, 66, 80, 90], "egg": [10, 54], "variat": [10, 14, 16, 54, 55, 73, 91, 92, 97, 98, 103, 109, 112, 115, 126, 129, 132, 135, 139, 168, 169, 172, 173], "tv": [10, 14, 37, 54, 55, 73, 91, 92, 97, 98, 103, 109, 112, 115, 126, 129, 132, 135, 139, 168, 169, 172, 173], "3d": [10, 14, 55, 76, 94, 95, 114, 132, 168, 169, 172], "expect": [10, 16, 17, 45, 55, 82, 96, 129, 130, 132, 134, 135, 139, 168, 170, 172], "likelihood": [10, 16, 17, 23, 26, 47, 51, 55, 82, 88, 96, 103, 104, 106, 108, 129, 130, 132, 134, 135, 139, 154, 155, 156, 159, 168, 170, 172], "epll": [10, 17, 45, 55, 96, 129, 130, 132, 134, 135, 139, 168, 170, 172], "limit": [10, 11, 15, 17, 45, 55, 57, 82, 88, 98, 104, 106, 109, 135, 136, 139, 144, 159, 168, 172], "tomographi": [10, 17, 22, 38, 45, 55, 57, 81, 82, 88, 97, 98, 103, 104, 106, 107, 109, 115, 132, 135, 136, 139, 159, 168, 169, 170, 172, 173], "vanilla": [10, 22, 41, 45, 55, 56, 58, 69, 81, 97, 98, 103, 107, 109, 115, 131, 132, 135, 139, 144, 157, 158, 164, 166, 168, 169, 170, 172, 173, 174], "ct": [10, 15, 16, 22, 41, 54, 55, 69, 81, 82, 86, 87, 88, 97, 98, 103, 105, 107, 109, 115, 117, 132, 135, 136, 139, 144, 157, 158, 164, 166, 168, 169, 170, 172, 173], "dpir": [10, 22, 45, 54, 55, 56, 58, 78, 97, 98, 103, 107, 109, 115, 126, 129, 132, 135, 139, 157, 169], "resolut": [10, 22, 41, 55, 56, 58, 69, 81, 84, 89, 97, 98, 103, 107, 109, 110, 115, 131, 132, 135, 138, 139, 157, 158, 161, 164, 166, 169, 174], "condat": [10, 22, 55, 81, 91, 92, 97, 98, 103, 105, 107, 109, 115, 129, 132, 135, 139, 143, 168, 169, 170, 172, 173], "vu": [10, 22, 55, 81, 97, 98, 103, 105, 107, 109, 115, 129, 132, 135, 139, 143, 168, 169, 170, 172, 173], "primal": [10, 22, 39, 41, 48, 55, 69, 81, 86, 87, 91, 92, 97, 98, 99, 103, 105, 107, 109, 115, 117, 129, 132, 135, 139, 143, 144, 157, 158, 164, 166, 168, 169, 170, 172, 173], "dual": [10, 22, 39, 41, 48, 55, 69, 81, 86, 87, 91, 92, 97, 98, 100, 101, 103, 105, 107, 109, 115, 117, 129, 132, 135, 139, 143, 144, 157, 158, 164, 166, 168, 169, 170, 172, 173], "uncertainti": [10, 24, 28, 54, 55, 61, 81, 98, 103, 109, 111, 129, 132, 134, 135, 139, 154, 156, 168, 169, 170, 172], "quantif": [10, 28, 54, 55, 61, 81, 98, 103, 109, 111, 129, 132, 134, 135, 139, 154, 156, 168, 169, 170, 172], "ula": [10, 28, 55, 61, 81, 98, 103, 109, 111, 129, 132, 134, 135, 139, 154, 168, 169, 170, 172], "diffus": [10, 25, 28, 54, 55, 78, 80, 129, 132, 134, 135, 139, 150, 151, 152, 153, 154, 168, 169, 170, 172], "dp": [10, 28, 55, 80, 98, 103, 129, 134, 135, 139, 169, 170, 172], "diffpir": [10, 26, 28, 54, 55, 80, 98, 103, 108, 126, 129, 132, 135, 139, 169, 170, 172], "sure": [10, 27, 33, 42, 55, 56, 58, 70, 71, 72, 74, 93, 129, 130, 135, 139, 141, 157, 158, 169], "neighbor2neighbor": [10, 33, 55, 56, 58, 74, 93, 129, 130, 135, 139, 141, 157, 158, 169], "multipl": [10, 18, 19, 24, 32, 33, 51, 55, 56, 58, 63, 64, 65, 67, 71, 72, 74, 83, 93, 129, 133, 134, 135, 139, 153, 157, 158, 169], "equivari": [10, 33, 44, 55, 56, 58, 60, 64, 81, 83, 98, 103, 107, 109, 129, 135, 137, 139, 157, 158, 160, 164, 166, 169], "mri": [10, 11, 33, 54, 55, 56, 58, 60, 64, 77, 81, 98, 103, 107, 109, 129, 135, 139, 157, 158, 160, 164, 166, 169], "lista": [10, 37, 39, 41, 55, 56, 58, 69, 94, 98, 103, 107, 109, 121, 127, 135, 139, 157, 158, 164, 166, 169, 174], "compress": [10, 41, 43, 55, 56, 58, 69, 90, 94, 98, 103, 107, 109, 121, 127, 135, 139, 157, 158, 164, 166, 169, 174], "equilibrium": [10, 41, 54, 55, 56, 58, 69, 81, 98, 103, 107, 109, 126, 129, 132, 135, 139, 148, 157, 158, 163, 165, 169], "deq": [10, 41, 52, 54, 55, 56, 58, 69, 81, 98, 103, 107, 109, 126, 129, 132, 135, 139, 148, 157, 158, 163, 165, 169], "scan": [10, 41, 55, 69, 86, 87, 98, 105, 109, 117, 132, 135, 139, 144, 157, 158, 164, 166, 169], "auto_examples_python": 10, "auto_examples_jupyt": 10, "brain": 11, "extend": [11, 15, 38, 46], "redund": 11, "dictionari": [11, 19, 29, 35, 36, 37, 40, 48, 97, 99, 105, 115, 116, 117, 118, 119, 157, 158, 164, 165, 166, 173, 174], "doe": [11, 60, 61, 62, 76, 81, 100, 120, 135, 139, 164], "admit": 11, "np": [11, 23, 24, 25, 26, 127, 150], "load_np_url": 11, "t1": 11, "brainweb": 11, "subject": 11, "id": [11, 16, 61], "convent": [11, 94, 128], "c": [11, 37, 39, 49, 71, 79, 80, 90, 100, 125, 126, 127, 129, 134, 143, 147, 149, 168, 172], "height": [11, 57, 80, 82, 86, 87, 137, 144, 162, 172], "width": [11, 57, 80, 82, 86, 87, 137, 144, 162, 172], "volume_data": 11, "brainweb_t1_icbm_1mm_subject_0": 11, "npy": [11, 12, 13, 18, 20, 29], "from_numpi": [11, 25, 26], "output": [11, 12, 13, 19, 20, 21, 25, 26, 36, 37, 62, 75, 77, 78, 80, 81, 82, 84, 86, 87, 88, 93, 94, 96, 97, 98, 99, 100, 124, 125, 131, 138, 141, 142, 157, 158, 159, 161, 163], "list_imag": 11, "90": [11, 16, 24, 25, 26, 29, 35, 36, 38, 45, 83], "figsiz": [11, 25, 172], "suptitl": [11, 25, 172], "groundtruth": [11, 26], "cmap": [11, 172], "viridi": 11, "tight": [11, 172], "fontsiz": [11, 172], "format": [11, 15, 16, 43, 58, 94, 159], "waveletprior": [11, 13, 39], "precis": [11, 16, 48, 50, 83, 97, 102, 135], "widehat": [11, 25, 26, 151, 152], "psi": [11, 13, 94, 95, 114], "_1": [11, 36, 97, 99, 101, 102], "operatornam": [11, 12, 13, 19, 25, 37, 39, 48, 50, 52, 61, 83, 97, 98, 99, 100, 101, 102, 103, 105, 107, 108, 109, 110, 111, 116, 117, 118, 120, 121, 152, 163, 164], "prox": [11, 12, 13, 19, 25, 36, 37, 38, 39, 48, 49, 50, 98, 100, 101, 102, 103, 107, 108, 109, 112, 113, 114, 116, 117, 118, 120, 121, 126, 135, 137, 152], "_": [11, 12, 13, 16, 19, 25, 26, 30, 36, 37, 39, 48, 50, 65, 83, 91, 92, 97, 98, 100, 101, 102, 103, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 120, 121, 129, 151, 152, 159], "cdot": [11, 25, 26, 48, 50, 51, 52, 94, 95, 97, 98, 100, 108, 111, 114, 151, 152], "grow": 11, "cubic": [11, 114], "support": [11, 76, 88, 114, 124], "reason": 11, "db1": [11, 114], "db4": [11, 95, 114], "wavdict": 11, "wvdim": [11, 94, 95, 114], "th": [11, 12, 13, 16, 88, 91, 92, 94, 95, 102, 106, 112, 113, 114, 156], "x_hat": 11, "instead": [11, 26, 46, 59, 61, 63, 74, 75, 77, 85, 86, 87, 89, 92, 120], "seek": 11, "sparsiti": [11, 13], "formal": 11, "sum_": [11, 16, 30, 67, 83], "ell": 11, "l": [11, 18, 30, 44, 78, 84, 85, 91, 92, 155, 156, 159], "lambda_": [11, 25, 152], "psi_": 11, "As": [11, 15, 16, 18, 25, 26, 29, 30, 50, 114], "previous": 11, "lambda_i": 11, "numer": [11, 23, 61, 62, 135, 144, 154, 155, 156], "conveni": [11, 12, 13, 23], "situat": 11, "propos": [11, 15, 16, 26, 37, 61, 62, 82, 83], "combett": 11, "write": [11, 12, 13, 20, 25, 26, 38, 46, 151, 152], "equat": [11, 12, 13, 16, 25, 26, 39, 48, 50, 52, 97, 116, 117, 118, 119, 120, 121, 151, 152, 163], "align": [11, 19, 25, 26, 39, 50, 52, 116, 117, 118, 119, 120, 121, 151, 152, 164], "text": [11, 12, 13, 36, 37, 67, 70, 72, 83, 97, 100, 101, 103, 127, 129, 134, 145, 168], "ldot": 11, "quad": [11, 16, 48, 50, 67, 70, 72, 97], "x_": [11, 19, 23, 27, 36, 37, 39, 48, 50, 52, 97, 99, 105, 116, 117, 118, 119, 120, 121, 135, 152, 156, 164], "omega_": 11, "g_": [11, 50], "z_": [11, 19, 23, 39, 48, 50, 52, 97, 105, 116, 117, 118, 156, 164], "turn": [11, 15, 26, 45, 52, 83, 153, 163, 164], "sequenc": [11, 25, 80, 143, 151, 152], "x_n": 11, "mathbb": [11, 48, 50, 61, 62, 97, 127, 129, 134, 159], "origin": [11, 12, 13, 16, 26, 36, 45, 70, 79, 81, 150, 152, 161], "let": [11, 25, 26, 83], "sever": 11, "ll": [11, 26], "list_wv": [11, 95], "haar": 11, "db2": [11, 94], "db3": 11, "non_linear": [11, 94, 95], "list_prox": 11, "modulelist": [11, 29, 35, 36, 37, 38, 39, 40], "element": [11, 40, 45, 47, 63, 75, 94, 124, 127, 133, 138, 167], "z_p": 11, "repeat": [11, 38], "len": [11, 25], "p_p": 11, "x_cur": 11, "step": [11, 12, 13, 16, 18, 19, 20, 21, 23, 27, 29, 45, 48, 50, 52, 84, 93, 97, 99, 100, 101, 105, 115, 117, 120, 123, 144, 152, 155, 156, 157, 163, 164, 165, 166], "x_prev": [11, 19, 97, 99], "axi": [11, 25], "reflect": [11, 124, 125, 131, 138, 161], "readi": [11, 26], "increas": [11, 68, 82, 93], "better": [11, 53], "rel": [11, 135], "criterion": [11, 91, 92, 97, 99, 100, 101, 112, 135], "rel_crit": 11, "linalg": 11, "flatten": [11, 24, 27, 88, 94, 114, 167], "readili": [11, 25, 26], "waveletdictdenois": 11, "694": [11, 14, 55], "demo_3d_wavelet": [11, 14, 55], "epsilon": [12, 13, 15, 23, 26, 71, 91, 132, 140, 145, 146], "realiz": [12, 13, 25, 67, 137, 158], "goal": [12, 13], "recov": [12, 13], "load_degrad": [12, 13, 18, 20, 29], "plot_curv": [12, 13, 19, 21], "kernel_index": [12, 13, 18, 20], "chose": [12, 13, 18], "among": [12, 13, 18, 46, 48, 114], "levin09": [12, 13, 18], "mat": [12, 13, 18], "kernel_torch": [12, 13, 18, 20], "index": [12, 13, 18, 20, 96], "44mib": 12, "repres": [12, 13, 53, 97, 124, 138, 167], "tau": [12, 13, 19, 32, 39, 70, 71, 72, 97, 102, 112, 113, 114, 117], "tvprior": [12, 92], "n_it_max": [12, 91, 92, 112], "2000": 12, "cost_tv": 12, "x_tv": 12, "cost_tv_prox": 12, "1145": 12, "our": [12, 13, 19, 23, 26, 36, 37, 39, 42, 54, 117], "toward": [12, 13], "img": [12, 13, 16, 19, 21, 23, 24, 25, 26, 27, 57, 172], "underset": [12, 13, 16, 39, 48, 50, 91, 92, 94, 95, 97, 100, 101, 103, 117, 135], "dx": [12, 37, 91, 92, 112], "regularis": [12, 13, 25, 39, 48, 50, 62, 97, 99, 115, 165, 166], "redefin": [12, 13, 38], "faster": [12, 13, 29, 42], "300": [12, 13, 43, 49], "x_gt": [12, 13, 19, 21, 97, 99, 163], "x_model": [12, 13, 19, 21], "compute_metr": [12, 13, 19, 21, 97, 99, 163], "gt": [12, 13, 19, 21, 36, 37], "recon": [12, 13, 19, 21, 26, 36, 37], "306": [12, 14, 55], "demo_tv_minimis": [12, 14, 55], "blur": [13, 20, 23, 25, 35, 40, 124, 126, 131, 135, 138, 148], "regnam": [13, 39, 48, 50, 97, 102, 107, 109, 110, 113, 117], "cost_wv": 13, "x_wv": 13, "cost_wv_prox": 13, "1830": 13, "induc": 13, "clamp": 13, "valid": [13, 45, 51, 98, 109, 124, 125, 131, 138], "139": [13, 16, 26, 36], "68e": 13, "60": [13, 16, 24, 25, 26, 29, 30, 35, 36, 37, 38, 39, 40], "92": [13, 16, 26, 29, 35, 36, 37], "826": [13, 14, 55], "demo_wavelet_prior": [13, 14, 55], "52": [14, 16, 26, 29, 32, 35, 36, 37, 40], "825": 14, "whole": [15, 16, 30, 31, 32, 82, 93, 154], "either": [15, 45, 46, 48, 50, 52, 58, 80, 83, 90, 94, 95, 97, 114, 115, 165, 166, 172], "sim": [15, 26, 27, 60, 67, 70, 71, 72, 83, 127, 132, 140, 145, 146, 156, 159], "white": [15, 25, 26, 125, 126, 131, 135], "math": [15, 19, 20, 25, 37, 38, 69, 98, 109, 111], "default": [15, 18, 20, 45, 46, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 78, 80, 81, 84, 86, 87, 88, 89, 90, 91, 92, 94, 95, 97, 98, 99, 100, 105, 108, 109, 110, 112, 114, 115, 116, 117, 118, 135, 138, 139, 145, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 172, 174], "pretrain": [15, 16, 18, 19, 20, 21, 24, 25, 27, 29, 30, 31, 32, 35, 40, 46, 54, 74, 78, 80, 81, 82, 84, 88, 89, 90, 150, 152, 158], "mixtur": [15, 16, 45, 82, 96], "estimt": 15, "mio": [15, 45], "extract": [15, 16, 32, 36], "bsds500": [15, 45, 82], "estim": [15, 16, 19, 25, 26, 32, 45, 48, 70, 71, 72, 74, 80, 82, 96, 105, 108, 116, 117, 118, 119, 129, 133, 135, 152, 154, 156, 157, 168], "gmm": [15, 16, 45, 82, 96], "includ": [15, 51, 58, 81, 96], "test_img": [15, 16], "patch_siz": [15, 16, 57, 82, 88, 90, 106], "model_epl": [15, 16], "gmm_bsds_color": 15, "pt": [15, 16, 26, 29, 82, 88], "7m": [15, 20, 29, 40], "83m": 15, "1mb": [15, 20], "0m": [15, 29, 40], "106mb": 15, "133mb": 15, "25": [15, 16, 23, 25, 26, 29, 31, 32, 36, 37, 38, 41, 45, 55, 90, 152], "255": [15, 25, 26, 27, 45, 90], "observ": [15, 16, 47, 65, 82, 98, 105, 116, 118, 135, 139], "choic": [15, 16, 47, 48, 70, 71, 72, 82], "beta": [15, 25, 26, 29, 35, 36, 37, 38, 39, 40, 48, 82, 105, 108, 116, 117, 118, 133, 151, 152], "half": [15, 16, 18, 29, 35, 82, 115, 120, 152, 165, 166], "quadrat": [15, 16, 18, 29, 35, 82, 115, 120, 152, 165, 166], "split": [15, 16, 18, 29, 35, 39, 40, 48, 50, 58, 64, 66, 68, 82, 91, 92, 100, 105, 115, 117, 118, 120, 152, 165, 166], "hyperparamet": [15, 23, 26, 27, 36, 37, 47, 48, 70, 94, 95, 129, 135, 150, 151, 152], "chosen": [15, 21, 25, 35, 40, 58, 67, 83, 90, 97, 135, 136, 158], "seper": 15, "x_out": 15, "5000": [15, 98, 103], "psnr_ob": 15, "psnr_recon": 15, "clip": [15, 16, 23, 26, 141, 153, 154, 155, 156, 158, 172], "82": [15, 16, 20, 26, 29, 36, 39, 40], "constant": [15, 26, 35, 44, 70, 71, 72, 91, 92, 104, 123, 133, 135, 136, 151, 154, 155, 156], "grid": [15, 16, 142, 161, 172], "search": [15, 16], "160": [15, 16, 26], "320": [15, 20, 22, 55, 137], "95": [15, 16, 26, 29, 36, 38], "959": [15, 17, 55], "demo_epl": [15, 17, 55], "mathrm": [16, 159], "discret": [16, 127, 137], "equispac": 16, "eq": [16, 48, 50, 83, 97], "min_prob": [16, 48, 50, 97], "datafid": [16, 47, 48, 50, 52, 97, 98, 101, 103, 104, 108], "regularizi": 16, "explicitli": 16, "p_i": [16, 106], "wa": [16, 26, 76, 77, 81, 89, 90, 155], "p_": [16, 23, 27, 51, 111, 159], "densiti": [16, 108], "priori": 16, "possibli": [16, 23, 44, 65, 133, 154], "contrast": 16, "zoran": [16, 82], "weiss": [16, 82], "aris": [16, 50], "simpli": [16, 25, 26, 37, 46, 49, 147, 149], "refer": [16, 25, 45, 47, 50, 60, 136, 168], "normal": [16, 25, 26, 36, 37, 73, 81, 88, 90, 91, 92, 103, 104, 108, 111, 135, 136, 141, 159, 168], "flow": [16, 88, 159], "veri": [16, 26], "neg": [16, 27, 51, 82, 88, 96, 104, 106, 108, 141, 154, 155, 156], "probail": 16, "push": [16, 159], "distribut": [16, 23, 24, 27, 32, 47, 51, 82, 111, 130, 134, 150, 151, 152, 153, 154, 155, 156, 159], "under": [16, 36, 37, 50], "invert": [16, 88, 116, 117, 118], "patchdataset": 16, "train_normalizing_flow": 16, "logpoissonnois": [16, 104], "logpoissonlikelihood": 16, "patchprior": 16, "load_torch_url": 16, "tqdm": [16, 25, 26], "lodopab": [16, 136], "ct_toi": 16, "ct_small": 16, "train_img": 16, "hidden": [16, 45, 80, 88, 90], "neuron": [16, 88], "subnetwork": [16, 88], "compon": [16, 26, 82, 96], "fit": [16, 96], "patchnr_subnets": 16, "patchnr_epoch": 16, "patchnr_batch_s": 16, "patchnr_learning_r": 16, "epll_num_compon": 16, "epll_max_it": 16, "epll_batch_s": 16, "10000": 16, "retrain": 16, "just": [16, 130], "On": [16, 50], "coupl": 16, "model_patchnr": 16, "sub_net_s": [16, 88], "patchnr_dataload": 16, "drop_last": 16, "normalizing_flow": [16, 88], "n_compon": [16, 82, 96], "epll_dataload": 16, "patchnr_lodopab_smal": [16, 88], "gmm_lodopab_smal": [16, 82], "patchnr_prior": 16, "epll_prior": 16, "negative_log_likelihood": [16, 82], "drive": 16, "uc": 16, "export": 16, "1z2us9zhjdgolu6r1jee0s2bbej2xv5": 16, "739k": 16, "71": [16, 24, 26, 29, 35, 36, 39, 40], "528k": 16, "10mb": 16, "56mb": 16, "6k": 16, "depend": [16, 23, 47, 48, 52, 80, 97, 152, 154], "domain": [16, 36, 37, 76], "suggest": [16, 25, 26, 54, 100], "Then": [16, 83], "mu": [16, 96, 104, 136], "362": 16, "n0": [16, 104, 136], "num_angl": 16, "linspac": [16, 24, 25, 26, 144, 150], "fbp": 16, "optim_step": 16, "200": [16, 19, 26, 36, 37, 39, 82], "lr_variational_problem": 16, "minimize_variational_problem": 16, "lam": 16, "progress_bar": 16, "zero_grad": 16, "set_descript": 16, "final": [16, 78, 80, 81, 84, 89, 90], "both": [16, 36, 37, 38, 45, 143, 144], "roughli": 16, "choosen": 16, "fine": 16, "tune": 16, "lam_patchnr": 16, "120": [16, 26, 36], "lam_epl": 16, "recon_patchnr": 16, "recon_epl": 16, "psnr_fbp": 16, "psnr_patchnr": 16, "psnr_epll": 16, "58it": [16, 27, 36, 38, 39], "87it": [16, 30, 36], "90it": [16, 30, 36], "94it": [16, 36], "26it": [16, 29, 38], "09": [16, 26, 29, 30, 33, 35, 36, 37, 55, 59], "05it": [16, 24, 29, 31, 36, 37], "11it": [16, 29, 36, 37], "34": [16, 26, 29, 33, 35, 36, 40, 55], "04it": [16, 36, 37, 39, 40], "41": [16, 26, 29, 35, 36, 39], "42": [16, 26, 29, 32, 35, 36], "12it": [16, 29, 30, 36, 37, 38], "51": [16, 26, 27, 29, 35, 36, 62], "10it": [16, 29, 36, 37], "07it": [16, 29, 36, 37], "57": [16, 19, 20, 25, 26, 29, 35, 36, 39], "08it": [16, 29, 30, 36, 37], "69": [16, 26, 29, 35, 36, 40], "13it": [16, 36, 37], "88it": [16, 36], "73": [16, 20, 25, 26, 29, 35, 36, 40], "93it": [16, 30], "76": [16, 26, 29, 36, 37, 39, 40], "95it": [16, 29, 31, 36, 37], "96it": [16, 24, 29, 36, 40], "79": [16, 26, 29, 31, 32, 35, 36, 40], "97it": [16, 29, 36, 37, 39], "81": [16, 24, 26, 29, 35, 36], "83": [16, 25, 26, 31, 35, 36], "84": [16, 26, 29, 35, 36, 37, 40], "85": [16, 26, 29, 35, 36, 38, 150], "87": [16, 19, 25, 26, 36, 40], "89": [16, 20, 26, 29, 32, 35, 36], "91it": [16, 30, 36], "93": [16, 25, 26, 29, 35, 36], "00it": [16, 29, 36, 37], "97": [16, 18, 25, 26, 27, 29, 30, 35, 36, 40], "98": [16, 20, 26, 29, 30, 35, 36], "101": [16, 26], "102": [16, 20, 26, 36], "104": [16, 26, 40], "105": [16, 26, 36], "109": [16, 26, 36, 40], "110": [16, 26, 36], "111": [16, 26, 36], "112": [16, 26, 36], "113": [16, 26], "115": [16, 26, 36], "116": [16, 26], "117": [16, 26, 36], "118": [16, 26, 36], "09it": [16, 29, 30, 35, 36, 37, 38], "119": [16, 26], "121": [16, 25, 26, 36], "122": [16, 25, 26], "123": [16, 26, 36], "124": [16, 26, 36], "125": [16, 25, 26], "126": [16, 26, 36], "127": [16, 26, 36], "129": [16, 26, 36], "130": [16, 26, 36, 40], "131": [16, 26], "132": [16, 26, 36], "135": [16, 18, 26, 36], "136": [16, 26, 30, 33, 36, 55], "137": [16, 26], "138": [16, 26, 36], "140": [16, 26, 36], "23it": [16, 26, 36, 37], "141": [16, 26, 36], "142": [16, 26, 36], "143": [16, 26, 36], "144": [16, 26, 36], "145": [16, 26, 36], "146": [16, 26], "147": [16, 26, 36], "148": [16, 26], "22it": [16, 26, 29, 36], "149": [16, 26, 36], "150": [16, 26, 29, 36], "151": [16, 26, 36], "152": [16, 26, 36], "153": [16, 26, 36], "154": [16, 26, 36, 40], "155": [16, 26, 36], "156": [16, 26, 36], "157": [16, 26], "158": [16, 26, 36, 91, 92], "159": [16, 26, 36], "161": [16, 26, 36], "162": [16, 26, 36], "163": [16, 26, 36], "164": [16, 26, 35, 36], "165": [16, 26, 36], "166": [16, 26, 36], "167": [16, 26, 36], "168": [16, 26, 36], "27it": [16, 29, 35, 36, 38], "169": [16, 26, 36], "170": [16, 26], "171": [16, 26, 36, 40], "172": [16, 26, 36], "173": [16, 26, 40], "174": [16, 26, 35, 36], "175": [16, 26, 36], "176": [16, 26], "177": [16, 26, 36], "178": [16, 26, 36], "86it": [16, 29, 30, 36], "179": [16, 26, 36, 40], "180": [16, 26, 36, 90, 144], "99it": [16, 36], "182": [16, 26, 35, 36], "183": [16, 26, 36], "184": [16, 26, 36], "185": [16, 26, 35, 36], "186": [16, 26, 36], "17it": [16, 26, 29, 30, 36, 37], "187": [16, 26, 35, 36], "188": [16, 26, 36, 40], "189": [16, 26, 36], "190": [16, 26, 36], "191": [16, 26, 36], "192": [16, 26, 36], "193": [16, 26, 36], "194": [16, 26, 36, 40], "195": [16, 26, 36], "196": [16, 26, 36], "197": [16, 26, 36], "198": [16, 26, 36], "199": [16, 26, 36], "61it": [16, 36, 38, 39], "55it": [16, 36, 38, 39], "89it": [16, 24, 30, 31, 36, 40], "44it": [16, 35, 36, 37, 38], "33it": [16, 29, 36, 37], "72it": [16, 24, 25, 36, 38, 39], "45it": [16, 30, 35, 36, 37, 38], "69it": [16, 24, 25, 32, 36, 38, 39], "39it": [16, 35, 36, 37, 38], "753": [16, 17, 55], "demo_patch_priors_ct": [16, 17, 55], "712": 17, "patch": [17, 43, 55, 57, 82, 88, 90, 98, 104, 106, 109, 129, 130, 132, 134, 135, 136, 139, 144, 159, 168, 170, 172], "zuo": 18, "gu": 18, "proceed": 18, "ieee": [18, 38, 63, 67, 70, 71, 72, 76, 92, 133, 142], "confer": [18, 20], "vision": 18, "recognit": 18, "pp": [18, 91, 92], "3929": 18, "3938": 18, "drunet": [18, 24, 35, 40, 45, 46, 84, 150, 152], "get_dpir_param": 18, "87mib": 18, "hdf5": [18, 20, 35, 36, 37, 43, 56], "folder": [18, 20, 35, 36, 37, 56, 58], "dir": [18, 20, 43], "dinv_dataset0": [18, 20], "h5": [18, 20, 43], "hq": [18, 29, 35, 48, 115, 120, 152, 163, 165, 166], "altern": [18, 21, 25, 26, 105, 116], "do": [18, 45, 94, 97, 109], "plot_only_first_batch": [18, 20, 157], "By": [18, 20, 60, 64, 65, 66, 68, 69, 97, 98, 105, 108, 109, 110, 135, 138, 139, 154, 155, 156, 161], "563682556152344": 18, "96754264831543": 18, "946": [18, 22, 55], "demo_pnp_dpir_deblur": [18, 22, 55], "camera": [19, 45, 143], "dncnn": [19, 21, 27, 29, 35, 40, 45], "optim_iter": [19, 36, 37, 38, 39, 97, 99, 115, 116, 117, 118, 119, 120, 121, 164, 165, 166], "optimiter": [19, 97, 115, 116, 117, 118, 119, 120, 121, 165, 166], "definit": [19, 26], "subclass": [19, 38, 59, 63, 75, 77, 85, 86, 87, 89], "v_k": 19, "x_k": [19, 27, 36, 37, 39, 48, 50, 52, 97, 99, 105, 116, 117, 119, 120, 121, 156, 164], "z_k": [19, 27, 39, 48, 50, 52, 97, 105, 116, 117, 118, 164], "u_k": [19, 39, 50, 99, 117, 120, 121], "2x_": [19, 39], "fenchel": [19, 117], "legendr": [19, 117], "conjug": [19, 98, 109, 117, 122, 127, 131, 135, 144, 167], "cviter": 19, "g_step": [19, 29, 35, 36, 37, 38, 39, 40], "gstepcv": 19, "f_step": [19, 29, 35, 36, 37, 38, 39, 40], "fstepcv": 19, "cur_data_fidel": [19, 38, 99, 105, 116, 117, 118, 119], "cur_prior": [19, 38, 99, 105, 116, 117, 118, 119], "cur_param": [19, 99, 105, 116, 117, 118, 119], "param": [19, 20, 23, 38, 99, 154], "dict": [19, 29, 97, 99, 105, 115, 116, 117, 118, 119, 157, 158, 163, 165, 166, 173, 174], "datafidel": [19, 38, 48, 51, 97, 99, 100, 101, 103, 104, 105, 108, 109, 115, 116, 117, 118, 119, 151, 152, 154, 155, 156, 165, 166], "relat": [19, 36, 37], "interest": [19, 25, 97], "updat": [19, 20, 25, 26, 38, 39, 42, 48, 97, 99, 105, 116, 117, 118, 119, 158], "z_prev": 19, "f_fn": [19, 97, 105, 115, 165, 166], "has_cost": [19, 97, 105], "reli": [19, 45, 48, 109, 135], "u_": [19, 39, 50, 99, 116, 117, 118, 120, 121], "moreau": [19, 51, 98, 109, 111, 120], "phyic": 19, "2ax_": 19, "kei": [19, 26, 48, 90, 97, 164], "prox_d_conjug": [19, 98], "gamma": [19, 25, 31, 32, 36, 37, 50, 66, 71, 72, 92, 94, 97, 98, 100, 101, 102, 103, 107, 108, 109, 112, 113, 114, 116, 118, 119, 120, 121, 129, 131, 135, 140, 141, 164], "barbara": 19, "jpeg": 19, "resize_mod": [19, 21, 170], "resiz": [19, 21, 29, 170], "single_pixel": 19, "frequenc": [19, 158], "condatvu": 19, "881": [19, 22, 55], "demo_pnp_custom_optim": [19, 22, 55], "plug": [20, 22, 23, 26, 27, 40, 45, 50, 54, 55, 92, 107, 152, 155, 156, 173], "gspnp": 20, "hurault": [20, 54], "leclair": 20, "papadaki": 20, "plai": [20, 22, 23, 27, 40, 45, 50, 54, 55, 92, 107, 152, 155, 156, 173], "represent": 20, "get_gspnp_param": 20, "kernels_12": 20, "down": 20, "standart": [20, 21, 115], "solv": [20, 25, 26, 35, 39, 50, 52, 54, 79, 91, 92, 97, 99, 117, 122], "use_bicubic_init": 20, "bicub": [20, 131, 138, 161], "necessarili": [20, 105], "thu": [20, 38, 79, 94, 95, 137, 154, 155, 156], "denoiser_nam": 20, "gsdrunet": [20, 45], "intermedi": [20, 75, 93], "finish": [20, 23, 24, 27, 105], "custom_output": [20, 38], "get_output": [20, 38, 97], "gradientstep": 20, "gsdrunet_torch": 20, "9m": [20, 29], "512k": 20, "20mb": 20, "14m": [20, 31, 32], "0mb": [20, 31], "5m": [20, 26, 29, 40], "6m": [20, 26, 29], "8mb": [20, 26, 32], "4m": [20, 29], "4mb": [20, 21, 30], "105mb": 20, "111mb": 20, "16e": 20, "84e": 20, "26e": 20, "255968729654949": 20, "5749010239002867": 20, "0601496696472168": 20, "1836217893424801": 20, "demo_red_gspnp_sr": [20, 22, 55], "shepplogan": 21, "circl": [21, 38, 144], "dncnn_sigma2_grai": 21, "55m": 21, "560k": 21, "69mb": 21, "717": [21, 22, 55], "demo_vanilla_pnp": [21, 22, 55], "863": 22, "unadjust": [23, 27, 51, 155, 156], "langevin": [23, 27, 54, 155, 156], "preconula": 23, "advantag": 23, "acceler": [23, 29, 35, 77, 97, 99, 137, 155, 163], "5x5": [23, 25], "box": [23, 154, 155, 156], "001": [23, 61, 62, 71, 72, 98, 109, 135, 139, 154, 155, 156, 159], "order": [23, 24, 25, 26, 60, 73, 91, 135, 143, 150], "markov": [23, 154, 155, 156], "previou": [23, 25, 46, 97, 99, 116, 117, 118, 154], "next": [23, 25, 45, 99], "account": [23, 42, 44, 78], "usv": 23, "modifi": [23, 46], "eta": [23, 26, 27, 67, 97, 135, 139, 150, 151, 155, 156], "ax_": 23, "alpha": [23, 25, 26, 27, 67, 80, 84, 151, 152, 154, 155, 156], "nabla": [23, 27, 37, 48, 50, 51, 91, 92, 109, 110, 111, 112, 119, 121, 156], "sqrt": [23, 24, 25, 26, 27, 37, 91, 92, 127, 143, 151, 152, 156, 168], "eta_0": 23, "vrv": 23, "diagon": [23, 62, 134], "entri": [23, 48, 70, 71, 72, 96, 127, 134, 135, 139, 143, 156], "s_": 23, "issu": [23, 42, 54], "algebra": 23, "product": [23, 62], "effici": [23, 49, 127, 129, 135, 139, 143, 144], "trivial": [23, 124, 133, 134], "thei": [23, 37, 44, 45, 46, 52, 97, 109, 150], "matric": [23, 96], "pulaiter": 23, "noise_std": 23, "x_bar": 23, "y_bar": 23, "u_adjoint": [23, 129], "pow": 23, "randn_lik": [23, 25, 26, 62], "sigma2_nois": 23, "lhood": 23, "lprior": 23, "montecarlo": [23, 153, 155, 156], "care": [23, 59, 63, 75, 77, 85, 86, 87, 89, 152], "procedur": [23, 39, 93], "calcul": [23, 98, 102, 109, 110, 113], "varianc": [23, 24, 25, 27, 51, 153, 154, 155, 156], "thin": [23, 153, 154, 155, 156], "burnin": [23, 153], "interfac": [23, 48], "user": [23, 48, 50, 52, 58, 78, 80, 81, 84, 89, 90, 115, 130, 138, 165, 166], "1e3": [23, 154], "burnin_ratio": [23, 153, 154, 155, 156], "score": [23, 26, 27, 111], "scoreprior": [23, 27, 51, 154, 155, 156], "sigma_d": 23, "approx": [23, 26, 27, 47, 62], "left": [23, 25, 27, 30, 32, 51, 52, 70, 71, 72, 100, 111, 114, 135, 139, 152, 156, 163], "right": [23, 25, 27, 30, 32, 51, 52, 70, 71, 72, 100, 111, 135, 139, 152, 156, 163], "median": [23, 85], "control": [23, 25, 27, 44, 47, 70, 93, 151, 156], "strength": [23, 27, 136], "medianfilt": 23, "1e2": 23, "pula": 23, "posterior": [23, 24, 26, 27, 51, 150, 151, 152, 154, 155, 156], "compar": [23, 24, 27, 163], "signific": [23, 42], "evid": 23, "easi": [23, 54], "wherea": [23, 25, 26, 127, 143, 148], "ula_mean": 23, "ula_var": 23, "pula_mean": 23, "pula_var": 23, "464": 23, "48it": [23, 35, 36, 38], "mont": [23, 27, 45, 70, 71, 72, 83, 153, 154, 155, 156], "carlo": [23, 27, 45, 70, 71, 72, 83, 153, 154, 155, 156], "415": 23, "309": [23, 28, 35, 55], "demo_custom_kernel": [23, 28, 55], "arxiv": [24, 60, 61, 62, 65, 74, 81, 83, 86, 87, 127, 131, 150, 151, 152, 155, 156], "pdf": [24, 60, 74], "2209": [24, 151], "11888": 24, "known": [24, 101, 104], "variou": [24, 32, 45, 51], "diff": 24, "etab": [24, 150], "ab": [24, 25, 27, 61, 62, 65, 81, 83, 86, 87, 99, 127, 131, 143, 150, 151, 152, 155, 156], "sum": [24, 26, 27, 37, 48, 50, 105, 106, 143, 167], "give": 24, "diffusionsampl": [24, 51], "fulli": [24, 29, 30, 31, 32, 75, 93], "fledg": 24, "var": [24, 27, 154], "std": [24, 27], "dev": [24, 27], "55e": 24, "618": [24, 28, 55], "demo_ddrm": [24, 28, 55], "tutori": [25, 26, 52, 163], "revisit": 25, "zhou": 25, "butterfli": [25, 26], "best": [25, 26, 31, 32, 67], "256x256": [25, 26], "x_true": [25, 26], "sigma_nois": 25, "revers": [25, 26], "decreas": [25, 26, 96, 97, 150, 151, 152], "mathbf": [25, 26, 151, 152], "_t": [25, 26, 151, 152], "overlin": [25, 26, 151, 152], "rho_t": [25, 152], "varepsilon": [25, 26, 151, 152], "zeta": [25, 152], "amount": [25, 47, 156], "poissonlikelihood": 25, "leq": [25, 100, 117, 121], "posit": [25, 32, 48, 71, 72, 90, 108, 141], "detail": [25, 26, 39, 45, 50, 52, 61, 62, 66, 71, 72, 78, 80, 81, 82, 84, 89, 90, 91, 92, 95, 97, 114, 115, 122, 136, 157, 158, 161, 163, 165, 166], "later": [25, 26], "section": [25, 50], "condit": [25, 30, 80, 152], "author": [25, 26, 45, 67, 80, 90], "ho": [25, 45, 80], "diffunet": [25, 26, 45], "large_model": [25, 26, 80], "befor": [25, 26, 39, 62, 79, 90, 99, 115, 141, 165, 166, 174], "being": 25, "abl": [25, 26], "timestep": [25, 26, 80, 151, 152], "dure": [25, 26, 38, 93, 97, 145], "get_alpha": 25, "beta_start": [25, 26, 80, 152], "beta_end": [25, 26, 80, 152], "num_train_timestep": [25, 26, 80, 152], "float32": [25, 26, 29, 35, 36, 37, 39, 40, 80, 127, 143, 144], "alphas_cumprod": 25, "cumprod": [25, 26], "demo_diffpir": [25, 28, 55], "sigma_t": [25, 26], "find_nearest": [25, 80, 152], "arrai": [25, 80, 150, 152], "asarrai": 25, "idx": 25, "argmin": [25, 80, 100, 101, 103, 152], "arbitrari": [25, 26, 94], "x_noisi": 25, "den": 25, "librari": [25, 35, 36, 37, 38, 40, 42, 76, 88, 158], "meaning": 25, "y_denois": 25, "carefulli": 25, "simplic": [25, 35, 40], "x_prox": [25, 49], "last": [25, 99, 134], "firstli": 25, "effect": [25, 82, 106, 161], "residu": [25, 26, 75, 90, 93, 97, 154], "assum": [25, 26, 60, 80, 100, 126, 155, 156], "usual": [25, 26, 50], "why": [25, 26], "rescal": [25, 26, 172], "x_prox_scal": 25, "y_scale": 25, "t_i": 25, "ep": [25, 30, 31, 32, 59], "notic": [25, 100], "secondli": 25, "combin": [25, 45, 46, 152], "x_sampled_sc": 25, "x_sampl": 25, "appropri": [25, 83, 94, 103], "diffusion_step": 25, "seq": [25, 26], "rcparam": 25, "font": 25, "xlabel": 25, "ylabel": 25, "eventu": 25, "no_grad": [25, 60], "curr_sigma": 25, "x0": [25, 26, 38, 135], "next_sigma": 25, "t_im1": 25, "76it": [25, 36], "468": [25, 28, 55], "introduc": [26, 76, 77, 81, 89, 90, 155], "chung": 26, "visual": [26, 35, 36, 37, 38, 40, 157, 158], "progress": [26, 79, 96, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159], "addition": [26, 161], "addit": [26, 48, 49, 50, 61, 67, 78, 84, 97, 103, 115, 165, 166], "awgn": 26, "pixelwis": [26, 134], "pre": [26, 52], "name": [26, 39, 95, 114, 115, 165, 166], "ffhq": [26, 45, 80], "human": 26, "face": 26, "nevertheless": 26, "suffici": [26, 30, 97], "diffusion_ffhq_10m": 26, "357m": 26, "576k": 26, "85mb": 26, "10m": 26, "102mb": 26, "2m": [26, 29, 30], "113mb": 26, "119mb": 26, "1m": [26, 29, 39, 40], "123mb": 26, "125mb": 26, "127mb": 26, "108m": 26, "128mb": 26, "120m": [26, 29], "129mb": 26, "133m": 26, "130mb": 26, "145m": 26, "158m": 26, "170m": 26, "183m": 26, "131mb": 26, "196m": 26, "208m": 26, "221m": 26, "233m": 26, "246m": 26, "258m": 26, "271m": 26, "283m": 26, "296m": 26, "308m": 26, "321m": [26, 29], "333m": 26, "346m": 26, "beta_t": 26, "beta_": 26, "rm": 26, "alpha_t": 26, "bar": [26, 152], "prod_": 26, "alpha_j": 26, "alwai": [26, 48, 143], "hereaft": 26, "_0": 26, "reparametr": 26, "trick": [26, 159], "get_beta": 26, "retriev": 26, "compute_alpha": 26, "index_select": 26, "nabla_": [26, 103, 151], "a_t": [26, 151], "b_t": [26, 151], "tild": [26, 125, 127, 129, 131, 134, 135, 138, 139, 141, 144, 151], "q": [26, 99], "sigmat": 26, "xt": 26, "x0_t": 26, "bay": 26, "rule": [26, 97], "former": [26, 46, 59, 63, 75, 77, 85, 86, 87, 89], "tweedi": [26, 27, 51, 111], "formula": [26, 27, 51, 98, 109, 111, 127, 131, 135, 139, 144], "latter": [26, 58, 59, 63, 75, 77, 85, 86, 87, 89], "intract": 26, "theorem": [26, 52, 163], "remark": 26, "hat": [26, 30, 60, 65, 67, 73], "sigma_i": [26, 148], "differenti": [26, 48, 50, 60, 98, 108, 109, 110, 117, 135, 151, 155, 156], "enable_grad": 26, "grad_ll": 26, "autograd": 26, "grad": [26, 98, 103, 109, 110, 113], "visit": 26, "everi": [26, 59, 63, 75, 77, 79, 85, 86, 87, 89, 158], "backpropag": [26, 61, 62, 76], "ddpm": 26, "im": 26, "There": [26, 32, 104], "caveat": 26, "ancestr": 26, "ddim": [26, 151], "sampler": [26, 51, 153, 154, 155, 156], "One": 26, "freeli": 26, "nfe": 26, "advis": 26, "actual": [26, 105], "static": [26, 91, 92, 94], "ell_2": [26, 39, 73, 98, 100, 101, 103, 135], "simeq": 26, "With": 26, "mind": 26, "num_step": 26, "skip": [26, 93], "seq_next": 26, "time_pair": 26, "x_t": [26, 152], "x0_pred": 26, "next_t": 26, "at_next": 26, "call": [26, 49, 50, 51, 52, 59, 63, 75, 77, 82, 85, 86, 87, 89, 92, 99, 105, 135, 147, 149, 157, 158, 159], "aux_x": 26, "option": [26, 48, 93, 97, 99, 108, 124, 125, 131, 138, 143, 157, 163, 170], "l2_loss": 26, "norm_grad": 26, "sigma_tild": 26, "c2": 26, "xt_next": 26, "append": [26, 167], "19it": [26, 29, 36, 37], "380": [26, 28, 55], "demo_dp": [26, 28, 55], "quantifi": 27, "bayesian": 27, "propto": [27, 51, 111], "point": [27, 35, 42, 46, 48, 50, 52, 61, 96, 97, 98, 99, 100, 103, 105, 135, 163], "role": 27, "fnejacobianspectralnorm": 27, "make": [27, 42, 45, 94, 158], "firmli": 27, "expans": 27, "nonexpans": [27, 45, 61], "help": [27, 42], "stabil": [27, 159], "download_lipschitz": [27, 81], "dncnn_sigma2_lipschitz_color": 27, "56m": 27, "496k": 27, "02mb": 27, "9mb": 27, "5e3": 27, "35it": [27, 29, 30, 35, 36, 37, 38], "823": [27, 28, 55], "demo_sampl": [27, 28, 55], "597": 28, "present": [29, 30, 31], "beyond": 29, "subset": [29, 31, 32, 134], "coil": [29, 137], "fastmri": 29, "973": 29, "320x320": 29, "fastmri_knee_singlecoil": 29, "399m": 29, "370k": 29, "70mib": 29, "66m": 29, "0mib": [29, 39], "2mib": [29, 40], "4mib": [29, 40], "7mib": [29, 39, 40], "1mib": [29, 40], "104m": 29, "112m": 29, "128m": 29, "136m": 29, "143m": 29, "5mib": [29, 40], "151m": 29, "6mib": 29, "159m": 29, "166m": 29, "174m": 29, "182m": 29, "189m": 29, "197m": 29, "205m": 29, "213m": 29, "220m": 29, "228m": 29, "236m": 29, "244m": 29, "251m": 29, "259m": 29, "267m": 29, "275m": 29, "282m": 29, "290m": 29, "298m": 29, "306m": 29, "313m": 29, "329m": 29, "337m": 29, "344m": 29, "352m": 29, "360m": 29, "368m": 29, "376m": 29, "383m": 29, "391m": 29, "mri_mask_128x128": 29, "900": 29, "demo_equivariant_imag": [29, 33, 55], "85it": [29, 36, 38], "254": 29, "tabl": [29, 36, 37, 42, 47], "wrap": [29, 35, 36, 37, 40, 45, 76], "scheme": [29, 30], "mc": [29, 30, 83], "ei": [29, 60], "group": [29, 45, 60, 83], "rotat": [29, 30, 45, 60, 83, 148], "acquisit": [29, 49, 97, 135, 139, 143, 154, 155, 156], "translat": [29, 60, 162], "scratch": [29, 30, 31, 32], "mcloss": [29, 30], "eiloss": 29, "new_demo_ei_ckp_150_v3": 29, "17m": 29, "312k": 29, "12mb": 29, "6mb": [29, 32], "ckp_interv": [29, 30, 158], "187019": 29, "loss_mc": [29, 30], "08e": 29, "loss_ei": 29, "000125": 29, "000146": 29, "51e": 29, "000107": 29, "28e": 29, "62e": 29, "000109": 29, "48e": 29, "000123": 29, "34e": 29, "7e": 29, "00011": 29, "baseunfold": [29, 36, 37, 38, 39, 40, 52, 163, 165, 166], "fixed_point": [29, 35, 36, 37, 38, 39, 40], "fixedpoint": [29, 35, 36, 37, 38, 39, 40, 48, 50, 52, 97, 105, 163], "hqsiter": [29, 35], "fstephq": [29, 35], "gstephq": [29, 35], "init_params_algo": [29, 35, 36, 37, 38, 39, 40], "parameterdict": [29, 35, 36, 37, 38, 39, 40], "type": [29, 35, 36, 37, 38, 39, 40, 83, 84, 127, 144, 171, 175, 176, 177], "parameterlist": [29, 35, 36, 37, 39, 40], "in_conv": [29, 35, 38, 40], "conv_list": [29, 35, 38, 40], "out_conv": [29, 35, 38, 40], "nl_list": [29, 35, 38, 40], "equivariant_imag": 29, "77it": [29, 32, 36, 38], "34it": [29, 35, 36, 38], "24it": [29, 32, 36, 38, 40], "31it": [29, 36, 37, 38], "83it": [29, 36, 38], "380949856483774": 29, "5838229428381259": 29, "388851714460817": 29, "4114611889544526": 29, "413": [29, 33, 55], "y_i": [30, 65], "a_": [30, 65, 127], "g_i": [30, 65], "dot": [30, 65, 95], "approach": [30, 46, 74], "unsupervis": [30, 67, 158], "mnist": [30, 31, 32, 36, 37, 43, 58], "train_base_dataset": [30, 35, 36, 37, 39, 40], "root": [30, 31, 32, 36, 37, 42, 43], "test_base_dataset": [30, 35, 36, 37, 39, 40], "receiv": 30, "number_of_oper": 30, "demo_multioperator_imag": [30, 33, 55], "test_datapoint": [30, 31, 32, 36, 37, 58], "397": 30, "985": 30, "50it": [30, 35, 36, 37, 38], "520": 30, "1001": 30, "516": [30, 35], "929": 30, "79it": [30, 36, 37], "514": 30, "981": 30, "1011": 30, "521": 30, "1013": 30, "519": 30, "1015": 30, "518": [30, 40], "991": 30, "1021": 30, "529": 30, "38it": [30, 35, 36, 37, 38], "988": 30, "artifact": [30, 74, 90, 157, 158], "remov": [30, 50, 74, 134, 157, 158], "phi": [30, 74], "multi": [30, 46, 65], "moi": [30, 65], "necessari": [30, 42, 80, 151, 152], "moiloss": 30, "demo_moi_ckp_10": 30, "360k": [30, 32], "67mb": 30, "34m": 30, "3mb": 30, "2069441": 30, "00024": 30, "loss_moi": 30, "00206": [30, 38], "0023": [30, 38], "000433": 30, "00137": 30, "00181": 30, "000605": 30, "00279": 30, "00339": 30, "000725": 30, "00398": 30, "00471": 30, "00132": 30, "00417": 30, "00549": 30, "00131": 30, "00381": 30, "00512": 30, "00139": 30, "00418": 30, "00557": 30, "00141": 30, "00411": 30, "00552": [30, 38], "00136": 30, "00391": 30, "00528": 30, "00134": 30, "00511": 30, "00645": 30, "0014": 30, "00556": 30, "00155": 30, "00547": 30, "00701": 30, "00161": 30, "00515": 30, "00676": 30, "00672": 30, "00167": 30, "00497": 30, "00664": 30, "00169": 30, "00499": 30, "00177": 30, "00474": 30, "00652": 30, "00466": 30, "00647": 30, "00175": 30, "0048": 30, "00655": 30, "00174": 30, "00483": 30, "00657": 30, "00171": 30, "00493": [30, 39], "00665": 30, "00487": 30, "0018": 30, "00663": 30, "00185": [30, 38], "00477": 30, "00189": [30, 38], "00468": 30, "00184": [30, 38], "00484": 30, "00669": 30, "00505": 30, "00686": 30, "00679": 30, "00182": 30, "00488": 30, "0067": 30, "00183": 30, "00496": 30, "00486": 30, "00192": [30, 38], "00479": 30, "00671": 30, "00199": [30, 38], "00201": [30, 38], "00467": 30, "002": [30, 38], "00459": 30, "00659": 30, "00196": [30, 38], "00457": 30, "00653": 30, "00193": [30, 38], "0068": 30, "0019": 30, "00187": 30, "00673": 30, "00482": 30, "00667": 30, "00485": 30, "00481": 30, "00186": [30, 38], "00205": [30, 38], "00489": 30, "00693": 30, "00202": [30, 38], "00498": 30, "00699": [30, 38], "00203": [30, 38], "00204": [30, 38], "0049": 30, "00694": [30, 38], "0069": 30, "00685": 30, "00478": 30, "batchnorm2d": [30, 31, 32, 93], "momentum": [30, 31, 32, 97, 99, 163], "affin": [30, 31, 32], "track_running_stat": [30, 31, 32], "multioperator_imag": 30, "82it": [30, 36, 38, 40], "050799751281737": 30, "5485068673773368": 30, "103665447235107": 30, "7379694923885824": 30, "correl": 31, "neighbor": [31, 66], "map": [31, 38, 47, 49, 51, 66, 80, 91, 92, 111, 130, 135, 139, 151, 152], "propag": [31, 60, 66], "corrupt": [31, 32], "demo_n2n": 31, "363": 31, "928": 31, "ckp_50_demo_n2n": 31, "424k": 31, "31mb": 31, "444737": [31, 32], "0745": [31, 36], "0695": [31, 36], "0678": 31, "826131057739257": 31, "5348207475459481": 31, "346026992797853": [31, 32], "7863419781551304": [31, 32], "709": [31, 33, 55], "demo_n2n_denois": [31, 33, 55], "knowledg": 32, "about": [32, 44, 45], "unbias": [32, 70, 71, 72], "odot": [32, 71, 72, 133], "bernoulli": [32, 71, 72, 134], "elementwis": [32, 71, 72], "yann": [32, 36], "lecun": [32, 36], "exdb": [32, 36], "idx3": [32, 36], "ubyt": [32, 36], "gz": [32, 36], "raw": [32, 36], "9912422": [32, 36], "109952875": 32, "idx1": [32, 36], "28881": [32, 36], "161299192": 32, "t10k": [32, 36], "1648877": [32, 36], "121750077": 32, "40it": [32, 35, 36, 37, 38], "4542": [32, 36], "39854662": 32, "demo_sur": 32, "439": 32, "918": 32, "surepoissonloss": 32, "suregaussianloss": 32, "surepgloss": 32, "ckp_10_demo_sur": 32, "68mb": 32, "59m": 32, "00219": [32, 38], "0011": 32, "0022": [32, 38], "000707": 32, "000629": 32, "420438003540038": 32, "5207505328858359": 32, "513": [32, 33, 55], "demo_sure_denois": [32, 33, 55], "772": 33, "000": 34, "toi": 35, "larger": [35, 40, 58, 80, 127, 135, 136, 144, 155, 156], "wandb": [35, 38, 40, 157, 158], "gd": [35, 115, 119, 163], "deq_build": [35, 52], "cbsd500": [35, 38, 40], "replac": [35, 38, 40, 50, 52], "demo_deq": [35, 41, 55], "generated_datasets_path": [35, 36, 37, 40], "helper": [35, 40, 115, 165, 166], "anderson_acceleration_forward": 35, "anderson": [35, 97, 99, 163], "pass": [35, 42, 46, 52, 59, 63, 75, 77, 85, 86, 87, 89, 115, 131, 145, 163, 164, 165, 166], "anderson_acceleration_backward": [35, 163], "anderson_history_s": 35, "histori": [35, 97, 99, 163], "anderson_acceler": [35, 97, 99], "history_size_backward": [35, 163], "history_s": [35, 97, 99], "188166": 35, "828": 35, "873": 35, "596": 35, "47it": [35, 36, 38], "886": 35, "532": 35, "803": 35, "703": 35, "751": 35, "685": 35, "643": 35, "613": 35, "846": 35, "759": 35, "689": 35, "612": 35, "463": 35, "46it": [35, 36, 38, 40], "424": 35, "388": 35, "366": 35, "339": 35, "36it": [35, 36], "266": 35, "211": 35, "217": 35, "861": 35, "587": 35, "674": 35, "845": 35, "765": 35, "696": 35, "766": 35, "814": 35, "253": 35, "379": 35, "304": 35, "462": 35, "654": 35, "834": 35, "781": 35, "721": 35, "286": 35, "298": 35, "401": 35, "482": 35, "435": 35, "538": 35, "494": 35, "651": 35, "327": 35, "359": 35, "496": 35, "691": 35, "basedeq": [35, 52, 165], "deq_hq": 35, "666225433349609": 35, "124963760375977": 35, "031": [35, 41, 55], "nutshel": 36, "involv": [36, 91, 92], "learnabl": [36, 37, 39, 50, 52, 90, 93, 164], "mnist_train": [36, 37], "train_test_transform": [36, 37], "220834942": 36, "212518761": 36, "142978941": 36, "38799447": 36, "highli": [36, 37], "10x": [36, 37], "demo_lista": [36, 41, 55], "707": 36, "min_x": [36, 37, 97, 99], "wx": 36, "pgditer": [36, 37, 97, 99], "ax_k": [36, 37], "These": [36, 37, 44, 109, 164], "yield": [36, 37], "sigma_denoiser_init": 36, "loader": [36, 37, 157], "0972": 36, "0676": 36, "0805": [36, 37], "0847": 36, "0845": [36, 37, 134], "0873": 36, "0799": [36, 37], "0764": [36, 37], "0777": [36, 37], "0796": 36, "0807": [36, 37], "0792": [36, 37], "0781": [36, 37], "0824": 36, "0855": 36, "0859": 36, "0836": 36, "0831": 36, "0835": 36, "0815": [36, 37], "0823": [36, 37], "0821": [36, 37], "0783": [36, 37], "0811": [36, 37], "0797": [36, 37], "0802": [36, 37], "0795": [36, 37], "0817": [36, 37], "0813": [36, 37], "0798": [36, 37], "0787": [36, 37], "0778": [36, 37], "077": [36, 37], "0769": 36, "0763": [36, 37], "0768": [36, 37], "0776": [36, 37], "0767": [36, 37], "0773": [36, 37], "0774": [36, 37], "0766": [36, 37], "0762": 36, "0756": [36, 39], "0753": [36, 37], "0739": 36, "0733": [36, 37], "073": 36, "0727": 36, "0723": 36, "0717": 36, "0715": 36, "0712": [36, 130], "0707": 36, "0706": [36, 37], "0704": 36, "0705": 36, "0702": 36, "0696": 36, "0693": 36, "0703": 36, "0699": 36, "0692": 36, "069": [36, 39], "0685": 36, "0694": 36, "0687": 36, "0686": 36, "0682": [36, 37], "068": 36, "0677": 36, "0674": 36, "0671": 36, "0672": 36, "067": 36, "0669": 36, "0668": 36, "0666": 36, "0664": 36, "0663": 36, "0662": 36, "0661": 36, "0659": 36, "0658": 36, "0657": 36, "0656": 36, "0652": 36, "0651": 36, "0903": 36, "0607": 36, "0531": 36, "0466": 36, "0413": 36, "0457": 36, "0456": [36, 39], "0474": 36, "78it": [36, 38], "0478": 36, "0487": 36, "0502": 36, "0504": 36, "0494": 36, "0532": 36, "0529": 36, "0533": 36, "0552": 36, "0571": 36, "0562": 36, "0568": 36, "0564": 36, "0567": 36, "0565": 36, "0574": 36, "0579": 36, "0587": 36, "0575": 36, "0573": 36, "0572": 36, "0566": 36, "0561": 36, "0569": 36, "0576": [36, 39], "0578": [36, 39], "0584": 36, "0585": 36, "0577": 36, "058": 36, "0563": 36, "0559": 36, "0557": 36, "0556": 36, "0558": 36, "0553": 36, "0551": 36, "055": 36, "0554": 36, "0548": 36, "0549": 36, "0546": [36, 39], "0544": 36, "0543": 36, "0542": 36, "0541": 36, "0539": 36, "054": 36, "0538": 36, "0536": 36, "0537": 36, "0534": 36, "053": 36, "0528": 36, "0527": 36, "0525": 36, "0524": 36, "0523": 36, "0649": 36, "0517": 36, "0507": 36, "0514": 36, "0522": [36, 39], "0508": 36, "0492": 36, "0499": 36, "0496": 36, "0515": 36, "051": 36, "052": 36, "0516": 36, "0513": 36, "0521": [36, 39], "0519": [36, 39], "0509": 36, "0506": 36, "0511": 36, "0505": 36, "0501": 36, "0493": 36, "0495": 36, "0498": 36, "0503": 36, "0497": 36, "0491": 36, "0489": 36, "049": 36, "0488": 36, "0485": 36, "0486": 36, "0483": 36, "0401": 36, "0469": 36, "0438": 36, "0432": 36, "044": 36, "0434": 36, "0445": 36, "0468": 36, "045": 36, "0452": 36, "0442": 36, "0459": 36, "0464": 36, "0462": 36, "0465": 36, "0463": 36, "0454": 36, "0458": 36, "0479": [36, 127], "0477": 36, "048": 36, "0475": 36, "0476": 36, "0473": 36, "047": 36, "0482": 36, "0444": 36, "0437": 36, "0414": 36, "0412": 36, "042": 36, "0416": 36, "0418": [36, 137], "0428": 36, "0433": 36, "0443": 36, "0448": 36, "043": 36, "0431": 36, "0435": 36, "0436": 36, "0441": 36, "0455": 36, "046": 36, "0451": 36, "0453": [36, 39], "fsteppgd": [36, 37], "gsteppgd": [36, 37], "2x3": 36, "column": [36, 37, 134, 172], "back": [36, 37, 144], "project": [36, 37, 42, 45, 86, 100, 101, 144, 154, 155, 156], "unfolded_pgd": [36, 37], "537947654724121": 36, "30555534362793": 36, "plot_paramet": [36, 37, 40], "init_param": [36, 37, 40, 174], "734": [36, 41, 55], "demo_licp": 37, "714": 37, "minimis": [37, 97, 116, 117, 118, 119, 120, 121], "smooth": [37, 108], "finit": [37, 91, 92, 112], "tv_smooth": 37, "mse_loss": 37, "reduct": [37, 90], "meth": [37, 39], "share": 37, "0738": 37, "0853": 37, "0782": 37, "0779": 37, "0784": 37, "0794": 37, "0791": 37, "0806": 37, "0803": 37, "0808": 37, "0822": 37, "0819": [37, 128], "083": [37, 40, 41, 55], "0829": 37, "084": 37, "0862": 37, "0854": 37, "0844": 37, "0838": 37, "0826": 37, "0825": 37, "0814": 37, "0809": 37, "0804": 37, "079": 37, "0793": 37, "0714": 37, "0735": 37, "0765": 37, "0771": 37, "0757": 37, "0785": 37, "0775": 37, "0789": 37, "078": 37, "0751": 37, "0754": 37, "0749": 37, "0744": 37, "076": 37, "0772": 37, "17988395690918": 37, "289340972900391": 37, "were": 37, "check": [37, 39, 42, 97, 99, 135, 158], "807": [37, 41, 55], "demo_custom_prior_unfold": [37, 41, 55], "adler": 38, "jona": 38, "ozan": 38, "\u00f6ktem": 38, "transact": [38, 76], "medic": 38, "1322": 38, "1332": 38, "fly": 38, "odl": 38, "odlgroup": 38, "io": [38, 91, 92], "randomphantomdataset": 38, "shepplogandataset": 38, "cpiter": [38, 39], "fstep": [38, 48, 50], "gstep": [38, 48, 50], "pdnet_primalblock": 38, "pdnet_dualblock": 38, "pditer": 38, "directli": [38, 54, 80, 90, 115, 165, 166], "respect": [38, 52, 83, 105], "afterward": [38, 59, 63, 75, 77, 85, 86, 87, 89], "pdnetiter": 38, "gsteppdnet": 38, "fsteppdnet": 38, "Their": 38, "pdnetprior": 38, "pdnetdatafid": 38, "n_iter_train": 38, "1e5": 38, "n_data": 38, "n_primal": 38, "n_dual": 38, "u0": 38, "cosineannealinglr": 38, "t_max": 38, "clean": [38, 40, 67, 124, 125, 127, 129, 131, 134, 138, 139, 144], "random_phantom": 38, "online_measur": [38, 157, 158], "75594": 38, "00236": 38, "00951": 38, "00826": 38, "00626": 38, "00575": 38, "00737": 38, "00674": 38, "00651": 38, "00629": 38, "00609": 38, "00592": 38, "00568": 38, "00533": 38, "00523": 38, "00507": 38, "00197": 38, "00291": 38, "00285": 38, "00315": 38, "0029": 38, "00275": 38, "00276": 38, "00268": 38, "00271": 38, "00267": 38, "00262": 38, "00266": 38, "0026": 38, "00254": 38, "00259": 38, "00249": 38, "00244": 38, "00243": 38, "00218": 38, "00242": 38, "00258": 38, "00241": 38, "00247": 38, "00238": 38, "00234": 38, "00225": 38, "00223": 38, "00222": 38, "00221": 38, "00215": 38, "00213": 38, "00211": 38, "0021": 38, "00207": 38, "00198": 38, "00195": 38, "00248": 38, "00212": 38, "00216": 38, "00191": 38, "00272": 38, "00263": 38, "00239": 38, "00232": 38, "00224": 38, "00214": 38, "00188": 38, "00194": 38, "00209": 38, "00227": 38, "prelu": 38, "num_paramet": 38, "588596343994141": 38, "803513526916504": 38, "demo_learned_primal_du": [38, 41, 55], "reformul": 39, "iota_": [39, 100], "ball": [39, 100, 101], "center": [39, 100, 101, 125, 126, 131, 135], "recal": [39, 52, 83, 164], "convex": [39, 48, 91, 92, 98, 100, 109], "infti": [39, 100, 114], "fashion": [39, 52, 53, 127, 134, 143, 167], "77m": 39, "stepsize_du": [39, 48], "document": [39, 42, 46, 47, 50, 63, 67, 70, 71, 72, 117, 133, 142], "0598": 39, "059": 39, "0679": 39, "0604": 39, "0612": 39, "0623": 39, "0616": 39, "0399": 39, "0333": 39, "032": 39, "0293": 39, "0277": 39, "0278": 39, "0276": 39, "0257": [39, 138], "00329": 39, "0088": 39, "0186": 39, "0163": 39, "014": 39, "0144": 39, "0162": 39, "0168": 39, "0161": 39, "0155": 39, "0121": 39, "0197": 39, "0175": 39, "0102": 39, "00429": 39, "00949": 39, "00972": 39, "00854": 39, "00758": 39, "00726": 39, "00967": 39, "00906": 39, "00933": 39, "00954": 39, "00925": 39, "00942": 39, "0097": 39, "00919": 39, "00985": 39, "fstepcp": 39, "gstepcp": 39, "3x3": [39, 127, 128, 130, 134, 137, 144], "vialis": 39, "correctli": 39, "model_spec": 39, "eval": 39, "481": [39, 41, 55], "demo_unfolded_constrained_lista": [39, 41, 55], "jointli": 40, "gauss": 40, "demo_unfolded_sr": 40, "78m": 40, "88m": 40, "02mib": 40, "dr": [40, 48, 115, 118, 165, 166], "dougla": [40, 115, 118, 165, 166], "rachford": [40, 115, 118, 165, 166], "resp": [40, 50], "lenght": 40, "relax": [40, 48, 50, 84, 91, 92, 105, 116, 117, 118], "188179": 40, "260": 40, "997": 40, "0833": 40, "243": 40, "203": 40, "drsiter": 40, "fstepdr": 40, "gstepdr": 40, "unfolded_dr": 40, "686464786529541": 40, "9960274696350098": 40, "demo_vanilla_unfold": [40, 41, 55], "210": 41, "commun": 42, "driven": 42, "welcom": 42, "ultim": 42, "aim": [42, 50, 52], "comprehens": 42, "acknowledg": 42, "contributor": 42, "taken": [42, 112], "decid": 42, "authorship": 42, "futur": 42, "public": 42, "prefer": 42, "fork": 42, "repositori": [42, 54, 66, 78, 80, 81, 84, 89, 90], "submit": 42, "pull": 42, "request": 42, "pr": 42, "prepar": 42, "pleas": [42, 54], "compliant": 42, "black": [42, 125, 126, 131, 135], "style": 42, "directori": [42, 43, 157, 158, 174], "desir": [42, 58], "chang": [42, 97, 99, 158], "machin": 42, "pytest": 42, "doc": [42, 157, 158], "command": 42, "below": [42, 47], "descript": [42, 91, 92, 114], "html": [42, 91, 92], "noplot": 42, "without": [42, 125, 127, 129, 131, 138, 139, 144], "path": [42, 43, 56, 78, 80, 81, 82, 84, 88, 89, 90, 158, 172, 173, 174], "match": [42, 134, 142, 167], "familiar": 42, "workflow": 42, "open": [42, 54], "tracker": [42, 54], "ask": 42, "question": [42, 54], "discord": [42, 54], "server": [42, 54], "try": [42, 54], "address": 42, "soon": 42, "send": 42, "email": 42, "develop": 42, "idea": 42, "subpackag": 43, "celeba": [43, 58], "transform_data": 43, "data_train": 43, "data_test": 43, "dinv_dataset": [43, 58], "packag": [44, 45, 48, 49, 51, 52, 76], "popular": 44, "especi": 44, "design": [44, 67, 70, 71, 72], "written": [44, 48, 97], "alon": [44, 60], "submodul": 44, "augment": [44, 57, 58, 60, 65], "togeth": 44, "lipschitz": [44, 45, 91, 92, 108, 135, 155, 156], "quick": 45, "block": [45, 46, 78, 84, 86, 87, 88, 90], "standalon": 45, "equivariantdenois": 45, "moment": 45, "vertic": [45, 73, 83, 137], "horizont": [45, 73, 83], "flip": [45, 83, 127], "uniformli": [45, 144, 145], "exact": [45, 125, 127, 129, 131, 135, 138, 144], "statist": [45, 51, 67, 154, 155, 156], "briefli": 45, "summar": [45, 47], "relev": [45, 97, 115, 165, 166], "host": 45, "monoton": 45, "constraint": [45, 154, 155, 156], "firm": [45, 61], "scunet": 45, "synthet": 45, "realist": 45, "artefact": 45, "swinir": 45, "page": 45, "dhariw": 45, "nichol": 45, "imagenet128": [45, 80], "within": [45, 46, 59, 63, 75, 77, 85, 86, 87, 89], "compat": [46, 94], "dataparallel": 46, "distributeddataparallel": 46, "gpu_numb": 46, "device_id": 46, "seamlessli": [46, 167], "loop": [46, 99], "drawback": 46, "reader": [46, 50], "unifi": 47, "xset": [47, 48, 49, 50, 97, 98, 135, 139], "underli": [47, 80, 88], "yset": [47, 48, 49, 50, 97, 98, 135, 139], "often": [47, 48], "forw": [47, 49, 50, 60, 64, 65], "determinist": [47, 49, 135, 139], "captur": [47, 49, 135, 139], "system": [47, 99, 122], "colon": 47, "stochast": [47, 49, 89, 90, 135, 139, 151, 155], "mapsto": [47, 48, 49, 50, 97, 135, 139], "distanc": [47, 48, 97, 98, 101, 103, 104, 108, 109], "enforc": [47, 48, 50, 64, 85, 97], "discrep": [47, 48, 97], "reg": [47, 48, 50, 51, 52, 96, 97, 102, 109, 110, 111, 112, 113, 114], "promot": 47, "plausibl": 47, "collect": [48, 49, 52, 54], "routin": [48, 52], "tag": [48, 90, 97], "datafidnam": [48, 50, 97, 98, 103, 108], "implicitli": [48, 91, 92], "abov": [48, 97, 117], "qquad": [48, 50, 97, 99, 105], "baseoptim": [48, 50, 115, 164], "predefin": [48, 54, 135, 139], "serv": [48, 94], "come": [48, 109, 135], "distancenam": [48, 98, 103, 108, 117], "circ": [48, 63, 135, 139], "tikhonov": [48, 50], "overwritten": [48, 50, 109, 127, 135, 139, 144], "store": [48, 97, 99, 105, 127, 143, 154], "whose": [48, 133, 144, 174], "typic": [48, 51, 111], "enough": 48, "theori": [48, 50, 91, 92], "_g": [48, 50, 52, 105, 164], "appear": 49, "applic": [49, 91, 92], "character": [49, 135, 139], "affect": [49, 58, 100, 135, 139], "x_adj": 49, "x_dagger": [49, 135], "bilinear": [49, 131, 138], "optimis": 50, "read": 50, "denoisernam": [50, 83], "hand": 50, "assumpt": [50, 117, 151], "parametr": 50, "consequ": [50, 136], "encompass": [50, 164], "leverag": [51, 52, 62, 129, 163], "convolv": [51, 111], "posteriori": [51, 111], "yosida": [51, 111], "envelop": [51, 111, 120], "inf_z": [51, 111], "sota": 51, "produc": [51, 135, 139], "mcmc": 51, "_f": [52, 105, 164], "sometim": 52, "builder": 52, "virtual": [52, 60, 163], "infinit": [52, 163], "look": 52, "partial": [52, 101, 163], "star": [52, 163], "incom": [52, 163], "wrapper": 53, "scalar": [53, 73, 133, 158], "similar": [53, 127, 134, 143, 167], "quickli": 53, "framework": [54, 159], "state": 54, "art": 54, "latest": 54, "version": [54, 83, 91, 92, 160, 162, 167], "pick": 54, "join": 54, "convers": 54, "touch": 54, "julian": 54, "tachella": 54, "dongdong": 54, "chen": 54, "samuel": 54, "matthieu": 54, "terri": 54, "995": 55, "bool": [56, 58, 60, 61, 62, 65, 68, 74, 78, 79, 80, 81, 83, 84, 86, 87, 89, 90, 91, 92, 93, 96, 97, 99, 105, 106, 115, 127, 134, 135, 141, 143, 144, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 163, 165, 166, 168, 170, 172, 173, 174], "callabl": [57, 83, 98, 106, 107, 109, 110, 115, 122, 123, 129, 135, 139, 147, 149, 153, 165, 166], "hd5": 58, "hd5dataset": 58, "assign": [58, 138], "evenli": 58, "datapoint": 58, "filenam": 58, "worker": 58, "charbonni": 59, "overridden": [59, 63, 75, 77, 85, 86, 87, 89], "although": [59, 63, 75, 77, 85, 86, 87, 89, 109], "recip": [59, 63, 75, 77, 85, 86, 87, 89], "regist": [59, 63, 75, 77, 85, 86, 87, 89], "hook": [59, 63, 75, 77, 85, 86, 87, 89], "silent": [59, 63, 75, 77, 85, 86, 87, 89], "mseloss": [60, 64, 65, 66, 67, 68, 69], "apply_nois": [60, 65], "invari": [60, 100], "2103": [60, 156], "14756": 60, "t_g": [60, 83], "ell_1": [60, 64, 65, 66, 68, 69, 91, 94, 95, 101, 102], "sensor": [60, 65, 125, 127, 129, 131, 135, 138, 139, 144], "x_net": [60, 64, 65, 69, 70, 71, 72, 73, 158], "tol": [61, 62, 122, 123, 135, 139], "eval_mod": [61, 62], "jacobian": [61, 62, 88, 91, 159], "spectral": [61, 62, 135], "denot": [61, 63, 100, 120, 124, 125, 126, 133], "du": [61, 62], "2012": [61, 62], "13247v2": [61, 62], "jacobianspectralnorm": 61, "toler": [61, 62, 122, 123, 135, 139], "whether": [61, 62, 86, 87, 90, 91, 92, 96, 97, 106, 115, 153, 159, 163, 165, 166, 170, 174], "y_in": 61, "x_in": 61, "args_model": 61, "kwargs_model": 61, "fne": 61, "argument": [61, 82, 97, 99, 104, 115, 164, 165, 166], "kargs_model": 61, "keyword": [61, 99, 164], "df": 62, "usag": [62, 172], "reg_l2": 62, "diag": [62, 127, 129, 134], "largest": [62, 94, 97], "eigenvalu": 62, "regval": 62, "onesid": 63, "ell_p": 63, "_p": 63, "side": 63, "ieeexplor": [63, 67, 70, 71, 72, 133, 142], "abstract": [63, 70, 71, 72, 133, 142], "6418031": 63, "wise": [63, 133], "physics_list": 65, "a_g": 65, "x_i": 65, "2201": [65, 150], "12151": 65, "taohuang2018": 66, "recorrupt": 67, "r2r": 67, "unorgan": 67, "accord": [67, 143], "9577798": 67, "equal": [67, 94, 111, 133, 134, 138, 143, 144, 147, 149], "averagedv": 67, "z_i": 67, "perturb": 67, "split_ratio": 68, "regular_mask": 68, "m_1": 68, "m_2": 68, "inversef": [68, 158], "pubm": 68, "ncbi": 68, "nlm": 68, "nih": 68, "gov": 68, "32614100": 68, "target": 69, "b_i": 70, "geq": [70, 80, 108, 154, 155, 156], "diverg": [70, 71, 72], "4099398": 70, "truli": [70, 71, 72], "noiseless": [70, 71, 72, 80], "sensit": [70, 71, 72], "proport": [70, 71, 72, 94], "tau1": 71, "tau2": 71, "tau_1": 71, "tau_2": 71, "2a": 71, "6714502": [71, 72], "pinv": 74, "ckpt_path": 74, "inspir": [74, 152], "fbpconvnet": 74, "1611": 74, "03679": 74, "dagger": [74, 129], "dim_input": 75, "dim_mid": 75, "dim_hid": 75, "connect": [75, 90, 93], "debug": 75, "prototyp": 75, "featur": [75, 86, 87], "latent": [75, 159], "collabor": 76, "davob": 76, "2007": 76, "unlik": [76, 81, 153], "furthermor": 76, "un": 77, "suit": 77, "tupl": [77, 79, 85, 90, 97, 99, 124, 126, 127, 131, 133, 134, 137, 138, 143, 147, 148, 149, 153, 154, 155, 156, 157, 170, 172], "scale_out": 77, "nc": [78, 84], "512": [78, 84], "nb": [78, 84], "act_mod": [78, 84], "downsample_mod": [78, 84], "strideconv": [78, 84], "upsample_mod": [78, 84], "convtranspos": [78, 84], "like": [78, 91, 96], "encod": 78, "nf": [78, 81, 86, 87], "activ": [78, 81, 84], "leakyrelu": [78, 84, 141], "elu": [78, 84], "softplu": [78, 84], "avgpool": [78, 84], "pool": [78, 84, 85], "pixelsuffl": [78, 84], "upconv": [78, 84], "neighbour": [78, 84], "onlin": [78, 80, 81, 84, 89, 90, 157, 158], "2500": [79, 125], "re_init": 79, "minimiza": 79, "slow": [79, 131], "use_fp16": 80, "attent": [80, 90], "embed": [80, 90], "jychoi118": 80, "ilvr_adm": 80, "handl": [80, 150, 151], "n_1": 80, "n_2": 80, "gb": 80, "357": 80, "convert_to_fp16": 80, "torso": 80, "float16": 80, "convert_to_fp32": 80, "find": [80, 142, 152, 163], "type_t": 80, "noise_level": 80, "tradit": 80, "forward_denois": 80, "divis": 80, "forward_diffus": 80, "get_alpha_prod": [80, 152], "0001": [80, 97, 99, 152, 163], "pure": [80, 152], "1608": 81, "03981": 81, "seri": 81, "bias": [81, 93, 157, 158], "epub": 81, "siam": [81, 91], "doi": 81, "1137": 81, "20m1387961": 81, "iccv": 82, "2011": 82, "gaussianmixturemodel": 82, "accordingli": 82, "sigma_sq": 82, "memori": [82, 90, 92, 169], "consumpt": 82, "patch_dimens": 82, "geometr": 83, "commut": 83, "action": 83, "2312": 83, "01831": 83, "rotoflip": 83, "slide": 85, "window": [85, 90], "overrid": [85, 90, 96], "boolean": [85, 88, 154], "1707": [86, 87], "06474": [86, 87], "ax_cur": 86, "atu": 87, "num_lay": 88, "backprobag": 88, "rev": [88, 159], "determin": [88, 96, 159], "dens": 88, "built": 88, "freia": [88, 159], "num_lyer": 88, "in_nc": 89, "drop_path_r": [89, 90], "input_resolut": 89, "swin": [89, 90], "conv": [89, 90], "practic": [89, 114, 135], "blind": [89, 93, 124], "synthesi": 89, "stage": 89, "drop": 89, "in_chan": 90, "embed_dim": 90, "num_head": 90, "window_s": 90, "mlp_ratio": 90, "qkv_bia": 90, "qk_scale": 90, "drop_rat": 90, "attn_drop_r": 90, "norm_lay": 90, "layernorm": 90, "ap": 90, "patch_norm": 90, "use_checkpoint": 90, "upscal": 90, "img_rang": 90, "resi_connect": 90, "1conv": 90, "pretrained_noise_level": 90, "offici": 90, "head": 90, "mlp": 90, "queri": 90, "qk": 90, "head_dim": 90, "dropout": 90, "absolut": [90, 122, 123, 135, 139], "sr": 90, "pixelshuffl": 90, "pixelshuffledirect": 90, "3conv": 90, "jingyunliang": 90, "releas": 90, "v0": 90, "u2": [91, 92], "r2": 91, "2nd": 91, "generalis": 91, "bredi": 91, "kunisch": 91, "sci": 91, "492": 91, "526": 91, "2010": 91, "uniqu": [91, 92], "auxiliari": [91, 97, 99], "field": [91, 92], "lambda_1": 91, "lambda_2": 91, "tgv": 91, "behav": 91, "frobeniu": 91, "hessian": 91, "lipschitzian": [91, 92], "composit": [91, 92], "vol": [91, 92], "460": [91, 92], "479": [91, 92], "2013": [91, 92], "laurent": [91, 92], "matlab": [91, 92], "lcondat": [91, 92], "softwar": [91, 92], "daniil": [91, 92], "smolyakov": [91, 92], "primari": [91, 92], "epsilon_adjoint": 91, "nabla_adjoint": [91, 92, 112], "isotrop": [92, 148, 161], "warm": 92, "restart": 92, "kept": [92, 94, 95], "beck": 92, "teboul": 92, "2419": 92, "2434": 92, "allow": [92, 126, 134, 143, 167], "circular_pad": 93, "free": [93, 169], "bfbatchnorm2d": 93, "biasfre": 93, "nan": 93, "encount": 93, "caus": 93, "fail": 93, "circular": [93, 124, 125, 126, 131, 138, 162], "batchnorm": 93, "robust": [93, 144], "And": 93, "interpret": [93, 94, 136], "mohan": 93, "orthogon": [94, 127, 155], "_n": [94, 95], "orthonorm": [94, 114, 129], "ell_0": [94, 95], "hard": [94, 95], "variant": [94, 95], "topk": [94, 95], "subband": 94, "cheap": 94, "mother": [94, 95], "pywavelet": 94, "crop_output": 94, "crop": [94, 170], "dwt": 94, "flatten_coeff": 94, "dec": 94, "n_coeff": 94, "coeffic": 94, "n_level": 94, "hard_threshold_topk": 94, "iwt": 94, "coeff": 94, "recomposit": 94, "pad_input": 94, "prox_l0": 94, "prox_l1": 94, "reshape_th": 94, "reshap": 94, "threshold_3d": 94, "threshold_nd": 94, "thresold_2d": 94, "thresold_func": 94, "overcomplet": [95, 127, 135, 144], "psi_1": 95, "psi_2": 95, "psi_l": 95, "em": 96, "classifi": 96, "cov_regular": 96, "most": [96, 169], "batch_dimens": 96, "covari": 96, "component_log_likelihood": 96, "stopping_criterion": 96, "data_init": 96, "exactli": 96, "consol": [96, 157, 158], "get_cov": 96, "get_cov_inv_reg": 96, "get_weight": 96, "maintain": 96, "set_cov": 96, "cov": 96, "set_cov_reg": 96, "set_weight": 96, "summat": 96, "gamma_backtrack": 97, "eta_backtrack": 97, "custom_metr": 97, "beta_anderson_acc": [97, 99], "eps_anderson_acc": [97, 99], "achiev": 97, "leftarrow": 97, "hold": 97, "float64": [97, 99], "a_forward": [97, 98, 99, 103], "optimalgo": 97, "claim": 97, "strategi": 97, "aux": 97, "ty": 97, "check_conv_fn": [97, 99], "check_iteration_fn": [97, 99], "init_iterate_fn": [97, 99], "x_0": [97, 117], "u_0": [97, 117], "f_0": 97, "init_metrics_fn": [97, 99], "metric_nam": 97, "update_data_fidelity_fn": [97, 99], "update_metrics_fn": [97, 99], "update_params_fn": [97, 99], "update_prior_fn": [97, 99], "nonlinear": 98, "0000": [98, 103, 125, 129, 134], "6000": [98, 103], "nabla_x": [98, 109, 110], "grad_d": [98, 101, 103, 108], "nabla_u": [98, 108], "stepsize_int": [98, 108, 109], "max_iter_int": [98, 108, 109], "tol_int": [98, 108, 109], "prox_conjug": [98, 109], "front": [98, 100, 109], "prox_d": [98, 100, 101, 103, 104, 108], "hspace": 99, "2cm": 99, "prox_g": 99, "sign": [99, 101, 102, 127], "initialis": [99, 135], "sol": 99, "proce": 99, "anderson_acceleration_step": 99, "tx_prev": 99, "x_hist": 99, "t_hist": 99, "evlauaton": 99, "hp": 99, "f_k": 99, "commonli": 99, "init_anderson_acceler": 99, "insid": [100, 144, 154], "1e16": 100, "au": [100, 101, 103], "proj": 100, "l1": 102, "normalis": 103, "1024": [104, 136], "n_0": [104, 136], "exp": [104, 133, 136], "abus": 105, "terminologi": 105, "pd": [105, 117], "relaxation_step": 105, "negative_patch_log_likelihood": 106, "n_patch": 106, "sum_i": 106, "nll": 106, "overlap": 106, "mirror": 106, "boundari": 106, "undesir": 106, "bkg": 108, "absenc": 108, "overwrit": 109, "forget": 109, "rais": 109, "warn": 109, "mmse": 111, "def_crit": 112, "inner": [112, 155], "solver": 112, "tvdenois": 112, "untouch": 114, "those": 114, "pywt": 114, "mention": 114, "string": [115, 165, 166], "direct": 116, "kx": 117, "hal": 117, "scienc": 117, "00490826": 117, "satisfi": [117, 121], "intiliaz": 117, "three": 117, "z_0": 117, "v_": 119, "1f": 120, "lip": 121, "en": 122, "wiki": 122, "conjugate_gradient_method": 122, "cg": 122, "verifi": [122, 135, 154, 156], "grad_f": 123, "bz": 123, "unknown": [124, 133], "replic": [124, 125, 131, 138], "listtensor": [124, 133], "blurri": 124, "delta": 124, "16x16": [125, 126, 135], "middl": [125, 126, 131, 135], "2x2": [125, 126, 135], "fft": 126, "5000e": 126, "1177e": 126, "1280e": 126, "5937e": 126, "4986e": 126, "9221e": 126, "prod": 127, "iid": [127, 143], "sor": 127, "1506": 127, "03521": 127, "dst": 127, "bigger": [127, 143, 172], "o": [127, 133, 143], "mn": [127, 143], "tend": 127, "due": [127, 144], "marcenko": 127, "pastur": 127, "law": 127, "sine": 127, "independ": [127, 143], "randn": [127, 128, 129, 130, 134, 135, 137, 138, 143, 144, 147, 149], "8522": 127, "2133": 127, "9897": [127, 144], "8714": 127, "8953": 127, "5284": 127, "4422": 127, "4238": 127, "7754": 127, "conjugate_gradi": [127, 135, 144], "pseudoinvers": [127, 129, 135, 139, 144], "rec601": 128, "1343": 128, "1329": 128, "1517": 128, "0790": 128, "6711": 128, "1414": 128, "1716": 128, "9021": 128, "parent": [129, 135, 139], "express": 129, "recreat": 129, "mask_svd": 129, "5410": [129, 134], "1788": [129, 134], "5684": 129, "3986": [129, 134], "4033": [129, 134], "7193": [129, 134], "manner": [129, 157, 158], "7302": 130, "2064": 130, "1985": 130, "4322": 130, "8064": 130, "2139": 130, "3624": 130, "3223": 130, "nonetyp": [131, 138], "0146": 131, "0398": 131, "use_fft": 131, "1510": 131, "00143": 131, "offset": 133, "5567108": 133, "medium": 133, "transmiss": 133, "atmospher": 133, "light": 133, "hazi": 133, "simultan": 134, "empti": 134, "8380": 134, "incorpor": [134, 135, 139], "sensor_model": [135, 139], "adjoint_funct": 135, "extra": 135, "quantiz": [135, 139], "satur": [135, 139], "closer": [135, 150, 152], "orgin": 135, "roll": [135, 147, 149], "shift": [135, 147, 149], "allclos": [135, 147, 149], "__add__": [135, 139, 167], "retain": 135, "__mul__": [135, 139, 167], "inde": 135, "quantiti": 135, "theoret": 135, "doubl": 135, "mostli": 136, "dose": 136, "lower": [136, 147, 149], "antiproportion": 136, "benchmark": 136, "logpoisson": 136, "image_s": 137, "acceleration_factor": 137, "magnet": 137, "reson": 137, "slice": 137, "sfx": 137, "4x": 137, "5305": 137, "3326": 137, "1730": 137, "7072": 137, "reset": [137, 154, 158], "sample_mask": 137, "noise_color": 138, "noise_grai": 138, "0009": 138, "0251": 138, "0411": 138, "1576": 138, "1098": 138, "0340": 138, "0086": 138, "9084": 138, "2966": 138, "4015": 138, "guess": [139, 151, 152], "mul": 139, "concanten": 139, "clip_posit": 141, "divid": [141, 167], "9127841": 142, "review": 142, "histogram": 142, "item": 143, "round": 143, "integr": 144, "plane": 144, "rx": 144, "dimension": 144, "ramp": 144, "360": [144, 160], "inscrib": 144, "4x4": 144, "1650": 144, "2640": 144, "6995": 144, "4860": 144, "2674": 144, "9971": 144, "9002": 144, "3856": 144, "9360": 144, "4882": 144, "1068": 144, "5720": 144, "9493": 144, "7137": 144, "6536": 144, "8457": 144, "1666": 144, "7340": 144, "9793": 144, "sigma_min": 145, "sigma_max": 145, "sigma_": 145, "uniform": [145, 146, 159, 175], "minimum": 145, "amplitud": 146, "sigma_x": 148, "anisotrop": 148, "11793": 150, "plain": [150, 152], "save_iter": 151, "14687": 151, "compute_alpha_beta": 151, "2305": 152, "08995": 152, "varepsilon_t": 152, "tun": 152, "sigma_n": 152, "get_alpha_beta": 152, "get_noise_schedul": 152, "g_statist": [153, 154, 155, 156], "save_chain": [153, 154, 155, 156], "chain": [153, 154, 155, 156], "thresh_conv": [154, 155, 156], "mykernel": 154, "iterator_param": 154, "new_x": 154, "mysampl": 154, "welford": 154, "integ": [154, 155, 156, 162], "percentag": [154, 155, 156], "burn": [154, 155, 156], "period": [154, 155, 156, 161], "discard": [154, 155, 156], "function_handl": [154, 155, 156], "get_chain": 154, "mean_has_converg": 154, "var_has_converg": 154, "inner_it": 155, "rung": 155, "kutta": 155, "chebyshev": 155, "stabilis": 155, "varga": 155, "pereyra": 155, "zygalaki": 155, "1908": 155, "08845": 155, "tip": [155, 156], "damp": 155, "outer": 155, "04715": 156, "pi_": 156, "interv": 156, "wandb_setup": [157, 158], "plot_measur": [157, 158], "ai": [157, 158], "setup": [157, 158], "quickstart": [157, 158], "linear_std_psnr": 157, "grad_clip": 158, "eval_interv": 158, "check_grad": 158, "ckpt_pretrain": 158, "fact_loss": 158, "freq_plot": 158, "inpu": 158, "wider": 158, "jitter": 159, "00392156862745098": 159, "kullback": 159, "leibler": 159, "kl": 159, "p_x": 159, "p_z": 159, "const": 159, "flag": 159, "n_tran": [160, 162], "n_transf": [160, 162], "padding_mod": 161, "resampl": 161, "shift_max": 162, "fraction": 162, "max_iter_backward": 163, "beta_anderson_acc_backward": 163, "eps_anderson_acc_backward": 163, "child": [163, 164], "baseiter": 164, "__neg__": 167, "negat": 167, "__sub__": 167, "substract": 167, "__truediv__": 167, "conj": 167, "max_pixel": 168, "log_": 168, "max_i": 168, "2_2": 168, "chw": 168, "img_list": 172, "max_img": 172, "rescale_mod": 172, "min_max": 172, "return_fig": 172, "row": 172, "magnitud": 172, "img1": 172, "img2": 172, "img3": 172, "layout": 172, "linearli": 172, "colormap": 172}, "objects": {"deepinv.datasets": [[56, 0, 1, "", "HDF5Dataset"], [57, 0, 1, "", "PatchDataset"], [58, 0, 1, "", "generate_dataset"]], "deepinv.loss": [[59, 0, 1, "", "CharbonnierLoss"], [60, 0, 1, "", "EILoss"], [61, 0, 1, "", "FNEJacobianSpectralNorm"], [62, 0, 1, "", "JacobianSpectralNorm"], [63, 0, 1, "", "LpNorm"], [64, 0, 1, "", "MCLoss"], [65, 0, 1, "", "MOILoss"], [66, 0, 1, "", "Neighbor2Neighbor"], [67, 0, 1, "", "R2RLoss"], [68, 0, 1, "", "SplittingLoss"], [69, 0, 1, "", "SupLoss"], [70, 0, 1, "", "SureGaussianLoss"], [71, 0, 1, "", "SurePGLoss"], [72, 0, 1, "", "SurePoissonLoss"], [73, 0, 1, "", "TVLoss"]], "deepinv.loss.CharbonnierLoss": [[59, 1, 1, "", "forward"]], "deepinv.loss.EILoss": [[60, 1, 1, "", "forward"]], "deepinv.loss.FNEJacobianSpectralNorm": [[61, 1, 1, "", "forward"]], "deepinv.loss.JacobianSpectralNorm": [[62, 1, 1, "", "forward"]], "deepinv.loss.LpNorm": [[63, 1, 1, "", "forward"]], "deepinv.loss.MCLoss": [[64, 1, 1, "", "forward"]], "deepinv.loss.MOILoss": [[65, 1, 1, "", "forward"]], "deepinv.loss.Neighbor2Neighbor": [[66, 1, 1, "", "forward"]], "deepinv.loss.R2RLoss": [[67, 1, 1, "", "forward"]], "deepinv.loss.SplittingLoss": [[68, 1, 1, "", "forward"]], "deepinv.loss.SupLoss": [[69, 1, 1, "", "forward"]], "deepinv.loss.SureGaussianLoss": [[70, 1, 1, "", "forward"]], "deepinv.loss.SurePGLoss": [[71, 1, 1, "", "forward"]], "deepinv.loss.SurePoissonLoss": [[72, 1, 1, "", "forward"]], "deepinv.loss.TVLoss": [[73, 1, 1, "", "forward"]], "deepinv.models": [[74, 0, 1, "", "ArtifactRemoval"], [75, 0, 1, "", "AutoEncoder"], [76, 0, 1, "", "BM3D"], [77, 0, 1, "", "ConvDecoder"], [78, 0, 1, "", "DRUNet"], [79, 0, 1, "", "DeepImagePrior"], [80, 0, 1, "", "DiffUNet"], [81, 0, 1, "", "DnCNN"], [82, 0, 1, "", "EPLL"], [83, 0, 1, "", "EquivariantDenoiser"], [84, 0, 1, "", "GSDRUNet"], [85, 0, 1, "", "MedianFilter"], [86, 0, 1, "", "PDNet_DualBlock"], [87, 0, 1, "", "PDNet_PrimalBlock"], [88, 0, 1, "", "PatchNR"], [89, 0, 1, "", "SCUNet"], [90, 0, 1, "", "SwinIR"], [91, 0, 1, "", "TGVDenoiser"], [92, 0, 1, "", "TVDenoiser"], [93, 0, 1, "", "UNet"], [94, 0, 1, "", "WaveletDenoiser"], [95, 0, 1, "", "WaveletDictDenoiser"]], "deepinv.models.ArtifactRemoval": [[74, 1, 1, "", "forward"]], "deepinv.models.AutoEncoder": [[75, 1, 1, "", "forward"]], "deepinv.models.BM3D": [[76, 1, 1, "", "forward"]], "deepinv.models.ConvDecoder": [[77, 1, 1, "", "forward"]], "deepinv.models.DRUNet": [[78, 1, 1, "", "forward"]], "deepinv.models.DeepImagePrior": [[79, 1, 1, "", "forward"]], "deepinv.models.DiffUNet": [[80, 1, 1, "", "convert_to_fp16"], [80, 1, 1, "", "convert_to_fp32"], [80, 1, 1, "", "find_nearest"], [80, 1, 1, "", "forward"], [80, 1, 1, "", "forward_denoise"], [80, 1, 1, "", "forward_diffusion"], [80, 1, 1, "", "get_alpha_prod"]], "deepinv.models.DnCNN": [[81, 1, 1, "", "forward"]], "deepinv.models.EPLL": [[82, 1, 1, "", "forward"], [82, 1, 1, "", "negative_log_likelihood"], [82, 1, 1, "", "reconstruction"]], "deepinv.models.EquivariantDenoiser": [[83, 1, 1, "", "forward"]], "deepinv.models.MedianFilter": [[85, 1, 1, "", "forward"]], "deepinv.models.PDNet_DualBlock": [[86, 1, 1, "", "forward"]], "deepinv.models.PDNet_PrimalBlock": [[87, 1, 1, "", "forward"]], "deepinv.models.PatchNR": [[88, 1, 1, "", "forward"]], "deepinv.models.SCUNet": [[89, 1, 1, "", "forward"]], "deepinv.models.SwinIR": [[90, 1, 1, "", "forward"]], "deepinv.models.TGVDenoiser": [[91, 1, 1, "", "epsilon"], [91, 1, 1, "", "epsilon_adjoint"], [91, 1, 1, "", "forward"], [91, 1, 1, "", "nabla"], [91, 1, 1, "", "nabla_adjoint"]], "deepinv.models.TVDenoiser": [[92, 1, 1, "", "forward"], [92, 1, 1, "", "nabla"], [92, 1, 1, "", "nabla_adjoint"]], "deepinv.models.UNet": [[93, 1, 1, "", "forward"]], "deepinv.models.WaveletDenoiser": [[94, 1, 1, "", "crop_output"], [94, 1, 1, "", "dwt"], [94, 1, 1, "", "flatten_coeffs"], [94, 1, 1, "", "forward"], [94, 1, 1, "", "hard_threshold_topk"], [94, 1, 1, "", "iwt"], [94, 1, 1, "", "pad_input"], [94, 1, 1, "", "prox_l0"], [94, 1, 1, "", "prox_l1"], [94, 1, 1, "", "psi"], [94, 1, 1, "", "reshape_ths"], [94, 1, 1, "", "threshold_3D"], [94, 1, 1, "", "threshold_ND"], [94, 1, 1, "", "thresold_2D"], [94, 1, 1, "", "thresold_func"]], "deepinv.models.WaveletDictDenoiser": [[95, 1, 1, "", "forward"]], "deepinv.models.epll": [[96, 0, 1, "", "GaussianMixtureModel"]], "deepinv.models.epll.GaussianMixtureModel": [[96, 1, 1, "", "classify"], [96, 1, 1, "", "component_log_likelihoods"], [96, 1, 1, "", "fit"], [96, 1, 1, "", "forward"], [96, 1, 1, "", "get_cov"], [96, 1, 1, "", "get_cov_inv_reg"], [96, 1, 1, "", "get_weights"], [96, 1, 1, "", "load_state_dict"], [96, 1, 1, "", "set_cov"], [96, 1, 1, "", "set_cov_reg"], [96, 1, 1, "", "set_weights"]], "deepinv.optim": [[97, 0, 1, "", "BaseOptim"], [98, 0, 1, "", "DataFidelity"], [99, 0, 1, "", "FixedPoint"], [100, 0, 1, "", "IndicatorL2"], [101, 0, 1, "", "L1"], [102, 0, 1, "", "L1Prior"], [103, 0, 1, "", "L2"], [104, 0, 1, "", "LogPoissonLikelihood"], [105, 0, 1, "", "OptimIterator"], [106, 0, 1, "", "PatchPrior"], [107, 0, 1, "", "PnP"], [108, 0, 1, "", "PoissonLikelihood"], [109, 0, 1, "", "Prior"], [110, 0, 1, "", "RED"], [111, 0, 1, "", "ScorePrior"], [112, 0, 1, "", "TVPrior"], [113, 0, 1, "", "Tikhonov"], [114, 0, 1, "", "WaveletPrior"], [115, 2, 1, "", "optim_builder"]], "deepinv.optim.BaseOptim": [[97, 1, 1, "", "check_conv_fn"], [97, 1, 1, "", "check_iteration_fn"], [97, 1, 1, "", "forward"], [97, 1, 1, "", "init_iterate_fn"], [97, 1, 1, "", "init_metrics_fn"], [97, 1, 1, "", "update_data_fidelity_fn"], [97, 1, 1, "", "update_metrics_fn"], [97, 1, 1, "", "update_params_fn"], [97, 1, 1, "", "update_prior_fn"]], "deepinv.optim.DataFidelity": [[98, 1, 1, "", "d"], [98, 1, 1, "", "forward"], [98, 1, 1, "", "grad"], [98, 1, 1, "", "grad_d"], [98, 1, 1, "", "prox"], [98, 1, 1, "", "prox_conjugate"], [98, 1, 1, "", "prox_d"], [98, 1, 1, "", "prox_d_conjugate"]], "deepinv.optim.FixedPoint": [[99, 1, 1, "", "anderson_acceleration_step"], [99, 1, 1, "", "forward"], [99, 1, 1, "", "init_anderson_acceleration"]], "deepinv.optim.IndicatorL2": [[100, 1, 1, "", "d"], [100, 1, 1, "", "prox"], [100, 1, 1, "", "prox_d"]], "deepinv.optim.L1": [[101, 1, 1, "", "d"], [101, 1, 1, "", "grad_d"], [101, 1, 1, "", "prox"], [101, 1, 1, "", "prox_d"]], "deepinv.optim.L1Prior": [[102, 1, 1, "", "g"], [102, 1, 1, "", "prox"]], "deepinv.optim.L2": [[103, 1, 1, "", "d"], [103, 1, 1, "", "grad_d"], [103, 1, 1, "", "prox"], [103, 1, 1, "", "prox_d"]], "deepinv.optim.LogPoissonLikelihood": [[104, 1, 1, "", "d"]], "deepinv.optim.OptimIterator": [[105, 1, 1, "", "forward"], [105, 1, 1, "", "relaxation_step"]], "deepinv.optim.PatchPrior": [[106, 1, 1, "", "g"]], "deepinv.optim.PnP": [[107, 1, 1, "", "prox"]], "deepinv.optim.PoissonLikelihood": [[108, 1, 1, "", "d"], [108, 1, 1, "", "grad_d"], [108, 1, 1, "", "prox_d"]], "deepinv.optim.Prior": [[109, 1, 1, "", "forward"], [109, 1, 1, "", "g"], [109, 1, 1, "", "grad"], [109, 1, 1, "", "prox"], [109, 1, 1, "", "prox_conjugate"]], "deepinv.optim.RED": [[110, 1, 1, "", "grad"]], "deepinv.optim.ScorePrior": [[111, 1, 1, "", "forward"]], "deepinv.optim.TVPrior": [[112, 1, 1, "", "g"], [112, 1, 1, "", "nabla"], [112, 1, 1, "", "nabla_adjoint"], [112, 1, 1, "", "prox"]], "deepinv.optim.Tikhonov": [[113, 1, 1, "", "g"], [113, 1, 1, "", "grad"], [113, 1, 1, "", "prox"]], "deepinv.optim.WaveletPrior": [[114, 1, 1, "", "g"], [114, 1, 1, "", "prox"], [114, 1, 1, "", "psi"]], "deepinv.optim.optim_iterators": [[116, 0, 1, "", "ADMMIteration"], [117, 0, 1, "", "CPIteration"], [118, 0, 1, "", "DRSIteration"], [119, 0, 1, "", "GDIteration"], [120, 0, 1, "", "HQSIteration"], [121, 0, 1, "", "PGDIteration"]], "deepinv.optim.optim_iterators.ADMMIteration": [[116, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.CPIteration": [[117, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.DRSIteration": [[118, 1, 1, "", "forward"]], "deepinv.optim.optim_iterators.GDIteration": [[119, 1, 1, "", "forward"]], "deepinv.optim.utils": [[122, 0, 1, "", "conjugate_gradient"], [123, 0, 1, "", "gradient_descent"]], "deepinv.physics": [[124, 0, 1, "", "BlindBlur"], [125, 0, 1, "", "Blur"], [126, 0, 1, "", "BlurFFT"], [127, 0, 1, "", "CompressedSensing"], [128, 0, 1, "", "Decolorize"], [129, 0, 1, "", "DecomposablePhysics"], [130, 0, 1, "", "Denoising"], [131, 0, 1, "", "Downsampling"], [132, 0, 1, "", "GaussianNoise"], [133, 0, 1, "", "Haze"], [134, 0, 1, "", "Inpainting"], [135, 0, 1, "", "LinearPhysics"], [136, 0, 1, "", "LogPoissonNoise"], [137, 0, 1, "", "MRI"], [138, 0, 1, "", "Pansharpen"], [139, 0, 1, "", "Physics"], [140, 0, 1, "", "PoissonGaussianNoise"], [141, 0, 1, "", "PoissonNoise"], [142, 0, 1, "", "SinglePhotonLidar"], [143, 0, 1, "", "SinglePixelCamera"], [144, 0, 1, "", "Tomography"], [145, 0, 1, "", "UniformGaussianNoise"], [146, 0, 1, "", "UniformNoise"], [147, 0, 1, "", "adjoint_function"]], "deepinv.physics.BlindBlur": [[124, 1, 1, "", "A"], [124, 1, 1, "", "A_dagger"]], "deepinv.physics.Blur": [[125, 1, 1, "", "A"], [125, 1, 1, "", "A_adjoint"]], "deepinv.physics.CompressedSensing": [[127, 1, 1, "", "A"], [127, 1, 1, "", "A_adjoint"], [127, 1, 1, "", "A_dagger"]], "deepinv.physics.DecomposablePhysics": [[129, 1, 1, "", "A"], [129, 1, 1, "", "A_adjoint"], [129, 1, 1, "", "A_dagger"], [129, 1, 1, "", "prox_l2"]], "deepinv.physics.Downsampling": [[131, 1, 1, "", "A"], [131, 1, 1, "", "A_adjoint"], [131, 1, 1, "", "prox_l2"]], "deepinv.physics.GaussianNoise": [[132, 1, 1, "", "forward"]], "deepinv.physics.Haze": [[133, 1, 1, "", "A"], [133, 1, 1, "", "A_dagger"]], "deepinv.physics.Inpainting": [[134, 1, 1, "", "noise"]], "deepinv.physics.LinearPhysics": [[135, 1, 1, "", "A_adjoint"], [135, 1, 1, "", "A_dagger"], [135, 1, 1, "", "__add__"], [135, 1, 1, "", "__mul__"], [135, 1, 1, "", "adjointness_test"], [135, 1, 1, "", "compute_norm"], [135, 1, 1, "", "prox_l2"]], "deepinv.physics.LogPoissonNoise": [[136, 1, 1, "", "forward"]], "deepinv.physics.MRI": [[137, 1, 1, "", "reset"], [137, 1, 1, "", "sample_mask"]], "deepinv.physics.Pansharpen": [[138, 1, 1, "", "A"], [138, 1, 1, "", "A_adjoint"], [138, 1, 1, "", "forward"]], "deepinv.physics.Physics": [[139, 1, 1, "", "A"], [139, 1, 1, "", "A_dagger"], [139, 1, 1, "", "__add__"], [139, 1, 1, "", "__mul__"], [139, 1, 1, "", "forward"], [139, 1, 1, "", "noise"], [139, 1, 1, "", "sensor"]], "deepinv.physics.PoissonGaussianNoise": [[140, 1, 1, "", "forward"]], "deepinv.physics.PoissonNoise": [[141, 1, 1, "", "forward"]], "deepinv.physics.SinglePhotonLidar": [[142, 1, 1, "", "A"], [142, 1, 1, "", "A_dagger"]], "deepinv.physics.Tomography": [[144, 1, 1, "", "A"], [144, 1, 1, "", "A_adjoint"], [144, 1, 1, "", "A_dagger"]], "deepinv.physics.UniformGaussianNoise": [[145, 1, 1, "", "forward"]], "deepinv.physics.UniformNoise": [[146, 1, 1, "", "forward"]], "deepinv.physics.blur": [[148, 2, 1, "", "gaussian_blur"]], "deepinv.physics.forward": [[149, 2, 1, "", "adjoint_function"]], "deepinv.sampling": [[150, 0, 1, "", "DDRM"], [151, 0, 1, "", "DPS"], [152, 0, 1, "", "DiffPIR"], [153, 0, 1, "", "DiffusionSampler"], [154, 0, 1, "", "MonteCarlo"], [155, 0, 1, "", "SKRock"], [156, 0, 1, "", "ULA"]], "deepinv.sampling.DDRM": [[150, 1, 1, "", "forward"]], "deepinv.sampling.DPS": [[151, 1, 1, "", "compute_alpha_betas"], [151, 1, 1, "", "forward"]], "deepinv.sampling.DiffPIR": [[152, 1, 1, "", "find_nearest"], [152, 1, 1, "", "forward"], [152, 1, 1, "", "get_alpha_beta"], [152, 1, 1, "", "get_alpha_prod"], [152, 1, 1, "", "get_noise_schedule"]], "deepinv.sampling.MonteCarlo": [[154, 1, 1, "", "forward"], [154, 1, 1, "", "get_chain"], [154, 1, 1, "", "mean_has_converged"], [154, 1, 1, "", "reset"], [154, 1, 1, "", "var_has_converged"]], "deepinv": [[157, 2, 1, "", "test"], [158, 2, 1, "", "train"]], "deepinv.training_utils": [[159, 2, 1, "", "train_normalizing_flow"]], "deepinv.transform": [[160, 0, 1, "", "Rotate"], [161, 0, 1, "", "Scale"], [162, 0, 1, "", "Shift"]], "deepinv.transform.Rotate": [[160, 1, 1, "", "forward"]], "deepinv.transform.Scale": [[161, 1, 1, "", "forward"]], "deepinv.transform.Shift": [[162, 1, 1, "", "forward"]], "deepinv.unfolded": [[163, 0, 1, "", "BaseDEQ"], [164, 0, 1, "", "BaseUnfold"], [165, 2, 1, "", "DEQ_builder"], [166, 2, 1, "", "unfolded_builder"]], "deepinv.unfolded.BaseDEQ": [[163, 1, 1, "", "forward"]], "deepinv.utils": [[167, 0, 1, "", "TensorList"], [168, 2, 1, "", "cal_psnr"], [169, 2, 1, "", "get_freer_gpu"], [170, 2, 1, "", "load_url_image"], [171, 2, 1, "", "ones_like"], [172, 2, 1, "", "plot"], [173, 2, 1, "", "plot_curves"], [174, 2, 1, "", "plot_parameters"], [175, 2, 1, "", "rand_like"], [176, 2, 1, "", "randn_like"], [177, 2, 1, "", "zeros_like"]], "deepinv.utils.TensorList": [[167, 1, 1, "", "__add__"], [167, 1, 1, "", "__mul__"], [167, 1, 1, "", "__neg__"], [167, 1, 1, "", "__sub__"], [167, 1, 1, "", "__truediv__"], [167, 1, 1, "", "append"], [167, 1, 1, "", "conj"], [167, 1, 1, "", "flatten"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"]}, "titleterms": {"imag": [0, 1, 2, 5, 6, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 54], "deblur": [0, 12, 18, 35], "custom": [0, 6, 19, 20, 23, 37, 38], "deep": [0, 2, 35, 52, 54], "explicit": 0, "prior": [0, 2, 10, 12, 13, 16, 20, 23, 27, 37, 38, 45, 48, 50, 109], "setup": [0, 1, 4, 8, 11, 12, 13, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "path": [0, 1, 4, 8, 11, 12, 13, 18, 19, 20, 21, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "data": [0, 1, 4, 8, 11, 12, 13, 18, 19, 20, 21, 25, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 48], "load": [0, 1, 2, 4, 7, 8, 11, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "result": [0, 1, 2, 3, 4, 8, 11, 12, 13, 18, 19, 20, 21, 23, 24, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "base": [0, 1, 8, 11, 12, 13, 18, 19, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40], "dataset": [0, 1, 8, 12, 13, 18, 19, 20, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 43], "degrad": [0, 1, 8, 12, 13, 18, 19, 20, 29, 30, 35, 36, 37, 38, 39, 40], "oper": [0, 2, 3, 4, 5, 6, 7, 8, 11, 12, 13, 16, 18, 19, 20, 21, 23, 24, 27, 29, 30, 35, 36, 37, 38, 39, 40, 49], "defin": [0, 2, 4, 8, 19, 23, 24, 26, 27, 35, 36, 37, 38, 39, 40], "physic": [0, 49, 139], "gener": [0, 1, 2, 3, 5, 6, 8, 12, 13, 18, 23, 24, 25, 27, 29, 30, 31, 32, 35, 36, 37, 39, 40, 48], "blur": [0, 7, 12, 18, 125], "set": [0, 8, 12, 13, 16, 18, 19, 21, 29, 30, 31, 32, 39], "up": [0, 8, 12, 13, 18, 19, 21, 29, 30, 31, 32, 39], "optim": [0, 10, 12, 13, 19, 48], "algorithm": [0, 2, 11, 12, 13, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 35, 36, 37, 38, 40, 50, 51, 52], "solv": [0, 11, 12, 13, 18, 19, 21], "invers": [0, 12, 13, 18, 19, 21, 25, 26], "problem": [0, 11, 12, 13, 18, 19, 20, 21, 25, 26], "evalu": [0, 12, 13, 18, 19, 20, 21], "reconstruct": [0, 2, 8, 16, 24, 29, 30, 39], "creat": [1, 3, 6, 11, 23, 24, 27], "your": [1, 23, 25, 26], "own": 1, "dataload": 1, "an": [2, 13, 25], "us": [2, 6, 11, 25, 26, 46, 56, 57, 58, 60, 61, 64, 65, 66, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 93, 94, 95, 97, 98, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 121, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174], "from": [2, 7, 23, 24, 27, 30], "internet": [2, 7, 23, 24, 27], "forward": [2, 3, 4, 5, 6, 7, 8, 16, 19, 21, 23, 24, 27, 39], "nois": [2, 16, 23, 24, 27, 49], "model": [2, 3, 4, 8, 12, 13, 15, 16, 18, 19, 20, 21, 23, 24, 26, 27, 38, 39, 45], "measur": [2, 3, 23, 24, 27, 30, 36, 37], "run": [2, 16, 23, 24, 27], "dip": 2, "plot": [2, 3, 12, 13, 16, 19, 21, 23, 24, 27, 36, 37, 40, 53, 172], "singl": [3, 7], "photon": 3, "lidar": 3, "depth": 3, "rang": 3, "toi": [3, 5, 6], "signal": 3, "appli": 3, "match": 3, "filter": 3, "recov": 3, "save": [4, 39], "stack": 5, "concaten": 5, "verifi": [5, 6], "our": 6, "linear": [6, 49], "decompos": 6, "benefit": 6, "A": 7, "tour": 7, "sens": [7, 36], "denois": [7, 11, 15, 20, 24, 25, 26, 31, 32, 45, 50, 130], "inpaint": [7, 13, 15, 39, 134], "compress": [7, 36, 37], "comput": [7, 9, 14, 16, 17, 21, 22, 28, 33, 34, 41, 55], "tomographi": [7, 16, 21, 144], "mri": [7, 29, 137], "decolor": [7, 128], "pan": 7, "sharpen": 7, "pixel": 7, "camera": 7, "super": [7, 20, 40], "resolut": [7, 20, 35, 40], "train": [8, 16, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 53, 158], "network": [8, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 44], "test": [8, 15, 16, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 53, 157], "time": [9, 14, 17, 22, 28, 33, 34, 41, 55], "exampl": [10, 24, 56, 57, 58, 60, 61, 64, 65, 66, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 93, 94, 95, 97, 98, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 117, 121, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174], "basic": 10, "patch": [10, 15, 16, 45], "plug": 10, "plai": 10, "sampl": [10, 23, 24, 25, 27], "self": [10, 29, 30, 31, 32, 44], "supervis": [10, 29, 30, 31, 32, 44], "learn": [10, 29, 30, 36, 37, 38, 44, 54], "unfold": [10, 36, 37, 39, 40, 45, 52], "3d": 11, "wavelet": [11, 13], "volum": 11, "extens": 11, "multipl": [11, 30, 46], "iter": [11, 23, 36, 37, 38, 48, 50], "dykstra": 11, "like": 11, "total": 12, "variat": 12, "tv": 12, "explor": [12, 13], "expect": 15, "log": 15, "likelihood": [15, 27], "epll": [15, 16, 82], "limit": 16, "angl": 16, "paramet": [16, 21, 29, 30, 31, 32, 35, 36, 37, 38, 40, 48], "patchnr": [16, 88], "em": 16, "definit": [16, 20], "loop": 16, "dpir": 18, "method": 18, "pnp": [18, 19, 20, 21, 27, 40, 50, 107], "condat": 19, "vu": 19, "primal": [19, 38], "dual": [19, 38], "fstep": 19, "gstep": 19, "modul": 19, "regular": [20, 44], "red": [20, 50, 110], "thi": 20, "involv": 20, "particular": 20, "class": [20, 23], "vanilla": [21, 40], "ct": [21, 38], "build": 23, "sampler": [23, 24, 27], "precondit": 23, "standard": 23, "ula": [23, 27, 156], "diffus": [24, 26, 51], "mmse": 24, "mont": [24, 51], "carlo": [24, 51], "implement": [25, 26], "diffpir": [25, 152], "The": [25, 26], "step": [25, 26], "fidel": [25, 38, 48], "put": 25, "all": 25, "togeth": 25, "dp": [26, 151], "schedul": 26, "approxim": 26, "uncertainti": 27, "quantif": 27, "mcmc": 27, "equivari": [29, 45], "knee": 29, "incomplet": 30, "subsampl": 30, "neighbor2neighbor": [31, 66], "loss": [31, 32, 44], "noisi": [31, 32], "sure": 32, "equilibrium": [35, 52], "deq": 35, "low": [35, 40], "soft": 36, "threshold": 36, "lista": 36, "proxim": [36, 37], "gradient": [36, 37], "weight": [37, 45], "scan": 38, "pdnet": 38, "trainabl": 38, "term": 38, "random": 38, "phantom": 38, "chambol": 39, "pock": 39, "constrain": 39, "how": 42, "contribut": 42, "hd5dataset": 43, "patchdataset": [43, 57], "transform": 44, "metric": 44, "classic": 45, "learnabl": 45, "architectur": 45, "pretrain": 45, "summari": 45, "gpu": 46, "math": 47, "notat": 47, "list": 47, "mathemat": 47, "symbol": 47, "util": [48, 49, 53], "non": 49, "distribut": 49, "markov": 51, "chain": 51, "langevin": 51, "tensorlist": [53, 167], "other": 53, "deepinvers": 54, "pytorch": 54, "librari": 54, "featur": 54, "instal": 54, "get": 54, "start": 54, "find": 54, "help": 54, "lead": 54, "develop": 54, "hdf5dataset": 56, "generate_dataset": 58, "charbonnierloss": 59, "eiloss": 60, "fnejacobianspectralnorm": 61, "jacobianspectralnorm": 62, "lpnorm": 63, "mcloss": 64, "moiloss": 65, "r2rloss": 67, "splittingloss": 68, "suploss": 69, "suregaussianloss": 70, "surepgloss": 71, "surepoissonloss": 72, "tvloss": 73, "artifactremov": 74, "autoencod": 75, "bm3d": 76, "convdecod": 77, "drunet": 78, "deepimageprior": 79, "diffunet": 80, "dncnn": 81, "equivariantdenois": 83, "gsdrunet": 84, "medianfilt": 85, "pdnet_dualblock": 86, "pdnet_primalblock": 87, "scunet": 89, "swinir": 90, "tgvdenois": 91, "tvdenois": 92, "unet": 93, "waveletdenois": 94, "waveletdictdenois": 95, "gaussianmixturemodel": 96, "baseoptim": 97, "datafidel": 98, "fixedpoint": 99, "indicatorl2": 100, "l1": 101, "l1prior": 102, "l2": 103, "logpoissonlikelihood": 104, "optimiter": 105, "patchprior": 106, "poissonlikelihood": 108, "scoreprior": 111, "tvprior": 112, "tikhonov": 113, "waveletprior": 114, "optim_build": 115, "admmiter": 116, "cpiter": 117, "drsiter": 118, "gditer": 119, "hqsiter": 120, "pgditer": 121, "conjugate_gradi": 122, "gradient_desc": 123, "blindblur": 124, "blurfft": 126, "compressedsens": 127, "decomposablephys": 129, "downsampl": 131, "gaussiannois": 132, "haze": 133, "linearphys": 135, "logpoissonnois": 136, "pansharpen": 138, "poissongaussiannois": 140, "poissonnois": 141, "singlephotonlidar": 142, "singlepixelcamera": 143, "uniformgaussiannois": 145, "uniformnois": 146, "adjoint_funct": [147, 149], "gaussian_blur": 148, "ddrm": 150, "diffusionsampl": 153, "montecarlo": 154, "skrock": 155, "train_normalizing_flow": 159, "rotat": 160, "scale": 161, "shift": 162, "basedeq": 163, "baseunfold": 164, "deq_build": 165, "unfolded_build": 166, "cal_psnr": 168, "get_freer_gpu": 169, "load_url_imag": 170, "ones_lik": 171, "plot_curv": 173, "plot_paramet": 174, "rand_lik": 175, "randn_lik": 176, "zeros_lik": 177}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 60}, "alltitles": {"Image deblurring with custom deep explicit prior.": [[0, "image-deblurring-with-custom-deep-explicit-prior"]], "Setup paths for data loading and results.": [[0, "setup-paths-for-data-loading-and-results"], [1, "setup-paths-for-data-loading-and-results"], [4, "setup-paths-for-data-loading-and-results"], [8, "setup-paths-for-data-loading-and-results"], [11, "setup-paths-for-data-loading-and-results"], [12, "setup-paths-for-data-loading-and-results"], [13, "setup-paths-for-data-loading-and-results"], [18, "setup-paths-for-data-loading-and-results"], [19, "setup-paths-for-data-loading-and-results"], [20, "setup-paths-for-data-loading-and-results"], [21, "setup-paths-for-data-loading-and-results"], [29, "setup-paths-for-data-loading-and-results"], [30, "setup-paths-for-data-loading-and-results"], [31, "setup-paths-for-data-loading-and-results"], [32, "setup-paths-for-data-loading-and-results"], [35, "setup-paths-for-data-loading-and-results"], [36, "setup-paths-for-data-loading-and-results"], [37, "setup-paths-for-data-loading-and-results"], [38, "setup-paths-for-data-loading-and-results"], [39, "setup-paths-for-data-loading-and-results"], [40, "setup-paths-for-data-loading-and-results"]], "Load base image datasets and degradation operators.": [[0, "load-base-image-datasets-and-degradation-operators"], [8, "load-base-image-datasets-and-degradation-operators"], [12, "load-base-image-datasets-and-degradation-operators"], [13, "load-base-image-datasets-and-degradation-operators"], [18, "load-base-image-datasets-and-degradation-operators"], [19, "load-base-image-datasets-and-degradation-operators"], [20, "load-base-image-datasets-and-degradation-operators"], [29, "load-base-image-datasets-and-degradation-operators"], [30, "load-base-image-datasets-and-degradation-operators"], [35, "load-base-image-datasets-and-degradation-operators"], [36, "load-base-image-datasets-and-degradation-operators"], [37, "load-base-image-datasets-and-degradation-operators"], [38, "load-base-image-datasets-and-degradation-operators"], [39, "load-base-image-datasets-and-degradation-operators"], [40, "load-base-image-datasets-and-degradation-operators"]], "Define physics operator": [[0, "define-physics-operator"]], "Generate a dataset of blurred images": [[0, "generate-a-dataset-of-blurred-images"]], "Set up the optimization algorithm to solve the inverse problem.": [[0, "set-up-the-optimization-algorithm-to-solve-the-inverse-problem"], [12, "set-up-the-optimization-algorithm-to-solve-the-inverse-problem"], [13, "set-up-the-optimization-algorithm-to-solve-the-inverse-problem"]], "Evaluate the reconstruction algorithm on the problem.": [[0, "evaluate-the-reconstruction-algorithm-on-the-problem"]], "Creating your own dataset": [[1, "creating-your-own-dataset"]], "Load base image datasets": [[1, "load-base-image-datasets"], [31, "load-base-image-datasets"], [32, "load-base-image-datasets"]], "Generate a dataset of degraded images and load it.": [[1, "generate-a-dataset-of-degraded-images-and-load-it"]], "Create a dataloader": [[1, "create-a-dataloader"]], "Reconstructing an image using the deep image prior.": [[2, "reconstructing-an-image-using-the-deep-image-prior"]], "Load image from the internet": [[2, "load-image-from-the-internet"], [7, "load-image-from-the-internet"], [23, "load-image-from-the-internet"], [27, "load-image-from-the-internet"]], "Define forward operator and noise model": [[2, "define-forward-operator-and-noise-model"], [23, "define-forward-operator-and-noise-model"], [24, "define-forward-operator-and-noise-model"], [27, "define-forward-operator-and-noise-model"]], "Generate the measurement": [[2, "generate-the-measurement"], [23, "generate-the-measurement"], [24, "generate-the-measurement"], [27, "generate-the-measurement"]], "Define the deep image prior": [[2, "define-the-deep-image-prior"]], "Run DIP algorithm and plot results": [[2, "run-dip-algorithm-and-plot-results"]], "Single photon lidar operator for depth ranging.": [[3, "single-photon-lidar-operator-for-depth-ranging"]], "Create forward model": [[3, "create-forward-model"]], "Generate toy signal and measurement": [[3, "generate-toy-signal-and-measurement"]], "Apply matched filtering to recover the signal and plot the results": [[3, "apply-matched-filtering-to-recover-the-signal-and-plot-the-results"]], "Saving and loading models": [[4, "saving-and-loading-models"]], "Define a forward operator": [[4, "define-a-forward-operator"]], "Define a model": [[4, "define-a-model"]], "Stacking and concatenating forward operators.": [[5, "stacking-and-concatenating-forward-operators"]], "Stacking forward operators.": [[5, "stacking-forward-operators"]], "Generate toy image": [[5, "generate-toy-image"], [6, "generate-toy-image"]], "Verifying the stacked operator": [[5, "verifying-the-stacked-operator"]], "Concatenating forward operators.": [[5, "concatenating-forward-operators"]], "Verifying the concatenated operator": [[5, "verifying-the-concatenated-operator"]], "Creating a forward operator.": [[6, "creating-a-forward-operator"]], "Creating a custom forward operator.": [[6, "creating-a-custom-forward-operator"]], "Verifying our linear operator": [[6, "verifying-our-linear-operator"]], "Creating a decomposable forward operator.": [[6, "creating-a-decomposable-forward-operator"]], "Benefits of using a decomposable forward operator.": [[6, "benefits-of-using-a-decomposable-forward-operator"]], "A tour of forward sensing operators": [[7, "a-tour-of-forward-sensing-operators"]], "Denoising": [[7, "denoising"], [15, "denoising"], [130, "denoising"]], "Inpainting": [[7, "inpainting"], [15, "inpainting"], [134, "inpainting"]], "Compressed Sensing": [[7, "compressed-sensing"]], "Computed Tomography": [[7, "computed-tomography"]], "MRI": [[7, "mri"], [137, "mri"]], "Decolorize": [[7, "decolorize"], [128, "decolorize"]], "Pan-sharpening": [[7, "pan-sharpening"]], "Single-Pixel Camera": [[7, "single-pixel-camera"]], "Blur": [[7, "blur"], [125, "blur"]], "Super-Resolution": [[7, "super-resolution"]], "Training a reconstruction network.": [[8, "training-a-reconstruction-network"]], "Define forward operator and generate dataset": [[8, "define-forward-operator-and-generate-dataset"], [39, "define-forward-operator-and-generate-dataset"]], "Set up the reconstruction network": [[8, "set-up-the-reconstruction-network"], [29, "set-up-the-reconstruction-network"], [30, "set-up-the-reconstruction-network"], [39, "set-up-the-reconstruction-network"]], "Train the model": [[8, "train-the-model"], [39, "train-the-model"]], "Test the network": [[8, "test-the-network"], [29, "test-the-network"], [30, "test-the-network"], [31, "test-the-network"], [32, "test-the-network"], [35, "test-the-network"], [38, "test-the-network"], [39, "test-the-network"], [40, "test-the-network"]], "Computation times": [[9, "computation-times"], [14, "computation-times"], [17, "computation-times"], [22, "computation-times"], [28, "computation-times"], [33, "computation-times"], [34, "computation-times"], [41, "computation-times"], [55, "computation-times"]], "Examples": [[10, "examples"]], "Basics": [[10, "basics"]], "Optimization": [[10, "optimization"]], "Patch Priors": [[10, "patch-priors"], [45, "patch-priors"]], "Plug-and-Play": [[10, "plug-and-play"]], "Sampling": [[10, "sampling"]], "Self-Supervised Learning": [[10, "self-supervised-learning"], [44, "self-supervised-learning"]], "Unfolded": [[10, "unfolded"], [52, "id1"]], "3D wavelet denoising": [[11, "d-wavelet-denoising"]], "Load base volume image and denoising operators.": [[11, "load-base-volume-image-and-denoising-operators"]], "Create the denoising operator and solve the problem.": [[11, "create-the-denoising-operator-and-solve-the-problem"]], "Extension to multiple wavelet bases.": [[11, "extension-to-multiple-wavelet-bases"]], "Iterating the Dykstra-like algorithm.": [[11, "iterating-the-dykstra-like-algorithm"]], "Using the Dykstra-like algorithm for wavelet denoising.": [[11, "using-the-dykstra-like-algorithm-for-wavelet-denoising"]], "Image deblurring with Total-Variation (TV) prior": [[12, "image-deblurring-with-total-variation-tv-prior"]], "Generate a dataset of blurred images and load it.": [[12, "generate-a-dataset-of-blurred-images-and-load-it"], [18, "generate-a-dataset-of-blurred-images-and-load-it"]], "Exploring the total variation prior.": [[12, "exploring-the-total-variation-prior"]], "Evaluate the model on the problem and plot the results.": [[12, "evaluate-the-model-on-the-problem-and-plot-the-results"], [13, "evaluate-the-model-on-the-problem-and-plot-the-results"], [19, "evaluate-the-model-on-the-problem-and-plot-the-results"], [21, "evaluate-the-model-on-the-problem-and-plot-the-results"]], "Image inpainting with wavelet prior": [[13, "image-inpainting-with-wavelet-prior"]], "Generate an inpainting problem": [[13, "generate-an-inpainting-problem"]], "Exploring the wavelet prior.": [[13, "exploring-the-wavelet-prior"]], "Expected Patch Log Likelihood (EPLL) for Denoising and Inpainting": [[15, "expected-patch-log-likelihood-epll-for-denoising-and-inpainting"]], "Load test image and model": [[15, "load-test-image-and-model"]], "Patch priors for limited-angle computed tomography": [[16, "patch-priors-for-limited-angle-computed-tomography"]], "Load training and test images": [[16, "load-training-and-test-images"]], "Set parameters for EPLL and PatchNR": [[16, "set-parameters-for-epll-and-patchnr"]], "Training / EM algorithm": [[16, "training-em-algorithm"]], "Definition of forward operator and noise model": [[16, "definition-of-forward-operator-and-noise-model"]], "Reconstruction loop": [[16, "reconstruction-loop"]], "Run and plot": [[16, "run-and-plot"]], "DPIR method for PnP image deblurring.": [[18, "dpir-method-for-pnp-image-deblurring"]], "Set up the DPIR algorithm to solve the inverse problem.": [[18, "set-up-the-dpir-algorithm-to-solve-the-inverse-problem"]], "Evaluate the model on the problem.": [[18, "evaluate-the-model-on-the-problem"], [20, "evaluate-the-model-on-the-problem"]], "PnP with custom optimization algorithm (Condat-Vu Primal-Dual)": [[19, "pnp-with-custom-optimization-algorithm-condat-vu-primal-dual"]], "Define a custom optimization algorithm": [[19, "define-a-custom-optimization-algorithm"]], "Define the custom fStep and gStep modules": [[19, "define-the-custom-fstep-and-gstep-modules"]], "Set the forward operator": [[19, "set-the-forward-operator"], [21, "set-the-forward-operator"]], "Set up the PnP algorithm to solve the inverse problem.": [[19, "set-up-the-pnp-algorithm-to-solve-the-inverse-problem"], [21, "set-up-the-pnp-algorithm-to-solve-the-inverse-problem"]], "Regularization by Denoising (RED) for Super-Resolution.": [[20, "regularization-by-denoising-red-for-super-resolution"]], "Setup the PnP algorithm. This involves in particular the definition of a custom prior class.": [[20, "setup-the-pnp-algorithm-this-involves-in-particular-the-definition-of-a-custom-prior-class"]], "Vanilla PnP for computed tomography (CT).": [[21, "vanilla-pnp-for-computed-tomography-ct"]], "Load image and parameters": [[21, "load-image-and-parameters"]], "Building your custom sampling algorithm.": [[23, "building-your-custom-sampling-algorithm"]], "Define the sampling iteration": [[23, "define-the-sampling-iteration"]], "Build Sampler class": [[23, "build-sampler-class"]], "Define the prior": [[23, "define-the-prior"], [27, "define-the-prior"]], "Create the preconditioned and standard ULA samplers": [[23, "create-the-preconditioned-and-standard-ula-samplers"]], "Run sampling algorithms and plot results": [[23, "run-sampling-algorithms-and-plot-results"]], "Image reconstruction with a diffusion model": [[24, "image-reconstruction-with-a-diffusion-model"]], "Load example image from the internet": [[24, "load-example-image-from-the-internet"]], "Define the MMSE denoiser": [[24, "define-the-mmse-denoiser"]], "Create the Monte Carlo sampler": [[24, "create-the-monte-carlo-sampler"]], "Run the diffusion algorithm and plot results": [[24, "run-the-diffusion-algorithm-and-plot-results"]], "Create a Monte Carlo sampler": [[24, "create-a-monte-carlo-sampler"]], "Run sampling algorithm and plot results": [[24, "run-sampling-algorithm-and-plot-results"], [27, "run-sampling-algorithm-and-plot-results"]], "Implementing DiffPIR": [[25, "implementing-diffpir"]], "Generate an inverse problem": [[25, "generate-an-inverse-problem"]], "The DiffPIR algorithm": [[25, "the-diffpir-algorithm"]], "Denoising step": [[25, "denoising-step"], [26, "denoising-step"]], "Data fidelity step": [[25, "data-fidelity-step"]], "Sampling step": [[25, "sampling-step"]], "Putting it all together: the DiffPIR algorithm": [[25, "putting-it-all-together-the-diffpir-algorithm"]], "Using the DiffPIR algorithm in your inverse problem": [[25, "using-the-diffpir-algorithm-in-your-inverse-problem"]], "Implementing DPS": [[26, "implementing-dps"]], "Diffusion model loading": [[26, "diffusion-model-loading"]], "Define diffusion schedule": [[26, "define-diffusion-schedule"]], "The DPS algorithm": [[26, "the-dps-algorithm"]], "DPS approximation": [[26, "dps-approximation"]], "DPS Algorithm": [[26, "dps-algorithm"]], "Using DPS in your inverse problem": [[26, "using-dps-in-your-inverse-problem"]], "Uncertainty quantification with PnP-ULA.": [[27, "uncertainty-quantification-with-pnp-ula"]], "Define the likelihood": [[27, "define-the-likelihood"]], "Create the MCMC sampler": [[27, "create-the-mcmc-sampler"]], "Self-supervised learning with Equivariant Imaging for MRI.": [[29, "self-supervised-learning-with-equivariant-imaging-for-mri"]], "Generate a dataset of knee images and load it.": [[29, "generate-a-dataset-of-knee-images-and-load-it"]], "Set up the training parameters": [[29, "set-up-the-training-parameters"], [30, "set-up-the-training-parameters"], [31, "set-up-the-training-parameters"], [32, "set-up-the-training-parameters"]], "Train the network": [[29, "train-the-network"], [30, "train-the-network"], [31, "train-the-network"], [32, "train-the-network"], [35, "train-the-network"], [38, "train-the-network"], [40, "train-the-network"]], "Self-supervised learning from incomplete measurements of multiple operators.": [[30, "self-supervised-learning-from-incomplete-measurements-of-multiple-operators"]], "Generate a dataset of subsampled images and load it.": [[30, "generate-a-dataset-of-subsampled-images-and-load-it"]], "Self-supervised denoising with the Neighbor2Neighbor loss.": [[31, "self-supervised-denoising-with-the-neighbor2neighbor-loss"]], "Generate a dataset of noisy images": [[31, "generate-a-dataset-of-noisy-images"], [32, "generate-a-dataset-of-noisy-images"]], "Set up the denoiser network": [[31, "set-up-the-denoiser-network"], [32, "set-up-the-denoiser-network"]], "Self-supervised denoising with the SURE loss.": [[32, "self-supervised-denoising-with-the-sure-loss"]], "Deep Equilibrium (DEQ) algorithms for image deblurring": [[35, "deep-equilibrium-deq-algorithms-for-image-deblurring"]], "Generate a dataset of low resolution images and load it.": [[35, "generate-a-dataset-of-low-resolution-images-and-load-it"], [40, "generate-a-dataset-of-low-resolution-images-and-load-it"]], "Define the  DEQ algorithm.": [[35, "define-the-deq-algorithm"]], "Define the training parameters.": [[35, "define-the-training-parameters"], [36, "define-the-training-parameters"], [37, "define-the-training-parameters"], [38, "define-the-training-parameters"], [40, "define-the-training-parameters"]], "Learned Iterative Soft-Thresholding Algorithm (LISTA) for compressed sensing": [[36, "learned-iterative-soft-thresholding-algorithm-lista-for-compressed-sensing"]], "Generate a dataset of compressed measurements and load it.": [[36, "generate-a-dataset-of-compressed-measurements-and-load-it"], [37, "generate-a-dataset-of-compressed-measurements-and-load-it"]], "Define the unfolded Proximal Gradient algorithm.": [[36, "define-the-unfolded-proximal-gradient-algorithm"], [37, "define-the-unfolded-proximal-gradient-algorithm"]], "Train the network.": [[36, "train-the-network"], [37, "train-the-network"]], "Test the network.": [[36, "test-the-network"], [37, "test-the-network"]], "Plotting the learned parameters.": [[36, "plotting-the-learned-parameters"]], "Learned iterative custom prior": [[37, "learned-iterative-custom-prior"]], "Plotting the weights of the network.": [[37, "plotting-the-weights-of-the-network"]], "Learned Primal-Dual algorithm for CT scan.": [[38, "learned-primal-dual-algorithm-for-ct-scan"]], "Define a custom iterator for the PDNet learned primal-dual algorithm.": [[38, "define-a-custom-iterator-for-the-pdnet-learned-primal-dual-algorithm"]], "Define the trainable prior and data fidelity terms.": [[38, "define-the-trainable-prior-and-data-fidelity-terms"]], "Define the model.": [[38, "define-the-model"]], "Training dataset of random phantoms.": [[38, "training-dataset-of-random-phantoms"]], "Unfolded Chambolle-Pock for constrained image inpainting": [[39, "unfolded-chambolle-pock-for-constrained-image-inpainting"]], "Saving the model": [[39, "saving-the-model"]], "Loading the model": [[39, "loading-the-model"]], "Vanilla Unfolded algorithm for super-resolution": [[40, "vanilla-unfolded-algorithm-for-super-resolution"]], "Define the unfolded PnP algorithm.": [[40, "define-the-unfolded-pnp-algorithm"]], "Plotting the trained parameters.": [[40, "plotting-the-trained-parameters"]], "How to Contribute": [[42, "how-to-contribute"]], "Datasets": [[43, "datasets"]], "HD5Dataset": [[43, "hd5dataset"]], "PatchDataset": [[43, "patchdataset"], [57, "patchdataset"]], "Loss": [[44, "loss"]], "Supervised Learning": [[44, "supervised-learning"]], "Transforms": [[44, "transforms"]], "Network Regularization": [[44, "network-regularization"]], "Metrics": [[44, "metrics"]], "Models": [[45, "models"]], "Denoisers": [[45, "denoisers"]], "Classical Denoisers": [[45, "classical-denoisers"]], "Learnable Denoisers": [[45, "learnable-denoisers"]], "Equivariant denoisers": [[45, "equivariant-denoisers"]], "Unfolded architectures": [[45, "unfolded-architectures"]], "Pretrained weights": [[45, "pretrained-weights"]], "Summary of pretrained weights": [[45, "id13"]], "Using multiple GPUs": [[46, "using-multiple-gpus"]], "Math Notation": [[47, "math-notation"]], "List of mathematical symbols": [[47, "id1"]], "Optim": [[48, "optim"]], "Data Fidelity": [[48, "data-fidelity"]], "Priors": [[48, "priors"]], "Parameters": [[48, "parameters"]], "Iterators": [[48, "iterators"], [50, "iterators"]], "Generic Optimizers": [[48, "generic-optimizers"]], "Utils": [[48, "utils"], [49, "utils"], [53, "utils"]], "Physics": [[49, "physics"], [139, "physics"]], "Linear operators": [[49, "linear-operators"]], "Non-linear operators": [[49, "non-linear-operators"]], "Noise distributions": [[49, "noise-distributions"]], "PnP and RED algorithms": [[50, "pnp-and-red-algorithms"]], "Priors and denoisers": [[50, "priors-and-denoisers"]], "Diffusion algorithms": [[51, "diffusion-algorithms"]], "Diffusion": [[51, "diffusion"]], "Markov Chain Monte Carlo Langevin": [[51, "markov-chain-monte-carlo-langevin"]], "Unfolded algorithms": [[52, "unfolded-algorithms"]], "Deep Equilibrium": [[52, "deep-equilibrium"]], "Training and Testing": [[53, "training-and-testing"]], "Plotting": [[53, "plotting"]], "TensorList": [[53, "tensorlist"], [167, "tensorlist"]], "Other": [[53, "other"]], "DeepInverse: a Pytorch library for imaging with deep learning": [[54, "deepinverse-a-pytorch-library-for-imaging-with-deep-learning"]], "Featuring": [[54, "featuring"]], "Installation": [[54, "installation"]], "Getting Started": [[54, "getting-started"]], "Finding Help": [[54, "finding-help"]], "Lead Developers": [[54, "lead-developers"]], "HDF5Dataset": [[56, "hdf5dataset"]], "Examples using HDF5Dataset:": [[56, "examples-using-hdf5dataset"]], "Examples using PatchDataset:": [[57, "examples-using-patchdataset"]], "generate_dataset": [[58, "generate-dataset"]], "Examples using generate_dataset:": [[58, "examples-using-generate-dataset"]], "CharbonnierLoss": [[59, "charbonnierloss"]], "EILoss": [[60, "eiloss"]], "Examples using EILoss:": [[60, "examples-using-eiloss"]], "FNEJacobianSpectralNorm": [[61, "fnejacobianspectralnorm"]], "Examples using FNEJacobianSpectralNorm:": [[61, "examples-using-fnejacobianspectralnorm"]], "JacobianSpectralNorm": [[62, "jacobianspectralnorm"]], "LpNorm": [[63, "lpnorm"]], "MCLoss": [[64, "mcloss"]], "Examples using MCLoss:": [[64, "examples-using-mcloss"]], "MOILoss": [[65, "moiloss"]], "Examples using MOILoss:": [[65, "examples-using-moiloss"]], "Neighbor2Neighbor": [[66, "neighbor2neighbor"]], "Examples using Neighbor2Neighbor:": [[66, "examples-using-neighbor2neighbor"]], "R2RLoss": [[67, "r2rloss"]], "SplittingLoss": [[68, "splittingloss"]], "SupLoss": [[69, "suploss"]], "Examples using SupLoss:": [[69, "examples-using-suploss"]], "SureGaussianLoss": [[70, "suregaussianloss"]], "Examples using SureGaussianLoss:": [[70, "examples-using-suregaussianloss"]], "SurePGLoss": [[71, "surepgloss"]], "Examples using SurePGLoss:": [[71, "examples-using-surepgloss"]], "SurePoissonLoss": [[72, "surepoissonloss"]], "Examples using SurePoissonLoss:": [[72, "examples-using-surepoissonloss"]], "TVLoss": [[73, "tvloss"]], "ArtifactRemoval": [[74, "artifactremoval"]], "Examples using ArtifactRemoval:": [[74, "examples-using-artifactremoval"]], "AutoEncoder": [[75, "autoencoder"]], "BM3D": [[76, "bm3d"]], "ConvDecoder": [[77, "convdecoder"]], "Examples using ConvDecoder:": [[77, "examples-using-convdecoder"]], "DRUNet": [[78, "drunet"]], "Examples using DRUNet:": [[78, "examples-using-drunet"]], "DeepImagePrior": [[79, "deepimageprior"]], "Examples using DeepImagePrior:": [[79, "examples-using-deepimageprior"]], "DiffUNet": [[80, "diffunet"]], "Examples using DiffUNet:": [[80, "examples-using-diffunet"]], "DnCNN": [[81, "dncnn"]], "Examples using DnCNN:": [[81, "examples-using-dncnn"]], "EPLL": [[82, "epll"]], "Examples using EPLL:": [[82, "examples-using-epll"]], "EquivariantDenoiser": [[83, "equivariantdenoiser"]], "GSDRUNet": [[84, "gsdrunet"]], "Examples using GSDRUNet:": [[84, "examples-using-gsdrunet"]], "MedianFilter": [[85, "medianfilter"]], "Examples using MedianFilter:": [[85, "examples-using-medianfilter"]], "PDNet_DualBlock": [[86, "pdnet-dualblock"]], "Examples using PDNet_DualBlock:": [[86, "examples-using-pdnet-dualblock"]], "PDNet_PrimalBlock": [[87, "pdnet-primalblock"]], "Examples using PDNet_PrimalBlock:": [[87, "examples-using-pdnet-primalblock"]], "PatchNR": [[88, "patchnr"]], "Examples using PatchNR:": [[88, "examples-using-patchnr"]], "SCUNet": [[89, "scunet"]], "SwinIR": [[90, "swinir"]], "TGVDenoiser": [[91, "tgvdenoiser"]], "TVDenoiser": [[92, "tvdenoiser"]], "UNet": [[93, "unet"]], "Examples using UNet:": [[93, "examples-using-unet"]], "WaveletDenoiser": [[94, "waveletdenoiser"]], "Examples using WaveletDenoiser:": [[94, "examples-using-waveletdenoiser"]], "WaveletDictDenoiser": [[95, "waveletdictdenoiser"]], "Examples using WaveletDictDenoiser:": [[95, "examples-using-waveletdictdenoiser"]], "GaussianMixtureModel": [[96, "gaussianmixturemodel"]], "BaseOptim": [[97, "baseoptim"]], "Examples using BaseOptim:": [[97, "examples-using-baseoptim"]], "DataFidelity": [[98, "datafidelity"]], "Examples using DataFidelity:": [[98, "examples-using-datafidelity"]], "FixedPoint": [[99, "fixedpoint"]], "IndicatorL2": [[100, "indicatorl2"]], "Examples using IndicatorL2:": [[100, "examples-using-indicatorl2"]], "L1": [[101, "l1"]], "L1Prior": [[102, "l1prior"]], "L2": [[103, "l2"]], "Examples using L2:": [[103, "examples-using-l2"]], "LogPoissonLikelihood": [[104, "logpoissonlikelihood"]], "Examples using LogPoissonLikelihood:": [[104, "examples-using-logpoissonlikelihood"]], "OptimIterator": [[105, "optimiterator"]], "Examples using OptimIterator:": [[105, "examples-using-optimiterator"]], "PatchPrior": [[106, "patchprior"]], "Examples using PatchPrior:": [[106, "examples-using-patchprior"]], "PnP": [[107, "pnp"]], "Examples using PnP:": [[107, "examples-using-pnp"]], "PoissonLikelihood": [[108, "poissonlikelihood"]], "Examples using PoissonLikelihood:": [[108, "examples-using-poissonlikelihood"]], "Prior": [[109, "prior"]], "Examples using Prior:": [[109, "examples-using-prior"]], "RED": [[110, "red"]], "Examples using RED:": [[110, "examples-using-red"]], "ScorePrior": [[111, "scoreprior"]], "Examples using ScorePrior:": [[111, "examples-using-scoreprior"]], "TVPrior": [[112, "tvprior"]], "Examples using TVPrior:": [[112, "examples-using-tvprior"]], "Tikhonov": [[113, "tikhonov"]], "WaveletPrior": [[114, "waveletprior"]], "Examples using WaveletPrior:": [[114, "examples-using-waveletprior"]], "optim_builder": [[115, "optim-builder"]], "Examples using optim_builder:": [[115, "examples-using-optim-builder"]], "ADMMIteration": [[116, "admmiteration"]], "CPIteration": [[117, "cpiteration"]], "Examples using CPIteration:": [[117, "examples-using-cpiteration"]], "DRSIteration": [[118, "drsiteration"]], "GDIteration": [[119, "gditeration"]], "HQSIteration": [[120, "hqsiteration"]], "PGDIteration": [[121, "pgditeration"]], "Examples using PGDIteration:": [[121, "examples-using-pgditeration"]], "conjugate_gradient": [[122, "conjugate-gradient"]], "gradient_descent": [[123, "gradient-descent"]], "BlindBlur": [[124, "blindblur"]], "Examples using Blur:": [[125, "examples-using-blur"]], "BlurFFT": [[126, "blurfft"]], "Examples using BlurFFT:": [[126, "examples-using-blurfft"]], "CompressedSensing": [[127, "compressedsensing"]], "Examples using CompressedSensing:": [[127, "examples-using-compressedsensing"]], "Examples using Decolorize:": [[128, "examples-using-decolorize"]], "DecomposablePhysics": [[129, "decomposablephysics"]], "Examples using DecomposablePhysics:": [[129, "examples-using-decomposablephysics"]], "Examples using Denoising:": [[130, "examples-using-denoising"]], "Downsampling": [[131, "downsampling"]], "Examples using Downsampling:": [[131, "examples-using-downsampling"]], "GaussianNoise": [[132, "gaussiannoise"]], "Examples using GaussianNoise:": [[132, "examples-using-gaussiannoise"]], "Haze": [[133, "haze"]], "Examples using Inpainting:": [[134, "examples-using-inpainting"]], "LinearPhysics": [[135, "linearphysics"]], "Examples using LinearPhysics:": [[135, "examples-using-linearphysics"]], "LogPoissonNoise": [[136, "logpoissonnoise"]], "Examples using LogPoissonNoise:": [[136, "examples-using-logpoissonnoise"]], "Examples using MRI:": [[137, "examples-using-mri"]], "Pansharpen": [[138, "pansharpen"]], "Examples using Pansharpen:": [[138, "examples-using-pansharpen"]], "Examples using Physics:": [[139, "examples-using-physics"]], "PoissonGaussianNoise": [[140, "poissongaussiannoise"]], "Examples using PoissonGaussianNoise:": [[140, "examples-using-poissongaussiannoise"]], "PoissonNoise": [[141, "poissonnoise"]], "Examples using PoissonNoise:": [[141, "examples-using-poissonnoise"]], "SinglePhotonLidar": [[142, "singlephotonlidar"]], "Examples using SinglePhotonLidar:": [[142, "examples-using-singlephotonlidar"]], "SinglePixelCamera": [[143, "singlepixelcamera"]], "Examples using SinglePixelCamera:": [[143, "examples-using-singlepixelcamera"]], "Tomography": [[144, "tomography"]], "Examples using Tomography:": [[144, "examples-using-tomography"]], "UniformGaussianNoise": [[145, "uniformgaussiannoise"]], "UniformNoise": [[146, "uniformnoise"]], "adjoint_function": [[147, "adjoint-function"], [149, "adjoint-function"]], "gaussian_blur": [[148, "gaussian-blur"]], "Examples using gaussian_blur:": [[148, "examples-using-gaussian-blur"]], "DDRM": [[150, "ddrm"]], "Examples using DDRM:": [[150, "examples-using-ddrm"]], "DPS": [[151, "dps"]], "Examples using DPS:": [[151, "examples-using-dps"]], "DiffPIR": [[152, "diffpir"]], "Examples using DiffPIR:": [[152, "examples-using-diffpir"]], "DiffusionSampler": [[153, "diffusionsampler"]], "Examples using DiffusionSampler:": [[153, "examples-using-diffusionsampler"]], "MonteCarlo": [[154, "montecarlo"]], "Examples using MonteCarlo:": [[154, "examples-using-montecarlo"]], "SKRock": [[155, "skrock"]], "ULA": [[156, "ula"]], "Examples using ULA:": [[156, "examples-using-ula"]], "test": [[157, "test"]], "Examples using test:": [[157, "examples-using-test"]], "train": [[158, "train"]], "Examples using train:": [[158, "examples-using-train"]], "train_normalizing_flow": [[159, "train-normalizing-flow"]], "Examples using train_normalizing_flow:": [[159, "examples-using-train-normalizing-flow"]], "Rotate": [[160, "rotate"]], "Examples using Rotate:": [[160, "examples-using-rotate"]], "Scale": [[161, "scale"]], "Shift": [[162, "shift"]], "BaseDEQ": [[163, "basedeq"]], "Examples using BaseDEQ:": [[163, "examples-using-basedeq"]], "BaseUnfold": [[164, "baseunfold"]], "Examples using BaseUnfold:": [[164, "examples-using-baseunfold"]], "DEQ_builder": [[165, "deq-builder"]], "Examples using DEQ_builder:": [[165, "examples-using-deq-builder"]], "unfolded_builder": [[166, "unfolded-builder"]], "Examples using unfolded_builder:": [[166, "examples-using-unfolded-builder"]], "Examples using TensorList:": [[167, "examples-using-tensorlist"]], "cal_psnr": [[168, "cal-psnr"]], "Examples using cal_psnr:": [[168, "examples-using-cal-psnr"]], "get_freer_gpu": [[169, "get-freer-gpu"]], "Examples using get_freer_gpu:": [[169, "examples-using-get-freer-gpu"]], "load_url_image": [[170, "load-url-image"]], "Examples using load_url_image:": [[170, "examples-using-load-url-image"]], "ones_like": [[171, "ones-like"]], "plot": [[172, "plot"]], "Examples using plot:": [[172, "examples-using-plot"]], "plot_curves": [[173, "plot-curves"]], "Examples using plot_curves:": [[173, "examples-using-plot-curves"]], "plot_parameters": [[174, "plot-parameters"]], "Examples using plot_parameters:": [[174, "examples-using-plot-parameters"]], "rand_like": [[175, "rand-like"]], "randn_like": [[176, "randn-like"]], "zeros_like": [[177, "zeros-like"]]}, "indexentries": {"hdf5dataset (class in deepinv.datasets)": [[56, "deepinv.datasets.HDF5Dataset"]], "patchdataset (class in deepinv.datasets)": [[57, "deepinv.datasets.PatchDataset"]], "generate_dataset (class in deepinv.datasets)": [[58, "deepinv.datasets.generate_dataset"]], "charbonnierloss (class in deepinv.loss)": [[59, "deepinv.loss.CharbonnierLoss"]], "forward() (deepinv.loss.charbonnierloss method)": [[59, "deepinv.loss.CharbonnierLoss.forward"]], "eiloss (class in deepinv.loss)": [[60, "deepinv.loss.EILoss"]], "forward() (deepinv.loss.eiloss method)": [[60, "deepinv.loss.EILoss.forward"]], "fnejacobianspectralnorm (class in deepinv.loss)": [[61, "deepinv.loss.FNEJacobianSpectralNorm"]], "forward() (deepinv.loss.fnejacobianspectralnorm method)": [[61, "deepinv.loss.FNEJacobianSpectralNorm.forward"]], "jacobianspectralnorm (class in deepinv.loss)": [[62, "deepinv.loss.JacobianSpectralNorm"]], "forward() (deepinv.loss.jacobianspectralnorm method)": [[62, "deepinv.loss.JacobianSpectralNorm.forward"]], "lpnorm (class in deepinv.loss)": [[63, "deepinv.loss.LpNorm"]], "forward() (deepinv.loss.lpnorm method)": [[63, "deepinv.loss.LpNorm.forward"]], "mcloss (class in deepinv.loss)": [[64, "deepinv.loss.MCLoss"]], "forward() (deepinv.loss.mcloss method)": [[64, "deepinv.loss.MCLoss.forward"]], "moiloss (class in deepinv.loss)": [[65, "deepinv.loss.MOILoss"]], "forward() (deepinv.loss.moiloss method)": [[65, "deepinv.loss.MOILoss.forward"]], "neighbor2neighbor (class in deepinv.loss)": [[66, "deepinv.loss.Neighbor2Neighbor"]], "forward() (deepinv.loss.neighbor2neighbor method)": [[66, "deepinv.loss.Neighbor2Neighbor.forward"]], "r2rloss (class in deepinv.loss)": [[67, "deepinv.loss.R2RLoss"]], "forward() (deepinv.loss.r2rloss method)": [[67, "deepinv.loss.R2RLoss.forward"]], "splittingloss (class in deepinv.loss)": [[68, "deepinv.loss.SplittingLoss"]], "forward() (deepinv.loss.splittingloss method)": [[68, "deepinv.loss.SplittingLoss.forward"]], "suploss (class in deepinv.loss)": [[69, "deepinv.loss.SupLoss"]], "forward() (deepinv.loss.suploss method)": [[69, "deepinv.loss.SupLoss.forward"]], "suregaussianloss (class in deepinv.loss)": [[70, "deepinv.loss.SureGaussianLoss"]], "forward() (deepinv.loss.suregaussianloss method)": [[70, "deepinv.loss.SureGaussianLoss.forward"]], "surepgloss (class in deepinv.loss)": [[71, "deepinv.loss.SurePGLoss"]], "forward() (deepinv.loss.surepgloss method)": [[71, "deepinv.loss.SurePGLoss.forward"]], "surepoissonloss (class in deepinv.loss)": [[72, "deepinv.loss.SurePoissonLoss"]], "forward() (deepinv.loss.surepoissonloss method)": [[72, "deepinv.loss.SurePoissonLoss.forward"]], "tvloss (class in deepinv.loss)": [[73, "deepinv.loss.TVLoss"]], "forward() (deepinv.loss.tvloss method)": [[73, "deepinv.loss.TVLoss.forward"]], "artifactremoval (class in deepinv.models)": [[74, "deepinv.models.ArtifactRemoval"]], "forward() (deepinv.models.artifactremoval method)": [[74, "deepinv.models.ArtifactRemoval.forward"]], "autoencoder (class in deepinv.models)": [[75, "deepinv.models.AutoEncoder"]], "forward() (deepinv.models.autoencoder method)": [[75, "deepinv.models.AutoEncoder.forward"]], "bm3d (class in deepinv.models)": [[76, "deepinv.models.BM3D"]], "forward() (deepinv.models.bm3d method)": [[76, "deepinv.models.BM3D.forward"]], "convdecoder (class in deepinv.models)": [[77, "deepinv.models.ConvDecoder"]], "forward() (deepinv.models.convdecoder method)": [[77, "deepinv.models.ConvDecoder.forward"]], "drunet (class in deepinv.models)": [[78, "deepinv.models.DRUNet"]], "forward() (deepinv.models.drunet method)": [[78, "deepinv.models.DRUNet.forward"]], "deepimageprior (class in deepinv.models)": [[79, "deepinv.models.DeepImagePrior"]], "forward() (deepinv.models.deepimageprior method)": [[79, "deepinv.models.DeepImagePrior.forward"]], "diffunet (class in deepinv.models)": [[80, "deepinv.models.DiffUNet"]], "convert_to_fp16() (deepinv.models.diffunet method)": [[80, "deepinv.models.DiffUNet.convert_to_fp16"]], "convert_to_fp32() (deepinv.models.diffunet method)": [[80, "deepinv.models.DiffUNet.convert_to_fp32"]], "find_nearest() (deepinv.models.diffunet method)": [[80, "deepinv.models.DiffUNet.find_nearest"]], "forward() (deepinv.models.diffunet method)": [[80, "deepinv.models.DiffUNet.forward"]], "forward_denoise() (deepinv.models.diffunet method)": [[80, "deepinv.models.DiffUNet.forward_denoise"]], "forward_diffusion() (deepinv.models.diffunet method)": [[80, "deepinv.models.DiffUNet.forward_diffusion"]], "get_alpha_prod() (deepinv.models.diffunet method)": [[80, "deepinv.models.DiffUNet.get_alpha_prod"]], "dncnn (class in deepinv.models)": [[81, "deepinv.models.DnCNN"]], "forward() (deepinv.models.dncnn method)": [[81, "deepinv.models.DnCNN.forward"]], "epll (class in deepinv.models)": [[82, "deepinv.models.EPLL"]], "forward() (deepinv.models.epll method)": [[82, "deepinv.models.EPLL.forward"]], "negative_log_likelihood() (deepinv.models.epll method)": [[82, "deepinv.models.EPLL.negative_log_likelihood"]], "reconstruction() (deepinv.models.epll method)": [[82, "deepinv.models.EPLL.reconstruction"]], "equivariantdenoiser (class in deepinv.models)": [[83, "deepinv.models.EquivariantDenoiser"]], "forward() (deepinv.models.equivariantdenoiser method)": [[83, "deepinv.models.EquivariantDenoiser.forward"]], "gsdrunet (class in deepinv.models)": [[84, "deepinv.models.GSDRUNet"]], "medianfilter (class in deepinv.models)": [[85, "deepinv.models.MedianFilter"]], "forward() (deepinv.models.medianfilter method)": [[85, "deepinv.models.MedianFilter.forward"]], "pdnet_dualblock (class in deepinv.models)": [[86, "deepinv.models.PDNet_DualBlock"]], "forward() (deepinv.models.pdnet_dualblock method)": [[86, "deepinv.models.PDNet_DualBlock.forward"]], "pdnet_primalblock (class in deepinv.models)": [[87, "deepinv.models.PDNet_PrimalBlock"]], "forward() (deepinv.models.pdnet_primalblock method)": [[87, "deepinv.models.PDNet_PrimalBlock.forward"]], "patchnr (class in deepinv.models)": [[88, "deepinv.models.PatchNR"]], "forward() (deepinv.models.patchnr method)": [[88, "deepinv.models.PatchNR.forward"]], "scunet (class in deepinv.models)": [[89, "deepinv.models.SCUNet"]], "forward() (deepinv.models.scunet method)": [[89, "deepinv.models.SCUNet.forward"]], "swinir (class in deepinv.models)": [[90, "deepinv.models.SwinIR"]], "forward() (deepinv.models.swinir method)": [[90, "deepinv.models.SwinIR.forward"]], "tgvdenoiser (class in deepinv.models)": [[91, "deepinv.models.TGVDenoiser"]], "epsilon() (deepinv.models.tgvdenoiser static method)": [[91, "deepinv.models.TGVDenoiser.epsilon"]], "epsilon_adjoint() (deepinv.models.tgvdenoiser static method)": [[91, "deepinv.models.TGVDenoiser.epsilon_adjoint"]], "forward() (deepinv.models.tgvdenoiser method)": [[91, "deepinv.models.TGVDenoiser.forward"]], "nabla() (deepinv.models.tgvdenoiser static method)": [[91, "deepinv.models.TGVDenoiser.nabla"]], "nabla_adjoint() (deepinv.models.tgvdenoiser static method)": [[91, "deepinv.models.TGVDenoiser.nabla_adjoint"]], "tvdenoiser (class in deepinv.models)": [[92, "deepinv.models.TVDenoiser"]], "forward() (deepinv.models.tvdenoiser method)": [[92, "deepinv.models.TVDenoiser.forward"]], "nabla() (deepinv.models.tvdenoiser static method)": [[92, "deepinv.models.TVDenoiser.nabla"]], "nabla_adjoint() (deepinv.models.tvdenoiser static method)": [[92, "deepinv.models.TVDenoiser.nabla_adjoint"]], "unet (class in deepinv.models)": [[93, "deepinv.models.UNet"]], "forward() (deepinv.models.unet method)": [[93, "deepinv.models.UNet.forward"]], "waveletdenoiser (class in deepinv.models)": [[94, "deepinv.models.WaveletDenoiser"]], "crop_output() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.crop_output"]], "dwt() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.dwt"]], "flatten_coeffs() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.flatten_coeffs"]], "forward() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.forward"]], "hard_threshold_topk() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.hard_threshold_topk"]], "iwt() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.iwt"]], "pad_input() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.pad_input"]], "prox_l0() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.prox_l0"]], "prox_l1() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.prox_l1"]], "psi() (deepinv.models.waveletdenoiser static method)": [[94, "deepinv.models.WaveletDenoiser.psi"]], "reshape_ths() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.reshape_ths"]], "threshold_3d() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.threshold_3D"]], "threshold_nd() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.threshold_ND"]], "thresold_2d() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.thresold_2D"]], "thresold_func() (deepinv.models.waveletdenoiser method)": [[94, "deepinv.models.WaveletDenoiser.thresold_func"]], "waveletdictdenoiser (class in deepinv.models)": [[95, "deepinv.models.WaveletDictDenoiser"]], "forward() (deepinv.models.waveletdictdenoiser method)": [[95, "deepinv.models.WaveletDictDenoiser.forward"]], "gaussianmixturemodel (class in deepinv.models.epll)": [[96, "deepinv.models.epll.GaussianMixtureModel"]], "classify() (deepinv.models.epll.gaussianmixturemodel method)": [[96, "deepinv.models.epll.GaussianMixtureModel.classify"]], "component_log_likelihoods() (deepinv.models.epll.gaussianmixturemodel method)": [[96, "deepinv.models.epll.GaussianMixtureModel.component_log_likelihoods"]], "fit() (deepinv.models.epll.gaussianmixturemodel method)": [[96, "deepinv.models.epll.GaussianMixtureModel.fit"]], "forward() (deepinv.models.epll.gaussianmixturemodel method)": [[96, "deepinv.models.epll.GaussianMixtureModel.forward"]], "get_cov() (deepinv.models.epll.gaussianmixturemodel method)": [[96, "deepinv.models.epll.GaussianMixtureModel.get_cov"]], "get_cov_inv_reg() (deepinv.models.epll.gaussianmixturemodel method)": [[96, "deepinv.models.epll.GaussianMixtureModel.get_cov_inv_reg"]], "get_weights() (deepinv.models.epll.gaussianmixturemodel method)": [[96, "deepinv.models.epll.GaussianMixtureModel.get_weights"]], "load_state_dict() (deepinv.models.epll.gaussianmixturemodel method)": [[96, "deepinv.models.epll.GaussianMixtureModel.load_state_dict"]], "set_cov() (deepinv.models.epll.gaussianmixturemodel method)": [[96, "deepinv.models.epll.GaussianMixtureModel.set_cov"]], "set_cov_reg() (deepinv.models.epll.gaussianmixturemodel method)": [[96, "deepinv.models.epll.GaussianMixtureModel.set_cov_reg"]], "set_weights() (deepinv.models.epll.gaussianmixturemodel method)": [[96, "deepinv.models.epll.GaussianMixtureModel.set_weights"]], "baseoptim (class in deepinv.optim)": [[97, "deepinv.optim.BaseOptim"]], "check_conv_fn() (deepinv.optim.baseoptim method)": [[97, "deepinv.optim.BaseOptim.check_conv_fn"]], "check_iteration_fn() (deepinv.optim.baseoptim method)": [[97, "deepinv.optim.BaseOptim.check_iteration_fn"]], "forward() (deepinv.optim.baseoptim method)": [[97, "deepinv.optim.BaseOptim.forward"]], "init_iterate_fn() (deepinv.optim.baseoptim method)": [[97, "deepinv.optim.BaseOptim.init_iterate_fn"]], "init_metrics_fn() (deepinv.optim.baseoptim method)": [[97, "deepinv.optim.BaseOptim.init_metrics_fn"]], "update_data_fidelity_fn() (deepinv.optim.baseoptim method)": [[97, "deepinv.optim.BaseOptim.update_data_fidelity_fn"]], "update_metrics_fn() (deepinv.optim.baseoptim method)": [[97, "deepinv.optim.BaseOptim.update_metrics_fn"]], "update_params_fn() (deepinv.optim.baseoptim method)": [[97, "deepinv.optim.BaseOptim.update_params_fn"]], "update_prior_fn() (deepinv.optim.baseoptim method)": [[97, "deepinv.optim.BaseOptim.update_prior_fn"]], "datafidelity (class in deepinv.optim)": [[98, "deepinv.optim.DataFidelity"]], "d() (deepinv.optim.datafidelity method)": [[98, "deepinv.optim.DataFidelity.d"]], "forward() (deepinv.optim.datafidelity method)": [[98, "deepinv.optim.DataFidelity.forward"]], "grad() (deepinv.optim.datafidelity method)": [[98, "deepinv.optim.DataFidelity.grad"]], "grad_d() (deepinv.optim.datafidelity method)": [[98, "deepinv.optim.DataFidelity.grad_d"]], "prox() (deepinv.optim.datafidelity method)": [[98, "deepinv.optim.DataFidelity.prox"]], "prox_conjugate() (deepinv.optim.datafidelity method)": [[98, "deepinv.optim.DataFidelity.prox_conjugate"]], "prox_d() (deepinv.optim.datafidelity method)": [[98, "deepinv.optim.DataFidelity.prox_d"]], "prox_d_conjugate() (deepinv.optim.datafidelity method)": [[98, "deepinv.optim.DataFidelity.prox_d_conjugate"]], "fixedpoint (class in deepinv.optim)": [[99, "deepinv.optim.FixedPoint"]], "anderson_acceleration_step() (deepinv.optim.fixedpoint method)": [[99, "deepinv.optim.FixedPoint.anderson_acceleration_step"]], "forward() (deepinv.optim.fixedpoint method)": [[99, "deepinv.optim.FixedPoint.forward"]], "init_anderson_acceleration() (deepinv.optim.fixedpoint method)": [[99, "deepinv.optim.FixedPoint.init_anderson_acceleration"]], "indicatorl2 (class in deepinv.optim)": [[100, "deepinv.optim.IndicatorL2"]], "d() (deepinv.optim.indicatorl2 method)": [[100, "deepinv.optim.IndicatorL2.d"]], "prox() (deepinv.optim.indicatorl2 method)": [[100, "deepinv.optim.IndicatorL2.prox"]], "prox_d() (deepinv.optim.indicatorl2 method)": [[100, "deepinv.optim.IndicatorL2.prox_d"]], "l1 (class in deepinv.optim)": [[101, "deepinv.optim.L1"]], "d() (deepinv.optim.l1 method)": [[101, "deepinv.optim.L1.d"]], "grad_d() (deepinv.optim.l1 method)": [[101, "deepinv.optim.L1.grad_d"]], "prox() (deepinv.optim.l1 method)": [[101, "deepinv.optim.L1.prox"]], "prox_d() (deepinv.optim.l1 method)": [[101, "deepinv.optim.L1.prox_d"]], "l1prior (class in deepinv.optim)": [[102, "deepinv.optim.L1Prior"]], "g() (deepinv.optim.l1prior method)": [[102, "deepinv.optim.L1Prior.g"]], "prox() (deepinv.optim.l1prior method)": [[102, "deepinv.optim.L1Prior.prox"]], "l2 (class in deepinv.optim)": [[103, "deepinv.optim.L2"]], "d() (deepinv.optim.l2 method)": [[103, "deepinv.optim.L2.d"]], "grad_d() (deepinv.optim.l2 method)": [[103, "deepinv.optim.L2.grad_d"]], "prox() (deepinv.optim.l2 method)": [[103, "deepinv.optim.L2.prox"]], "prox_d() (deepinv.optim.l2 method)": [[103, "deepinv.optim.L2.prox_d"]], "logpoissonlikelihood (class in deepinv.optim)": [[104, "deepinv.optim.LogPoissonLikelihood"]], "d() (deepinv.optim.logpoissonlikelihood method)": [[104, "deepinv.optim.LogPoissonLikelihood.d"]], "optimiterator (class in deepinv.optim)": [[105, "deepinv.optim.OptimIterator"]], "forward() (deepinv.optim.optimiterator method)": [[105, "deepinv.optim.OptimIterator.forward"]], "relaxation_step() (deepinv.optim.optimiterator method)": [[105, "deepinv.optim.OptimIterator.relaxation_step"]], "patchprior (class in deepinv.optim)": [[106, "deepinv.optim.PatchPrior"]], "g() (deepinv.optim.patchprior method)": [[106, "deepinv.optim.PatchPrior.g"]], "pnp (class in deepinv.optim)": [[107, "deepinv.optim.PnP"]], "prox() (deepinv.optim.pnp method)": [[107, "deepinv.optim.PnP.prox"]], "poissonlikelihood (class in deepinv.optim)": [[108, "deepinv.optim.PoissonLikelihood"]], "d() (deepinv.optim.poissonlikelihood method)": [[108, "deepinv.optim.PoissonLikelihood.d"]], "grad_d() (deepinv.optim.poissonlikelihood method)": [[108, "deepinv.optim.PoissonLikelihood.grad_d"]], "prox_d() (deepinv.optim.poissonlikelihood method)": [[108, "deepinv.optim.PoissonLikelihood.prox_d"]], "prior (class in deepinv.optim)": [[109, "deepinv.optim.Prior"]], "forward() (deepinv.optim.prior method)": [[109, "deepinv.optim.Prior.forward"]], "g() (deepinv.optim.prior method)": [[109, "deepinv.optim.Prior.g"]], "grad() (deepinv.optim.prior method)": [[109, "deepinv.optim.Prior.grad"]], "prox() (deepinv.optim.prior method)": [[109, "deepinv.optim.Prior.prox"]], "prox_conjugate() (deepinv.optim.prior method)": [[109, "deepinv.optim.Prior.prox_conjugate"]], "red (class in deepinv.optim)": [[110, "deepinv.optim.RED"]], "grad() (deepinv.optim.red method)": [[110, "deepinv.optim.RED.grad"]], "scoreprior (class in deepinv.optim)": [[111, "deepinv.optim.ScorePrior"]], "forward() (deepinv.optim.scoreprior method)": [[111, "deepinv.optim.ScorePrior.forward"]], "tvprior (class in deepinv.optim)": [[112, "deepinv.optim.TVPrior"]], "g() (deepinv.optim.tvprior method)": [[112, "deepinv.optim.TVPrior.g"]], "nabla() (deepinv.optim.tvprior method)": [[112, "deepinv.optim.TVPrior.nabla"]], "nabla_adjoint() (deepinv.optim.tvprior method)": [[112, "deepinv.optim.TVPrior.nabla_adjoint"]], "prox() (deepinv.optim.tvprior method)": [[112, "deepinv.optim.TVPrior.prox"]], "tikhonov (class in deepinv.optim)": [[113, "deepinv.optim.Tikhonov"]], "g() (deepinv.optim.tikhonov method)": [[113, "deepinv.optim.Tikhonov.g"]], "grad() (deepinv.optim.tikhonov method)": [[113, "deepinv.optim.Tikhonov.grad"]], "prox() (deepinv.optim.tikhonov method)": [[113, "deepinv.optim.Tikhonov.prox"]], "waveletprior (class in deepinv.optim)": [[114, "deepinv.optim.WaveletPrior"]], "g() (deepinv.optim.waveletprior method)": [[114, "deepinv.optim.WaveletPrior.g"]], "prox() (deepinv.optim.waveletprior method)": [[114, "deepinv.optim.WaveletPrior.prox"]], "psi() (deepinv.optim.waveletprior method)": [[114, "deepinv.optim.WaveletPrior.psi"]], "optim_builder() (in module deepinv.optim)": [[115, "deepinv.optim.optim_builder"]], "admmiteration (class in deepinv.optim.optim_iterators)": [[116, "deepinv.optim.optim_iterators.ADMMIteration"]], "forward() (deepinv.optim.optim_iterators.admmiteration method)": [[116, "deepinv.optim.optim_iterators.ADMMIteration.forward"]], "cpiteration (class in deepinv.optim.optim_iterators)": [[117, "deepinv.optim.optim_iterators.CPIteration"]], "forward() (deepinv.optim.optim_iterators.cpiteration method)": [[117, "deepinv.optim.optim_iterators.CPIteration.forward"]], "drsiteration (class in deepinv.optim.optim_iterators)": [[118, "deepinv.optim.optim_iterators.DRSIteration"]], "forward() (deepinv.optim.optim_iterators.drsiteration method)": [[118, "deepinv.optim.optim_iterators.DRSIteration.forward"]], "gditeration (class in deepinv.optim.optim_iterators)": [[119, "deepinv.optim.optim_iterators.GDIteration"]], "forward() (deepinv.optim.optim_iterators.gditeration method)": [[119, "deepinv.optim.optim_iterators.GDIteration.forward"]], "hqsiteration (class in deepinv.optim.optim_iterators)": [[120, "deepinv.optim.optim_iterators.HQSIteration"]], "pgditeration (class in deepinv.optim.optim_iterators)": [[121, "deepinv.optim.optim_iterators.PGDIteration"]], "conjugate_gradient (class in deepinv.optim.utils)": [[122, "deepinv.optim.utils.conjugate_gradient"]], "gradient_descent (class in deepinv.optim.utils)": [[123, "deepinv.optim.utils.gradient_descent"]], "a() (deepinv.physics.blindblur method)": [[124, "deepinv.physics.BlindBlur.A"]], "a_dagger() (deepinv.physics.blindblur method)": [[124, "deepinv.physics.BlindBlur.A_dagger"]], "blindblur (class in deepinv.physics)": [[124, "deepinv.physics.BlindBlur"]], "a() (deepinv.physics.blur method)": [[125, "deepinv.physics.Blur.A"]], "a_adjoint() (deepinv.physics.blur method)": [[125, "deepinv.physics.Blur.A_adjoint"]], "blur (class in deepinv.physics)": [[125, "deepinv.physics.Blur"]], "blurfft (class in deepinv.physics)": [[126, "deepinv.physics.BlurFFT"]], "a() (deepinv.physics.compressedsensing method)": [[127, "deepinv.physics.CompressedSensing.A"]], "a_adjoint() (deepinv.physics.compressedsensing method)": [[127, "deepinv.physics.CompressedSensing.A_adjoint"]], "a_dagger() (deepinv.physics.compressedsensing method)": [[127, "deepinv.physics.CompressedSensing.A_dagger"]], "compressedsensing (class in deepinv.physics)": [[127, "deepinv.physics.CompressedSensing"]], "decolorize (class in deepinv.physics)": [[128, "deepinv.physics.Decolorize"]], "a() (deepinv.physics.decomposablephysics method)": [[129, "deepinv.physics.DecomposablePhysics.A"]], "a_adjoint() (deepinv.physics.decomposablephysics method)": [[129, "deepinv.physics.DecomposablePhysics.A_adjoint"]], "a_dagger() (deepinv.physics.decomposablephysics method)": [[129, "deepinv.physics.DecomposablePhysics.A_dagger"]], "decomposablephysics (class in deepinv.physics)": [[129, "deepinv.physics.DecomposablePhysics"]], "prox_l2() (deepinv.physics.decomposablephysics method)": [[129, "deepinv.physics.DecomposablePhysics.prox_l2"]], "denoising (class in deepinv.physics)": [[130, "deepinv.physics.Denoising"]], "a() (deepinv.physics.downsampling method)": [[131, "deepinv.physics.Downsampling.A"]], "a_adjoint() (deepinv.physics.downsampling method)": [[131, "deepinv.physics.Downsampling.A_adjoint"]], "downsampling (class in deepinv.physics)": [[131, "deepinv.physics.Downsampling"]], "prox_l2() (deepinv.physics.downsampling method)": [[131, "deepinv.physics.Downsampling.prox_l2"]], "gaussiannoise (class in deepinv.physics)": [[132, "deepinv.physics.GaussianNoise"]], "forward() (deepinv.physics.gaussiannoise method)": [[132, "deepinv.physics.GaussianNoise.forward"]], "a() (deepinv.physics.haze method)": [[133, "deepinv.physics.Haze.A"]], "a_dagger() (deepinv.physics.haze method)": [[133, "deepinv.physics.Haze.A_dagger"]], "haze (class in deepinv.physics)": [[133, "deepinv.physics.Haze"]], "inpainting (class in deepinv.physics)": [[134, "deepinv.physics.Inpainting"]], "noise() (deepinv.physics.inpainting method)": [[134, "deepinv.physics.Inpainting.noise"]], "a_adjoint() (deepinv.physics.linearphysics method)": [[135, "deepinv.physics.LinearPhysics.A_adjoint"]], "a_dagger() (deepinv.physics.linearphysics method)": [[135, "deepinv.physics.LinearPhysics.A_dagger"]], "linearphysics (class in deepinv.physics)": [[135, "deepinv.physics.LinearPhysics"]], "__add__() (deepinv.physics.linearphysics method)": [[135, "deepinv.physics.LinearPhysics.__add__"]], "__mul__() (deepinv.physics.linearphysics method)": [[135, "deepinv.physics.LinearPhysics.__mul__"]], "adjointness_test() (deepinv.physics.linearphysics method)": [[135, "deepinv.physics.LinearPhysics.adjointness_test"]], "compute_norm() (deepinv.physics.linearphysics method)": [[135, "deepinv.physics.LinearPhysics.compute_norm"]], "prox_l2() (deepinv.physics.linearphysics method)": [[135, "deepinv.physics.LinearPhysics.prox_l2"]], "logpoissonnoise (class in deepinv.physics)": [[136, "deepinv.physics.LogPoissonNoise"]], "forward() (deepinv.physics.logpoissonnoise method)": [[136, "deepinv.physics.LogPoissonNoise.forward"]], "mri (class in deepinv.physics)": [[137, "deepinv.physics.MRI"]], "reset() (deepinv.physics.mri method)": [[137, "deepinv.physics.MRI.reset"]], "sample_mask() (deepinv.physics.mri method)": [[137, "deepinv.physics.MRI.sample_mask"]], "a() (deepinv.physics.pansharpen method)": [[138, "deepinv.physics.Pansharpen.A"]], "a_adjoint() (deepinv.physics.pansharpen method)": [[138, "deepinv.physics.Pansharpen.A_adjoint"]], "pansharpen (class in deepinv.physics)": [[138, "deepinv.physics.Pansharpen"]], "forward() (deepinv.physics.pansharpen method)": [[138, "deepinv.physics.Pansharpen.forward"]], "a() (deepinv.physics.physics method)": [[139, "deepinv.physics.Physics.A"]], "a_dagger() (deepinv.physics.physics method)": [[139, "deepinv.physics.Physics.A_dagger"]], "physics (class in deepinv.physics)": [[139, "deepinv.physics.Physics"]], "__add__() (deepinv.physics.physics method)": [[139, "deepinv.physics.Physics.__add__"]], "__mul__() (deepinv.physics.physics method)": [[139, "deepinv.physics.Physics.__mul__"]], "forward() (deepinv.physics.physics method)": [[139, "deepinv.physics.Physics.forward"]], "noise() (deepinv.physics.physics method)": [[139, "deepinv.physics.Physics.noise"]], "sensor() (deepinv.physics.physics method)": [[139, "deepinv.physics.Physics.sensor"]], "poissongaussiannoise (class in deepinv.physics)": [[140, "deepinv.physics.PoissonGaussianNoise"]], "forward() (deepinv.physics.poissongaussiannoise method)": [[140, "deepinv.physics.PoissonGaussianNoise.forward"]], "poissonnoise (class in deepinv.physics)": [[141, "deepinv.physics.PoissonNoise"]], "forward() (deepinv.physics.poissonnoise method)": [[141, "deepinv.physics.PoissonNoise.forward"]], "a() (deepinv.physics.singlephotonlidar method)": [[142, "deepinv.physics.SinglePhotonLidar.A"]], "a_dagger() (deepinv.physics.singlephotonlidar method)": [[142, "deepinv.physics.SinglePhotonLidar.A_dagger"]], "singlephotonlidar (class in deepinv.physics)": [[142, "deepinv.physics.SinglePhotonLidar"]], "singlepixelcamera (class in deepinv.physics)": [[143, "deepinv.physics.SinglePixelCamera"]], "a() (deepinv.physics.tomography method)": [[144, "deepinv.physics.Tomography.A"]], "a_adjoint() (deepinv.physics.tomography method)": [[144, "deepinv.physics.Tomography.A_adjoint"]], "a_dagger() (deepinv.physics.tomography method)": [[144, "deepinv.physics.Tomography.A_dagger"]], "tomography (class in deepinv.physics)": [[144, "deepinv.physics.Tomography"]], "uniformgaussiannoise (class in deepinv.physics)": [[145, "deepinv.physics.UniformGaussianNoise"]], "forward() (deepinv.physics.uniformgaussiannoise method)": [[145, "deepinv.physics.UniformGaussianNoise.forward"]], "uniformnoise (class in deepinv.physics)": [[146, "deepinv.physics.UniformNoise"]], "forward() (deepinv.physics.uniformnoise method)": [[146, "deepinv.physics.UniformNoise.forward"]], "adjoint_function (class in deepinv.physics)": [[147, "deepinv.physics.adjoint_function"]], "gaussian_blur() (in module deepinv.physics.blur)": [[148, "deepinv.physics.blur.gaussian_blur"]], "adjoint_function() (in module deepinv.physics.forward)": [[149, "deepinv.physics.forward.adjoint_function"]], "ddrm (class in deepinv.sampling)": [[150, "deepinv.sampling.DDRM"]], "forward() (deepinv.sampling.ddrm method)": [[150, "deepinv.sampling.DDRM.forward"]], "dps (class in deepinv.sampling)": [[151, "deepinv.sampling.DPS"]], "compute_alpha_betas() (deepinv.sampling.dps method)": [[151, "deepinv.sampling.DPS.compute_alpha_betas"]], "forward() (deepinv.sampling.dps method)": [[151, "deepinv.sampling.DPS.forward"]], "diffpir (class in deepinv.sampling)": [[152, "deepinv.sampling.DiffPIR"]], "find_nearest() (deepinv.sampling.diffpir method)": [[152, "deepinv.sampling.DiffPIR.find_nearest"]], "forward() (deepinv.sampling.diffpir method)": [[152, "deepinv.sampling.DiffPIR.forward"]], "get_alpha_beta() (deepinv.sampling.diffpir method)": [[152, "deepinv.sampling.DiffPIR.get_alpha_beta"]], "get_alpha_prod() (deepinv.sampling.diffpir method)": [[152, "deepinv.sampling.DiffPIR.get_alpha_prod"]], "get_noise_schedule() (deepinv.sampling.diffpir method)": [[152, "deepinv.sampling.DiffPIR.get_noise_schedule"]], "diffusionsampler (class in deepinv.sampling)": [[153, "deepinv.sampling.DiffusionSampler"]], "montecarlo (class in deepinv.sampling)": [[154, "deepinv.sampling.MonteCarlo"]], "forward() (deepinv.sampling.montecarlo method)": [[154, "deepinv.sampling.MonteCarlo.forward"]], "get_chain() (deepinv.sampling.montecarlo method)": [[154, "deepinv.sampling.MonteCarlo.get_chain"]], "mean_has_converged() (deepinv.sampling.montecarlo method)": [[154, "deepinv.sampling.MonteCarlo.mean_has_converged"]], "reset() (deepinv.sampling.montecarlo method)": [[154, "deepinv.sampling.MonteCarlo.reset"]], "var_has_converged() (deepinv.sampling.montecarlo method)": [[154, "deepinv.sampling.MonteCarlo.var_has_converged"]], "skrock (class in deepinv.sampling)": [[155, "deepinv.sampling.SKRock"]], "ula (class in deepinv.sampling)": [[156, "deepinv.sampling.ULA"]], "test() (in module deepinv)": [[157, "deepinv.test"]], "train() (in module deepinv)": [[158, "deepinv.train"]], "train_normalizing_flow() (in module deepinv.training_utils)": [[159, "deepinv.training_utils.train_normalizing_flow"]], "rotate (class in deepinv.transform)": [[160, "deepinv.transform.Rotate"]], "forward() (deepinv.transform.rotate method)": [[160, "deepinv.transform.Rotate.forward"]], "scale (class in deepinv.transform)": [[161, "deepinv.transform.Scale"]], "forward() (deepinv.transform.scale method)": [[161, "deepinv.transform.Scale.forward"]], "shift (class in deepinv.transform)": [[162, "deepinv.transform.Shift"]], "forward() (deepinv.transform.shift method)": [[162, "deepinv.transform.Shift.forward"]], "basedeq (class in deepinv.unfolded)": [[163, "deepinv.unfolded.BaseDEQ"]], "forward() (deepinv.unfolded.basedeq method)": [[163, "deepinv.unfolded.BaseDEQ.forward"]], "baseunfold (class in deepinv.unfolded)": [[164, "deepinv.unfolded.BaseUnfold"]], "deq_builder() (in module deepinv.unfolded)": [[165, "deepinv.unfolded.DEQ_builder"]], "unfolded_builder() (in module deepinv.unfolded)": [[166, "deepinv.unfolded.unfolded_builder"]], "tensorlist (class in deepinv.utils)": [[167, "deepinv.utils.TensorList"]], "__add__() (deepinv.utils.tensorlist method)": [[167, "deepinv.utils.TensorList.__add__"]], "__mul__() (deepinv.utils.tensorlist method)": [[167, "deepinv.utils.TensorList.__mul__"]], "__neg__() (deepinv.utils.tensorlist method)": [[167, "deepinv.utils.TensorList.__neg__"]], "__sub__() (deepinv.utils.tensorlist method)": [[167, "deepinv.utils.TensorList.__sub__"]], "__truediv__() (deepinv.utils.tensorlist method)": [[167, "deepinv.utils.TensorList.__truediv__"]], "append() (deepinv.utils.tensorlist method)": [[167, "deepinv.utils.TensorList.append"]], "conj() (deepinv.utils.tensorlist method)": [[167, "deepinv.utils.TensorList.conj"]], "flatten() (deepinv.utils.tensorlist method)": [[167, "deepinv.utils.TensorList.flatten"]], "cal_psnr() (in module deepinv.utils)": [[168, "deepinv.utils.cal_psnr"]], "get_freer_gpu() (in module deepinv.utils)": [[169, "deepinv.utils.get_freer_gpu"]], "load_url_image() (in module deepinv.utils)": [[170, "deepinv.utils.load_url_image"]], "ones_like() (in module deepinv.utils)": [[171, "deepinv.utils.ones_like"]], "plot() (in module deepinv.utils)": [[172, "deepinv.utils.plot"]], "plot_curves() (in module deepinv.utils)": [[173, "deepinv.utils.plot_curves"]], "plot_parameters() (in module deepinv.utils)": [[174, "deepinv.utils.plot_parameters"]], "rand_like() (in module deepinv.utils)": [[175, "deepinv.utils.rand_like"]], "randn_like() (in module deepinv.utils)": [[176, "deepinv.utils.randn_like"]], "zeros_like() (in module deepinv.utils)": [[177, "deepinv.utils.zeros_like"]]}})